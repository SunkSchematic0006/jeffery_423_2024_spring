Rules useless in parser due to conflicts

    5 namespace_alias: NAMESPACE_NAME

  461 constant_initializer_opt: %empty


State 0 conflicts: 2 shift/reduce
State 5 conflicts: 2 shift/reduce
State 6 conflicts: 1 shift/reduce
State 8 conflicts: 2 shift/reduce
State 32 conflicts: 2 shift/reduce
State 35 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 94 conflicts: 4 shift/reduce
State 95 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 116 conflicts: 1 shift/reduce
State 123 conflicts: 2 shift/reduce
State 129 conflicts: 3 shift/reduce
State 131 conflicts: 3 shift/reduce
State 138 conflicts: 3 shift/reduce
State 140 conflicts: 3 shift/reduce
State 141 conflicts: 2 reduce/reduce
State 155 conflicts: 1 reduce/reduce
State 159 conflicts: 2 shift/reduce
State 165 conflicts: 1 shift/reduce
State 190 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 208 conflicts: 1 shift/reduce, 5 reduce/reduce
State 209 conflicts: 2 shift/reduce
State 212 conflicts: 2 shift/reduce
State 214 conflicts: 3 shift/reduce
State 231 conflicts: 3 shift/reduce
State 232 conflicts: 3 shift/reduce
State 233 conflicts: 3 shift/reduce
State 238 conflicts: 3 shift/reduce
State 241 conflicts: 3 shift/reduce
State 244 conflicts: 3 shift/reduce
State 245 conflicts: 2 shift/reduce
State 263 conflicts: 3 shift/reduce
State 271 conflicts: 1 shift/reduce
State 282 conflicts: 2 shift/reduce
State 287 conflicts: 2 shift/reduce
State 288 conflicts: 3 shift/reduce
State 291 conflicts: 21 shift/reduce, 6 reduce/reduce
State 294 conflicts: 2 shift/reduce, 5 reduce/reduce
State 307 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 312 conflicts: 3 shift/reduce
State 315 conflicts: 1 shift/reduce
State 318 conflicts: 3 shift/reduce
State 331 conflicts: 3 reduce/reduce
State 351 conflicts: 2 shift/reduce
State 358 conflicts: 1 shift/reduce
State 360 conflicts: 1 shift/reduce
State 371 conflicts: 1 shift/reduce
State 383 conflicts: 3 shift/reduce
State 388 conflicts: 3 shift/reduce
State 394 conflicts: 1 shift/reduce, 4 reduce/reduce
State 395 conflicts: 3 shift/reduce
State 396 conflicts: 3 shift/reduce
State 397 conflicts: 1 shift/reduce, 4 reduce/reduce
State 399 conflicts: 3 shift/reduce
State 401 conflicts: 3 shift/reduce
State 402 conflicts: 3 shift/reduce
State 403 conflicts: 3 shift/reduce
State 404 conflicts: 3 shift/reduce
State 405 conflicts: 3 shift/reduce
State 406 conflicts: 3 shift/reduce
State 407 conflicts: 3 shift/reduce
State 408 conflicts: 3 shift/reduce
State 409 conflicts: 3 shift/reduce
State 410 conflicts: 3 shift/reduce
State 411 conflicts: 3 shift/reduce
State 412 conflicts: 3 shift/reduce
State 413 conflicts: 3 shift/reduce
State 414 conflicts: 3 shift/reduce
State 415 conflicts: 3 shift/reduce
State 416 conflicts: 3 shift/reduce
State 417 conflicts: 3 shift/reduce
State 418 conflicts: 3 shift/reduce
State 419 conflicts: 3 shift/reduce
State 430 conflicts: 3 shift/reduce
State 431 conflicts: 3 shift/reduce
State 433 conflicts: 3 shift/reduce
State 434 conflicts: 3 shift/reduce
State 435 conflicts: 3 shift/reduce
State 436 conflicts: 1 shift/reduce
State 438 conflicts: 3 shift/reduce
State 444 conflicts: 3 shift/reduce
State 447 conflicts: 21 shift/reduce, 6 reduce/reduce
State 452 conflicts: 3 shift/reduce
State 462 conflicts: 21 shift/reduce, 6 reduce/reduce
State 472 conflicts: 1 shift/reduce
State 474 conflicts: 1 shift/reduce
State 488 conflicts: 3 shift/reduce
State 489 conflicts: 2 reduce/reduce
State 502 conflicts: 2 shift/reduce
State 506 conflicts: 2 shift/reduce
State 508 conflicts: 2 shift/reduce
State 509 conflicts: 2 shift/reduce
State 516 conflicts: 1 shift/reduce
State 517 conflicts: 1 shift/reduce
State 520 conflicts: 3 shift/reduce
State 524 conflicts: 3 shift/reduce
State 526 conflicts: 3 shift/reduce
State 538 conflicts: 3 shift/reduce
State 539 conflicts: 3 shift/reduce
State 542 conflicts: 2 shift/reduce
State 562 conflicts: 1 shift/reduce
State 563 conflicts: 1 shift/reduce
State 574 conflicts: 3 shift/reduce
State 580 conflicts: 3 shift/reduce
State 585 conflicts: 21 shift/reduce, 6 reduce/reduce
State 587 conflicts: 21 shift/reduce, 6 reduce/reduce
State 589 conflicts: 3 shift/reduce
State 592 conflicts: 3 shift/reduce
State 594 conflicts: 3 shift/reduce
State 595 conflicts: 21 shift/reduce, 6 reduce/reduce
State 600 conflicts: 3 shift/reduce
State 602 conflicts: 3 shift/reduce
State 604 conflicts: 3 shift/reduce
State 609 conflicts: 3 shift/reduce
State 614 conflicts: 1 shift/reduce
State 615 conflicts: 3 shift/reduce
State 649 conflicts: 3 shift/reduce
State 651 conflicts: 3 shift/reduce
State 655 conflicts: 2 shift/reduce
State 659 conflicts: 21 shift/reduce, 6 reduce/reduce
State 663 conflicts: 3 shift/reduce
State 684 conflicts: 2 reduce/reduce
State 687 conflicts: 2 shift/reduce
State 689 conflicts: 2 shift/reduce
State 696 conflicts: 1 shift/reduce
State 698 conflicts: 3 shift/reduce
State 699 conflicts: 3 shift/reduce
State 700 conflicts: 3 shift/reduce
State 701 conflicts: 3 shift/reduce
State 710 conflicts: 3 shift/reduce
State 713 conflicts: 3 shift/reduce
State 716 conflicts: 2 shift/reduce
State 719 conflicts: 3 shift/reduce
State 722 conflicts: 21 shift/reduce, 6 reduce/reduce
State 724 conflicts: 21 shift/reduce, 6 reduce/reduce
State 725 conflicts: 21 shift/reduce, 6 reduce/reduce
State 744 conflicts: 3 shift/reduce
State 747 conflicts: 3 shift/reduce
State 748 conflicts: 1 shift/reduce
State 749 conflicts: 3 shift/reduce
State 771 conflicts: 21 shift/reduce, 6 reduce/reduce
State 780 conflicts: 21 shift/reduce, 6 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name
    3               | namespace_alias

    4 original_namespace_name: NAMESPACE_NAME

    5 namespace_alias: NAMESPACE_NAME

    6 class_name: CLASS_NAME
    7           | template_id

    8 enum_name: ENUM_NAME

    9 template_name: TEMPLATE_NAME

   10 identifier: IDENTIFIER

   11 literal: integer_literal
   12        | character_literal
   13        | floating_literal
   14        | string_literal
   15        | boolean_literal

   16 integer_literal: INTEGER

   17 character_literal: CHARACTER

   18 floating_literal: FLOATING

   19 string_literal: STRING

   20 boolean_literal: TRUE
   21                | FALSE

   22 translation_unit: declaration_seq_opt

   23 primary_expression: literal
   24                   | THIS
   25                   | COLONCOLON identifier
   26                   | COLONCOLON operator_function_id
   27                   | COLONCOLON qualified_id
   28                   | '(' expression ')'
   29                   | id_expression

   30 id_expression: unqualified_id
   31              | qualified_id

   32 unqualified_id: identifier
   33               | operator_function_id
   34               | conversion_function_id
   35               | '~' class_name
   36               | template_id

   37 qualified_id: nested_name_specifier TEMPLATE_opt unqualified_id

   38 nested_name_specifier: class_or_namespace_name COLONCOLON nested_name_specifier_opt

   39 class_or_namespace_name: class_name
   40                        | namespace_name

   41 postfix_expression: primary_expression
   42                   | postfix_expression '[' expression ']'
   43                   | postfix_expression '(' expression_list_opt ')'
   44                   | simple_type_specifier '(' expression_list_opt ')'
   45                   | postfix_expression '.' TEMPLATE_opt COLONCOLON_opt id_expression
   46                   | postfix_expression ARROW TEMPLATE_opt COLONCOLON_opt id_expression
   47                   | postfix_expression '.' pseudo_destructor_name
   48                   | postfix_expression ARROW pseudo_destructor_name
   49                   | postfix_expression PLUSPLUS
   50                   | postfix_expression MINUSMINUS
   51                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   52                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   53                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   54                   | CONST_CAST '<' type_id '>' '(' expression ')'
   55                   | TYPEID '(' expression ')'
   56                   | TYPEID '(' type_id ')'

   57 expression_list: assignment_expression
   58                | expression_list ',' assignment_expression

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt type_name COLONCOLON '~' type_name
   60                       | COLONCOLON_opt nested_name_specifier_opt '~' type_name

   61 unary_expression: postfix_expression
   62                 | PLUSPLUS cast_expression
   63                 | MINUSMINUS cast_expression
   64                 | unary_operator cast_expression
   65                 | SIZEOF unary_expression
   66                 | SIZEOF '(' type_id ')'
   67                 | new_expression
   68                 | delete_expression

   69 unary_operator: '*'
   70               | '&'
   71               | '+'
   72               | '-'
   73               | '!'
   74               | '~'

   75 new_expression: COLONCOLON_opt NEW new_placement_opt new_type_id new_initializer_opt
   76               | COLONCOLON_opt NEW new_placement_opt '(' type_id ')' new_initializer_opt

   77 new_placement: '(' expression_list ')'

   78 new_type_id: type_specifier_seq new_declarator_opt

   79 new_declarator: ptr_operator new_declarator_opt
   80               | direct_new_declarator

   81 direct_new_declarator: '[' expression ']'
   82                      | direct_new_declarator '[' constant_expression ']'

   83 new_initializer: '(' expression_list_opt ')'

   84 delete_expression: COLONCOLON_opt DELETE cast_expression
   85                  | COLONCOLON_opt DELETE '[' ']' cast_expression

   86 cast_expression: unary_expression
   87                | '(' type_id ')' cast_expression

   88 pm_expression: cast_expression
   89              | pm_expression DOTSTAR cast_expression
   90              | pm_expression ARROWSTAR cast_expression

   91 multiplicative_expression: pm_expression
   92                          | multiplicative_expression '*' pm_expression
   93                          | multiplicative_expression '/' pm_expression
   94                          | multiplicative_expression '%' pm_expression

   95 additive_expression: multiplicative_expression
   96                    | additive_expression '+' multiplicative_expression
   97                    | additive_expression '-' multiplicative_expression

   98 shift_expression: additive_expression
   99                 | shift_expression SL additive_expression
  100                 | shift_expression SR additive_expression

  101 relational_expression: shift_expression
  102                      | relational_expression '<' shift_expression
  103                      | relational_expression '>' shift_expression
  104                      | relational_expression LTEQ shift_expression
  105                      | relational_expression GTEQ shift_expression

  106 equality_expression: relational_expression
  107                    | equality_expression EQ relational_expression
  108                    | equality_expression NOTEQ relational_expression

  109 and_expression: equality_expression
  110               | and_expression '&' equality_expression

  111 exclusive_or_expression: and_expression
  112                        | exclusive_or_expression '^' and_expression

  113 inclusive_or_expression: exclusive_or_expression
  114                        | inclusive_or_expression '|' exclusive_or_expression

  115 logical_and_expression: inclusive_or_expression
  116                       | logical_and_expression ANDAND inclusive_or_expression

  117 logical_or_expression: logical_and_expression
  118                      | logical_or_expression OROR logical_and_expression

  119 conditional_expression: logical_or_expression
  120                       | logical_or_expression '?' expression ':' assignment_expression

  121 assignment_expression: conditional_expression
  122                      | logical_or_expression assignment_operator assignment_expression
  123                      | throw_expression

  124 assignment_operator: '='
  125                    | MULEQ
  126                    | DIVEQ
  127                    | MODEQ
  128                    | ADDEQ
  129                    | SUBEQ
  130                    | SREQ
  131                    | SLEQ
  132                    | ANDEQ
  133                    | XOREQ
  134                    | OREQ

  135 expression: assignment_expression
  136           | expression ',' assignment_expression

  137 constant_expression: conditional_expression

  138 statement: labeled_statement
  139          | expression_statement
  140          | compound_statement
  141          | selection_statement
  142          | iteration_statement
  143          | jump_statement
  144          | declaration_statement
  145          | try_block

  146 labeled_statement: identifier ':' statement
  147                  | CASE constant_expression ':' statement
  148                  | DEFAULT ':' statement

  149 expression_statement: expression_opt ';'

  150 compound_statement: '{' statement_seq_opt '}'

  151 statement_seq: statement
  152              | statement_seq statement

  153 selection_statement: IF '(' condition ')' statement
  154                    | IF '(' condition ')' statement ELSE statement
  155                    | SWITCH '(' condition ')' statement

  156 condition: expression
  157          | type_specifier_seq declarator '=' assignment_expression

  158 iteration_statement: WHILE '(' condition ')' statement
  159                    | DO statement WHILE '(' expression ')' ';'
  160                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  161 for_init_statement: expression_statement
  162                   | simple_declaration

  163 jump_statement: BREAK ';'
  164               | CONTINUE ';'
  165               | RETURN expression_opt ';'
  166               | GOTO identifier ';'

  167 declaration_statement: block_declaration

  168 declaration_seq: declaration
  169                | declaration_seq declaration

  170 declaration: block_declaration
  171            | function_definition
  172            | template_declaration
  173            | explicit_instantiation
  174            | explicit_specialization
  175            | linkage_specification
  176            | namespace_definition

  177 block_declaration: simple_declaration
  178                  | asm_definition
  179                  | namespace_alias_definition
  180                  | using_declaration
  181                  | using_directive

  182 simple_declaration: decl_specifier_seq_opt init_declarator_list_opt ';'

  183 decl_specifier: storage_class_specifier
  184               | type_specifier
  185               | function_specifier
  186               | FRIEND
  187               | TYPEDEF

  188 decl_specifier_seq: decl_specifier_seq_opt decl_specifier

  189 storage_class_specifier: AUTO
  190                        | REGISTER
  191                        | STATIC
  192                        | EXTERN
  193                        | MUTABLE

  194 function_specifier: INLINE
  195                   | VIRTUAL
  196                   | EXPLICIT

  197 type_specifier: simple_type_specifier
  198               | class_specifier
  199               | enum_specifier
  200               | elaborated_type_specifier
  201               | cv_qualifier

  202 simple_type_specifier: COLONCOLON_opt nested_name_specifier_opt type_name
  203                      | CHAR
  204                      | WCHAR_T
  205                      | BOOL
  206                      | SHORT
  207                      | INT
  208                      | LONG
  209                      | SIGNED
  210                      | UNSIGNED
  211                      | FLOAT
  212                      | DOUBLE
  213                      | VOID

  214 type_name: class_name
  215          | enum_name
  216          | typedef_name

  217 elaborated_type_specifier: class_key COLONCOLON_opt nested_name_specifier_opt identifier
  218                          | ENUM COLONCOLON_opt nested_name_specifier_opt identifier
  219                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  220                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  221 enum_specifier: ENUM identifier_opt '{' enumerator_list_opt '}'

  222 enumerator_list: enumerator_definition
  223                | enumerator_list ',' enumerator_definition

  224 enumerator_definition: enumerator
  225                      | enumerator '=' constant_expression

  226 enumerator: identifier

  227 namespace_definition: named_namespace_definition
  228                     | unnamed_namespace_definition

  229 named_namespace_definition: original_namespace_definition
  230                           | extension_namespace_definition

  231 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  232 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  233 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  234 namespace_body: declaration_seq_opt

  235 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  236 qualified_namespace_specifier: COLONCOLON_opt nested_name_specifier_opt namespace_name

  237 using_declaration: USING TYPENAME_opt COLONCOLON_opt nested_name_specifier unqualified_id ';'
  238                  | USING COLONCOLON unqualified_id ';'

  239 using_directive: USING NAMESPACE COLONCOLON_opt nested_name_specifier_opt namespace_name ';'

  240 asm_definition: ASM '(' string_literal ')' ';'

  241 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  242                      | EXTERN string_literal declaration

  243 init_declarator_list: init_declarator
  244                     | init_declarator_list ',' init_declarator

  245 init_declarator: declarator initializer_opt

  246 declarator: direct_declarator
  247           | ptr_operator declarator

  248 direct_declarator: declarator_id
  249                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt
  250                  | direct_declarator '[' constant_expression_opt ']'
  251                  | '(' declarator ')'

  252 ptr_operator: '*' cv_qualifier_seq_opt
  253             | '&'
  254             | COLONCOLON_opt nested_name_specifier '*' cv_qualifier_seq_opt

  255 cv_qualifier_seq: cv_qualifier cv_qualifier_seq_opt

  256 cv_qualifier: CONST
  257             | VOLATILE

  258 declarator_id: COLONCOLON_opt id_expression
  259              | COLONCOLON_opt nested_name_specifier_opt type_name

  260 type_id: type_specifier_seq abstract_declarator_opt

  261 type_specifier_seq: type_specifier type_specifier_seq_opt

  262 abstract_declarator: ptr_operator abstract_declarator_opt
  263                    | direct_abstract_declarator

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt
  265                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  266                           | '(' abstract_declarator ')'

  267 parameter_declaration_clause: parameter_declaration_list_opt ELLIPSIS_opt
  268                             | parameter_declaration_list ',' ELLIPSIS

  269 parameter_declaration_list: parameter_declaration
  270                           | parameter_declaration_list ',' parameter_declaration

  271 parameter_declaration: decl_specifier_seq declarator
  272                      | decl_specifier_seq declarator '=' assignment_expression
  273                      | decl_specifier_seq abstract_declarator_opt
  274                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  275 function_definition: decl_specifier_seq_opt declarator ctor_initializer_opt function_body
  276                    | decl_specifier_seq_opt declarator function_try_block

  277 function_body: compound_statement

  278 initializer: '=' initializer_clause
  279            | '(' expression_list ')'

  280 initializer_clause: assignment_expression
  281                   | '{' initializer_list COMMA_opt '}'
  282                   | '{' '}'

  283 initializer_list: initializer_clause
  284                 | initializer_list ',' initializer_clause

  285 class_specifier: class_head '{' member_specification_opt '}'

  286 class_head: class_key identifier_opt base_clause_opt
  287           | class_key nested_name_specifier identifier base_clause_opt

  288 class_key: CLASS
  289          | STRUCT
  290          | UNION

  291 member_specification: member_declaration member_specification_opt
  292                     | access_specifier ':' member_specification_opt

  293 member_declaration: decl_specifier_seq_opt member_declarator_list_opt ';'
  294                   | function_definition SEMICOLON_opt
  295                   | qualified_id ';'
  296                   | using_declaration
  297                   | template_declaration

  298 member_declarator_list: member_declarator
  299                       | member_declarator_list ',' member_declarator

  300 member_declarator: declarator pure_specifier_opt
  301                  | declarator constant_initializer_opt
  302                  | identifier_opt ':' constant_expression

  303 pure_specifier: '=' '0'

  304 constant_initializer: '=' constant_expression

  305 base_clause: ':' base_specifier_list

  306 base_specifier_list: base_specifier
  307                    | base_specifier_list ',' base_specifier

  308 base_specifier: COLONCOLON_opt nested_name_specifier_opt class_name
  309               | VIRTUAL access_specifier_opt COLONCOLON_opt nested_name_specifier_opt class_name
  310               | access_specifier VIRTUAL_opt COLONCOLON_opt nested_name_specifier_opt class_name

  311 access_specifier: PRIVATE
  312                 | PROTECTED
  313                 | PUBLIC

  314 conversion_function_id: OPERATOR conversion_type_id

  315 conversion_type_id: type_specifier_seq conversion_declarator_opt

  316 conversion_declarator: ptr_operator conversion_declarator_opt

  317 ctor_initializer: ':' mem_initializer_list

  318 mem_initializer_list: mem_initializer
  319                     | mem_initializer ',' mem_initializer_list

  320 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  321 mem_initializer_id: COLONCOLON_opt nested_name_specifier_opt class_name
  322                   | identifier

  323 operator_function_id: OPERATOR operator

  324 operator: NEW
  325         | DELETE
  326         | NEW '[' ']'
  327         | DELETE '[' ']'
  328         | '+'
  329         | '_'
  330         | '*'
  331         | '/'
  332         | '%'
  333         | '^'
  334         | '&'
  335         | '|'
  336         | '~'
  337         | '!'
  338         | '='
  339         | '<'
  340         | '>'
  341         | ADDEQ
  342         | SUBEQ
  343         | MULEQ
  344         | DIVEQ
  345         | MODEQ
  346         | XOREQ
  347         | ANDEQ
  348         | OREQ
  349         | SL
  350         | SR
  351         | SREQ
  352         | SLEQ
  353         | EQ
  354         | NOTEQ
  355         | LTEQ
  356         | GTEQ
  357         | ANDAND
  358         | OROR
  359         | PLUSPLUS
  360         | MINUSMINUS
  361         | ','
  362         | ARROWSTAR
  363         | ARROW
  364         | '(' ')'
  365         | '[' ']'

  366 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  367 template_parameter_list: template_parameter
  368                        | template_parameter_list ',' template_parameter

  369 template_parameter: type_parameter
  370                   | parameter_declaration

  371 type_parameter: CLASS identifier_opt
  372               | CLASS identifier_opt '=' type_id
  373               | TYPENAME identifier_opt
  374               | TYPENAME identifier_opt '=' type_id
  375               | TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt
  376               | TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt '=' template_name

  377 template_id: template_name '<' template_argument_list '>'

  378 template_argument_list: template_argument
  379                       | template_argument_list ',' template_argument

  380 template_argument: assignment_expression
  381                  | type_id
  382                  | template_name

  383 explicit_instantiation: TEMPLATE declaration

  384 explicit_specialization: TEMPLATE '<' '>' declaration

  385 try_block: TRY compound_statement handler_seq

  386 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  387 handler_seq: handler handler_seq_opt

  388 handler: CATCH '(' exception_declaration ')' compound_statement

  389 exception_declaration: type_specifier_seq declarator
  390                      | type_specifier_seq abstract_declarator
  391                      | type_specifier_seq
  392                      | ELLIPSIS

  393 throw_expression: THROW assignment_expression_opt

  394 exception_specification: THROW '(' type_id_list_opt ')'

  395 type_id_list: type_id
  396             | type_id_list ',' type_id

  397 declaration_seq_opt: %empty
  398                    | declaration_seq

  399 TEMPLATE_opt: %empty
  400             | TEMPLATE

  401 nested_name_specifier_opt: %empty
  402                          | nested_name_specifier

  403 expression_list_opt: %empty
  404                    | expression_list

  405 COLONCOLON_opt: %empty
  406               | COLONCOLON

  407 new_placement_opt: %empty
  408                  | new_placement

  409 new_initializer_opt: %empty
  410                    | new_initializer

  411 new_declarator_opt: %empty
  412                   | new_declarator

  413 expression_opt: %empty
  414               | expression

  415 statement_seq_opt: %empty
  416                  | statement_seq

  417 condition_opt: %empty
  418              | condition

  419 decl_specifier_seq_opt: %empty
  420                       | decl_specifier_seq

  421 init_declarator_list_opt: %empty
  422                         | init_declarator_list

  423 identifier_opt: %empty
  424               | identifier

  425 enumerator_list_opt: %empty
  426                    | enumerator_list

  427 TYPENAME_opt: %empty
  428             | TYPENAME

  429 initializer_opt: %empty
  430                | initializer

  431 cv_qualifier_seq_opt: %empty
  432                     | cv_qualifier_seq

  433 exception_specification_opt: %empty
  434                            | exception_specification

  435 constant_expression_opt: %empty
  436                        | constant_expression

  437 abstract_declarator_opt: %empty
  438                        | abstract_declarator

  439 type_specifier_seq_opt: %empty
  440                       | type_specifier_seq

  441 direct_abstract_declarator_opt: %empty
  442                               | direct_abstract_declarator

  443 parameter_declaration_list_opt: %empty
  444                               | parameter_declaration_list

  445 ELLIPSIS_opt: %empty
  446             | ELLIPSIS

  447 ctor_initializer_opt: %empty
  448                     | ctor_initializer

  449 COMMA_opt: %empty
  450          | ','

  451 member_specification_opt: %empty
  452                         | member_specification

  453 base_clause_opt: %empty
  454                | base_clause

  455 member_declarator_list_opt: %empty
  456                           | member_declarator_list

  457 SEMICOLON_opt: %empty
  458              | ';'

  459 pure_specifier_opt: %empty
  460                   | pure_specifier

  461 constant_initializer_opt: %empty
  462                         | constant_initializer

  463 access_specifier_opt: %empty
  464                     | access_specifier

  465 VIRTUAL_opt: %empty
  466            | VIRTUAL

  467 conversion_declarator_opt: %empty
  468                          | conversion_declarator

  469 EXPORT_opt: %empty
  470           | EXPORT

  471 handler_seq_opt: %empty
  472                | handler_seq

  473 assignment_expression_opt: %empty
  474                          | assignment_expression

  475 type_id_list_opt: %empty
  476                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73 337
'%' (37) 94 332
'&' (38) 70 110 253 334
'(' (40) 28 43 44 51 52 53 54 55 56 66 76 77 83 87 153 154 155 158
    159 160 240 249 251 264 266 279 320 364 388 394
')' (41) 28 43 44 51 52 53 54 55 56 66 76 77 83 87 153 154 155 158
    159 160 240 249 251 264 266 279 320 364 388 394
'*' (42) 69 92 252 254 330
'+' (43) 71 96 328
',' (44) 58 136 223 244 268 270 284 299 307 319 361 368 379 396 450
'-' (45) 72 97
'.' (46) 45 47
'/' (47) 93 331
'0' (48) 303
':' (58) 120 146 147 148 292 302 305 317
';' (59) 149 159 160 163 164 165 166 182 235 237 238 239 240 293 295
    458
'<' (60) 51 52 53 54 102 220 339 366 375 376 377 384
'=' (61) 124 157 225 235 272 274 278 303 304 338 372 374 376
'>' (62) 51 52 53 54 103 220 340 366 375 376 377 384
'?' (63) 120
'[' (91) 42 81 82 85 250 265 326 327 365
']' (93) 42 81 82 85 250 265 326 327 365
'^' (94) 112 333
'_' (95) 329
'{' (123) 150 221 231 232 233 241 281 282 285
'|' (124) 114 335
'}' (125) 150 221 231 232 233 241 281 282 285
'~' (126) 35 59 60 74 336
error (256)
IDENTIFIER (258) 10
INTEGER (259) 16
FLOATING (260) 18
CHARACTER (261) 17
STRING (262) 19
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 4 5
CLASS_NAME (265) 6
ENUM_NAME (266) 8
TEMPLATE_NAME (267) 9
ELLIPSIS (268) 268 392 446
COLONCOLON (269) 25 26 27 38 59 238 406
DOTSTAR (270) 89
ADDEQ (271) 128 341
SUBEQ (272) 129 342
MULEQ (273) 125 343
DIVEQ (274) 126 344
MODEQ (275) 127 345
XOREQ (276) 133 346
ANDEQ (277) 132 347
OREQ (278) 134 348
SL (279) 99 349
SR (280) 100 350
SREQ (281) 130 351
SLEQ (282) 131 352
EQ (283) 107 353
NOTEQ (284) 108 354
LTEQ (285) 104 355
GTEQ (286) 105 356
ANDAND (287) 116 357
OROR (288) 118 358
PLUSPLUS (289) 49 62 359
MINUSMINUS (290) 50 63 360
ARROWSTAR (291) 90 362
ARROW (292) 46 48 363
ASM (293) 240
AUTO (294) 189
BOOL (295) 205
BREAK (296) 163
CASE (297) 147
CATCH (298) 388
CHAR (299) 203
CLASS (300) 288 371 372 375 376
CONST (301) 256
CONST_CAST (302) 54
CONTINUE (303) 164
DEFAULT (304) 148
DELETE (305) 84 85 325 327
DO (306) 159
DOUBLE (307) 212
DYNAMIC_CAST (308) 51
ELSE (309) 154
ENUM (310) 218 221
EXPLICIT (311) 196
EXPORT (312) 470
EXTERN (313) 192 241 242
FALSE (314) 21
FLOAT (315) 211
FOR (316) 160
FRIEND (317) 186
GOTO (318) 166
IF (319) 153 154
INLINE (320) 194
INT (321) 207
LONG (322) 208
MUTABLE (323) 193
NAMESPACE (324) 231 232 233 235 239
NEW (325) 75 76 324 326
OPERATOR (326) 314 323
PRIVATE (327) 311
PROTECTED (328) 312
PUBLIC (329) 313
REGISTER (330) 190
REINTERPRET_CAST (331) 53
RETURN (332) 165
SHORT (333) 206
SIGNED (334) 209
SIZEOF (335) 65 66
STATIC (336) 191
STATIC_CAST (337) 52
STRUCT (338) 289
SWITCH (339) 155
TEMPLATE (340) 366 375 376 383 384 400
THIS (341) 24
THROW (342) 393 394
TRUE (343) 20
TRY (344) 385 386
TYPEDEF (345) 187
TYPEID (346) 55 56
TYPENAME (347) 219 220 373 374 428
UNION (348) 290
UNSIGNED (349) 210
USING (350) 237 238 239
VIRTUAL (351) 195 309 466
VOID (352) 213
VOLATILE (353) 257
WCHAR_T (354) 204
WHILE (355) 158 159


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 216
namespace_name (129)
    on left: 2 3, on right: 40 236 239
original_namespace_name (130)
    on left: 4, on right: 2 232
namespace_alias (131)
    on left: 5, on right: 3
class_name (132)
    on left: 6 7, on right: 35 39 214 308 309 310 321
enum_name (133)
    on left: 8, on right: 215
template_name (134)
    on left: 9, on right: 376 377 382
identifier (135)
    on left: 10, on right: 25 32 146 166 217 218 219 220 226 231 235
    287 322 424
literal (136)
    on left: 11 12 13 14 15, on right: 23
integer_literal (137)
    on left: 16, on right: 11
character_literal (138)
    on left: 17, on right: 12
floating_literal (139)
    on left: 18, on right: 13
string_literal (140)
    on left: 19, on right: 14 240 241 242
boolean_literal (141)
    on left: 20 21, on right: 15
translation_unit (142)
    on left: 22, on right: 0
primary_expression (143)
    on left: 23 24 25 26 27 28 29, on right: 41
id_expression (144)
    on left: 30 31, on right: 29 45 46 258
unqualified_id (145)
    on left: 32 33 34 35 36, on right: 30 37 237 238
qualified_id (146)
    on left: 37, on right: 27 31 295
nested_name_specifier (147)
    on left: 38, on right: 37 219 220 237 254 287 402
class_or_namespace_name (148)
    on left: 39 40, on right: 38
postfix_expression (149)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    42 43 45 46 47 48 49 50 61
expression_list (150)
    on left: 57 58, on right: 58 77 279 404
pseudo_destructor_name (151)
    on left: 59 60, on right: 47 48
unary_expression (152)
    on left: 61 62 63 64 65 66 67 68, on right: 65 86
unary_operator (153)
    on left: 69 70 71 72 73 74, on right: 64
new_expression (154)
    on left: 75 76, on right: 67
new_placement (155)
    on left: 77, on right: 408
new_type_id (156)
    on left: 78, on right: 75
new_declarator (157)
    on left: 79 80, on right: 412
direct_new_declarator (158)
    on left: 81 82, on right: 80 82
new_initializer (159)
    on left: 83, on right: 410
delete_expression (160)
    on left: 84 85, on right: 68
cast_expression (161)
    on left: 86 87, on right: 62 63 64 84 85 87 88 89 90
pm_expression (162)
    on left: 88 89 90, on right: 89 90 91 92 93 94
multiplicative_expression (163)
    on left: 91 92 93 94, on right: 92 93 94 95 96 97
additive_expression (164)
    on left: 95 96 97, on right: 96 97 98 99 100
shift_expression (165)
    on left: 98 99 100, on right: 99 100 101 102 103 104 105
relational_expression (166)
    on left: 101 102 103 104 105, on right: 102 103 104 105 106 107
    108
equality_expression (167)
    on left: 106 107 108, on right: 107 108 109 110
and_expression (168)
    on left: 109 110, on right: 110 111 112
exclusive_or_expression (169)
    on left: 111 112, on right: 112 113 114
inclusive_or_expression (170)
    on left: 113 114, on right: 114 115 116
logical_and_expression (171)
    on left: 115 116, on right: 116 117 118
logical_or_expression (172)
    on left: 117 118, on right: 118 119 120 122
conditional_expression (173)
    on left: 119 120, on right: 121 137
assignment_expression (174)
    on left: 121 122 123, on right: 57 58 120 122 135 136 157 272 274
    280 380 474
assignment_operator (175)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    122
expression (176)
    on left: 135 136, on right: 28 42 51 52 53 54 55 81 120 136 156
    159 414
constant_expression (177)
    on left: 137, on right: 82 147 225 302 304 436
statement (178)
    on left: 138 139 140 141 142 143 144 145, on right: 146 147 148
    151 152 153 154 155 158 159 160
labeled_statement (179)
    on left: 146 147 148, on right: 138
expression_statement (180)
    on left: 149, on right: 139 161
compound_statement (181)
    on left: 150, on right: 140 277 385 388
statement_seq (182)
    on left: 151 152, on right: 152 416
selection_statement (183)
    on left: 153 154 155, on right: 141
condition (184)
    on left: 156 157, on right: 153 154 155 158 418
iteration_statement (185)
    on left: 158 159 160, on right: 142
for_init_statement (186)
    on left: 161 162, on right: 160
jump_statement (187)
    on left: 163 164 165 166, on right: 143
declaration_statement (188)
    on left: 167, on right: 144
declaration_seq (189)
    on left: 168 169, on right: 169 398
declaration (190)
    on left: 170 171 172 173 174 175 176, on right: 168 169 242 366
    383 384
block_declaration (191)
    on left: 177 178 179 180 181, on right: 167 170
simple_declaration (192)
    on left: 182, on right: 162 177
decl_specifier (193)
    on left: 183 184 185 186 187, on right: 188
decl_specifier_seq (194)
    on left: 188, on right: 271 272 273 274 420
storage_class_specifier (195)
    on left: 189 190 191 192 193, on right: 183
function_specifier (196)
    on left: 194 195 196, on right: 185
type_specifier (197)
    on left: 197 198 199 200 201, on right: 184 261
simple_type_specifier (198)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213, on right:
    44 197
type_name (199)
    on left: 214 215 216, on right: 59 60 202 259
elaborated_type_specifier (200)
    on left: 217 218 219 220, on right: 200
enum_specifier (201)
    on left: 221, on right: 199
enumerator_list (202)
    on left: 222 223, on right: 223 426
enumerator_definition (203)
    on left: 224 225, on right: 222 223
enumerator (204)
    on left: 226, on right: 224 225
namespace_definition (205)
    on left: 227 228, on right: 176
named_namespace_definition (206)
    on left: 229 230, on right: 227
original_namespace_definition (207)
    on left: 231, on right: 229
extension_namespace_definition (208)
    on left: 232, on right: 230
unnamed_namespace_definition (209)
    on left: 233, on right: 228
namespace_body (210)
    on left: 234, on right: 231 232 233
namespace_alias_definition (211)
    on left: 235, on right: 179
qualified_namespace_specifier (212)
    on left: 236, on right: 235
using_declaration (213)
    on left: 237 238, on right: 180 296
using_directive (214)
    on left: 239, on right: 181
asm_definition (215)
    on left: 240, on right: 178
linkage_specification (216)
    on left: 241 242, on right: 175
init_declarator_list (217)
    on left: 243 244, on right: 244 422
init_declarator (218)
    on left: 245, on right: 243 244
declarator (219)
    on left: 246 247, on right: 157 245 247 251 271 272 275 276 300
    301 389
direct_declarator (220)
    on left: 248 249 250 251, on right: 246 249 250
ptr_operator (221)
    on left: 252 253 254, on right: 79 247 262 316
cv_qualifier_seq (222)
    on left: 255, on right: 432
cv_qualifier (223)
    on left: 256 257, on right: 201 255
declarator_id (224)
    on left: 258 259, on right: 248
type_id (225)
    on left: 260, on right: 51 52 53 54 56 66 76 87 372 374 381 395
    396
type_specifier_seq (226)
    on left: 261, on right: 78 157 260 315 389 390 391 440
abstract_declarator (227)
    on left: 262 263, on right: 266 390 438
direct_abstract_declarator (228)
    on left: 264 265 266, on right: 263 442
parameter_declaration_clause (229)
    on left: 267 268, on right: 249 264
parameter_declaration_list (230)
    on left: 269 270, on right: 268 270 444
parameter_declaration (231)
    on left: 271 272 273 274, on right: 269 270 370
function_definition (232)
    on left: 275 276, on right: 171 294
function_body (233)
    on left: 277, on right: 275 386
initializer (234)
    on left: 278 279, on right: 430
initializer_clause (235)
    on left: 280 281 282, on right: 278 283 284
initializer_list (236)
    on left: 283 284, on right: 281 284
class_specifier (237)
    on left: 285, on right: 198
class_head (238)
    on left: 286 287, on right: 285
class_key (239)
    on left: 288 289 290, on right: 217 286 287
member_specification (240)
    on left: 291 292, on right: 452
member_declaration (241)
    on left: 293 294 295 296 297, on right: 291
member_declarator_list (242)
    on left: 298 299, on right: 299 456
member_declarator (243)
    on left: 300 301 302, on right: 298 299
pure_specifier (244)
    on left: 303, on right: 460
constant_initializer (245)
    on left: 304, on right: 462
base_clause (246)
    on left: 305, on right: 454
base_specifier_list (247)
    on left: 306 307, on right: 305 307
base_specifier (248)
    on left: 308 309 310, on right: 306 307
access_specifier (249)
    on left: 311 312 313, on right: 292 310 464
conversion_function_id (250)
    on left: 314, on right: 34
conversion_type_id (251)
    on left: 315, on right: 314
conversion_declarator (252)
    on left: 316, on right: 468
ctor_initializer (253)
    on left: 317, on right: 448
mem_initializer_list (254)
    on left: 318 319, on right: 317 319
mem_initializer (255)
    on left: 320, on right: 318 319
mem_initializer_id (256)
    on left: 321 322, on right: 320
operator_function_id (257)
    on left: 323, on right: 26 33
operator (258)
    on left: 324 325 326 327 328 329 330 331 332 333 334 335 336 337
    338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353
    354 355 356 357 358 359 360 361 362 363 364 365, on right: 323
template_declaration (259)
    on left: 366, on right: 172 297
template_parameter_list (260)
    on left: 367 368, on right: 366 368 375 376
template_parameter (261)
    on left: 369 370, on right: 367 368
type_parameter (262)
    on left: 371 372 373 374 375 376, on right: 369
template_id (263)
    on left: 377, on right: 7 36
template_argument_list (264)
    on left: 378 379, on right: 220 377 379
template_argument (265)
    on left: 380 381 382, on right: 378 379
explicit_instantiation (266)
    on left: 383, on right: 173
explicit_specialization (267)
    on left: 384, on right: 174
try_block (268)
    on left: 385, on right: 145
function_try_block (269)
    on left: 386, on right: 276
handler_seq (270)
    on left: 387, on right: 385 386 472
handler (271)
    on left: 388, on right: 387
exception_declaration (272)
    on left: 389 390 391 392, on right: 388
throw_expression (273)
    on left: 393, on right: 123
exception_specification (274)
    on left: 394, on right: 434
type_id_list (275)
    on left: 395 396, on right: 396 476
declaration_seq_opt (276)
    on left: 397 398, on right: 22 234 241
TEMPLATE_opt (277)
    on left: 399 400, on right: 37 45 46
nested_name_specifier_opt (278)
    on left: 401 402, on right: 38 59 60 202 217 218 236 239 259 308
    309 310 321
expression_list_opt (279)
    on left: 403 404, on right: 43 44 83 320
COLONCOLON_opt (280)
    on left: 405 406, on right: 45 46 59 60 75 76 84 85 202 217 218
    219 220 236 237 239 254 258 259 308 309 310 321
new_placement_opt (281)
    on left: 407 408, on right: 75 76
new_initializer_opt (282)
    on left: 409 410, on right: 75 76
new_declarator_opt (283)
    on left: 411 412, on right: 78 79
expression_opt (284)
    on left: 413 414, on right: 149 160 165
statement_seq_opt (285)
    on left: 415 416, on right: 150
condition_opt (286)
    on left: 417 418, on right: 160
decl_specifier_seq_opt (287)
    on left: 419 420, on right: 182 188 275 276 293
init_declarator_list_opt (288)
    on left: 421 422, on right: 182
identifier_opt (289)
    on left: 423 424, on right: 221 286 302 371 372 373 374 375 376
enumerator_list_opt (290)
    on left: 425 426, on right: 221
TYPENAME_opt (291)
    on left: 427 428, on right: 237
initializer_opt (292)
    on left: 429 430, on right: 245
cv_qualifier_seq_opt (293)
    on left: 431 432, on right: 249 252 254 255 264
exception_specification_opt (294)
    on left: 433 434, on right: 249 264
constant_expression_opt (295)
    on left: 435 436, on right: 250 265
abstract_declarator_opt (296)
    on left: 437 438, on right: 260 262 273 274
type_specifier_seq_opt (297)
    on left: 439 440, on right: 261
direct_abstract_declarator_opt (298)
    on left: 441 442, on right: 264 265
parameter_declaration_list_opt (299)
    on left: 443 444, on right: 267
ELLIPSIS_opt (300)
    on left: 445 446, on right: 267
ctor_initializer_opt (301)
    on left: 447 448, on right: 275 386
COMMA_opt (302)
    on left: 449 450, on right: 281
member_specification_opt (303)
    on left: 451 452, on right: 285 291 292
base_clause_opt (304)
    on left: 453 454, on right: 286 287
member_declarator_list_opt (305)
    on left: 455 456, on right: 293
SEMICOLON_opt (306)
    on left: 457 458, on right: 294
pure_specifier_opt (307)
    on left: 459 460, on right: 300
constant_initializer_opt (308)
    on left: 461 462, on right: 301
access_specifier_opt (309)
    on left: 463 464, on right: 309
VIRTUAL_opt (310)
    on left: 465 466, on right: 310
conversion_declarator_opt (311)
    on left: 467 468, on right: 315 316
EXPORT_opt (312)
    on left: 469 470, on right: 366
handler_seq_opt (313)
    on left: 471 472, on right: 387
assignment_expression_opt (314)
    on left: 473 474, on right: 393
type_id_list_opt (315)
    on left: 475 476, on right: 394


State 0

    0 $accept: . translation_unit $end

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    $end      reduce using rule 397 (declaration_seq_opt)
    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    translation_unit                go to state 7
    declaration_seq                 go to state 8
    declaration                     go to state 9
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    declaration_seq_opt             go to state 27
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 1

  240 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 30


State 2

  470 EXPORT_opt: EXPORT .

    $default  reduce using rule 470 (EXPORT_opt)


State 3

  241 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  242                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 31

    string_literal  go to state 32


State 4

  231 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  232 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  233 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  235 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 34
    '{'             shift, and go to state 35

    original_namespace_name  go to state 36
    identifier               go to state 37


State 5

  383 explicit_instantiation: TEMPLATE . declaration
  384 explicit_specialization: TEMPLATE . '<' '>' declaration

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6
    '<'        shift, and go to state 38

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration                     go to state 39
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 6

  237 using_declaration: USING . TYPENAME_opt COLONCOLON_opt nested_name_specifier unqualified_id ';'
  238                  | USING . COLONCOLON unqualified_id ';'
  239 using_directive: USING . NAMESPACE COLONCOLON_opt nested_name_specifier_opt namespace_name ';'

    COLONCOLON  shift, and go to state 40
    NAMESPACE   shift, and go to state 41
    TYPENAME    shift, and go to state 42

    COLONCOLON  [reduce using rule 427 (TYPENAME_opt)]
    $default    reduce using rule 427 (TYPENAME_opt)

    TYPENAME_opt  go to state 43


State 7

    0 $accept: translation_unit . $end

    $end  shift, and go to state 44


State 8

  169 declaration_seq: declaration_seq . declaration
  398 declaration_seq_opt: declaration_seq .

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    $end      reduce using rule 398 (declaration_seq_opt)
    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    '}'       reduce using rule 398 (declaration_seq_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration                     go to state 45
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 9

  168 declaration_seq: declaration .

    $default  reduce using rule 168 (declaration_seq)


State 10

  170 declaration: block_declaration .

    $default  reduce using rule 170 (declaration)


State 11

  177 block_declaration: simple_declaration .

    $default  reduce using rule 177 (block_declaration)


State 12

  420 decl_specifier_seq_opt: decl_specifier_seq .

    $default  reduce using rule 420 (decl_specifier_seq_opt)


State 13

  176 declaration: namespace_definition .

    $default  reduce using rule 176 (declaration)


State 14

  227 namespace_definition: named_namespace_definition .

    $default  reduce using rule 227 (namespace_definition)


State 15

  229 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 229 (named_namespace_definition)


State 16

  230 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 230 (named_namespace_definition)


State 17

  228 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 228 (namespace_definition)


State 18

  179 block_declaration: namespace_alias_definition .

    $default  reduce using rule 179 (block_declaration)


State 19

  180 block_declaration: using_declaration .

    $default  reduce using rule 180 (block_declaration)


State 20

  181 block_declaration: using_directive .

    $default  reduce using rule 181 (block_declaration)


State 21

  178 block_declaration: asm_definition .

    $default  reduce using rule 178 (block_declaration)


State 22

  175 declaration: linkage_specification .

    $default  reduce using rule 175 (declaration)


State 23

  171 declaration: function_definition .

    $default  reduce using rule 171 (declaration)


State 24

  172 declaration: template_declaration .

    $default  reduce using rule 172 (declaration)


State 25

  173 declaration: explicit_instantiation .

    $default  reduce using rule 173 (declaration)


State 26

  174 declaration: explicit_specialization .

    $default  reduce using rule 174 (declaration)


State 27

   22 translation_unit: declaration_seq_opt .

    $default  reduce using rule 22 (translation_unit)


State 28

  182 simple_declaration: decl_specifier_seq_opt . init_declarator_list_opt ';'
  188 decl_specifier_seq: decl_specifier_seq_opt . decl_specifier
  275 function_definition: decl_specifier_seq_opt . declarator ctor_initializer_opt function_body
  276                    | decl_specifier_seq_opt . declarator function_try_block

    COLONCOLON  shift, and go to state 46
    AUTO        shift, and go to state 47
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    EXPLICIT    shift, and go to state 54
    EXTERN      shift, and go to state 55
    FLOAT       shift, and go to state 56
    FRIEND      shift, and go to state 57
    INLINE      shift, and go to state 58
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    MUTABLE     shift, and go to state 61
    REGISTER    shift, and go to state 62
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STATIC      shift, and go to state 65
    STRUCT      shift, and go to state 66
    TYPEDEF     shift, and go to state 67
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VIRTUAL     shift, and go to state 71
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    ';'       reduce using rule 421 (init_declarator_list_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    decl_specifier             go to state 78
    storage_class_specifier    go to state 79
    function_specifier         go to state 80
    type_specifier             go to state 81
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    init_declarator_list       go to state 85
    init_declarator            go to state 86
    declarator                 go to state 87
    direct_declarator          go to state 88
    ptr_operator               go to state 89
    cv_qualifier               go to state 90
    declarator_id              go to state 91
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 95
    init_declarator_list_opt   go to state 96


State 29

  366 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 97


State 30

  240 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 31

    string_literal  go to state 98


State 31

   19 string_literal: STRING .

    $default  reduce using rule 19 (string_literal)


State 32

  241 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  242                      | EXTERN string_literal . declaration

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6
    '{'        shift, and go to state 99

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration                     go to state 100
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 33

   10 identifier: IDENTIFIER .

    $default  reduce using rule 10 (identifier)


State 34

    4 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 4 (original_namespace_name)


State 35

  233 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    '}'       reduce using rule 397 (declaration_seq_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration_seq                 go to state 8
    declaration                     go to state 9
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_body                  go to state 101
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    declaration_seq_opt             go to state 102
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 36

  232 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 103


State 37

  231 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  235 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 104
    '{'  shift, and go to state 105


State 38

  384 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 106


State 39

  383 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 383 (explicit_instantiation)


State 40

  238 using_declaration: USING COLONCOLON . unqualified_id ';'

    IDENTIFIER     shift, and go to state 33
    TEMPLATE_NAME  shift, and go to state 107
    OPERATOR       shift, and go to state 108
    '~'            shift, and go to state 109

    template_name           go to state 110
    identifier              go to state 111
    unqualified_id          go to state 112
    conversion_function_id  go to state 113
    operator_function_id    go to state 114
    template_id             go to state 115


State 41

  239 using_directive: USING NAMESPACE . COLONCOLON_opt nested_name_specifier_opt namespace_name ';'

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 116


State 42

  428 TYPENAME_opt: TYPENAME .

    $default  reduce using rule 428 (TYPENAME_opt)


State 43

  237 using_declaration: USING TYPENAME_opt . COLONCOLON_opt nested_name_specifier unqualified_id ';'

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 117


State 44

    0 $accept: translation_unit $end .

    $default  accept


State 45

  169 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 169 (declaration_seq)


State 46

  406 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 406 (COLONCOLON_opt)


State 47

  189 storage_class_specifier: AUTO .

    $default  reduce using rule 189 (storage_class_specifier)


State 48

  205 simple_type_specifier: BOOL .

    $default  reduce using rule 205 (simple_type_specifier)


State 49

  203 simple_type_specifier: CHAR .

    $default  reduce using rule 203 (simple_type_specifier)


State 50

  288 class_key: CLASS .

    $default  reduce using rule 288 (class_key)


State 51

  256 cv_qualifier: CONST .

    $default  reduce using rule 256 (cv_qualifier)


State 52

  212 simple_type_specifier: DOUBLE .

    $default  reduce using rule 212 (simple_type_specifier)


State 53

  218 elaborated_type_specifier: ENUM . COLONCOLON_opt nested_name_specifier_opt identifier
  221 enum_specifier: ENUM . identifier_opt '{' enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 33
    COLONCOLON  shift, and go to state 46

    IDENTIFIER  [reduce using rule 405 (COLONCOLON_opt)]
    '{'         reduce using rule 423 (identifier_opt)
    $default    reduce using rule 405 (COLONCOLON_opt)

    identifier      go to state 118
    COLONCOLON_opt  go to state 119
    identifier_opt  go to state 120


State 54

  196 function_specifier: EXPLICIT .

    $default  reduce using rule 196 (function_specifier)


State 55

  192 storage_class_specifier: EXTERN .

    $default  reduce using rule 192 (storage_class_specifier)


State 56

  211 simple_type_specifier: FLOAT .

    $default  reduce using rule 211 (simple_type_specifier)


State 57

  186 decl_specifier: FRIEND .

    $default  reduce using rule 186 (decl_specifier)


State 58

  194 function_specifier: INLINE .

    $default  reduce using rule 194 (function_specifier)


State 59

  207 simple_type_specifier: INT .

    $default  reduce using rule 207 (simple_type_specifier)


State 60

  208 simple_type_specifier: LONG .

    $default  reduce using rule 208 (simple_type_specifier)


State 61

  193 storage_class_specifier: MUTABLE .

    $default  reduce using rule 193 (storage_class_specifier)


State 62

  190 storage_class_specifier: REGISTER .

    $default  reduce using rule 190 (storage_class_specifier)


State 63

  206 simple_type_specifier: SHORT .

    $default  reduce using rule 206 (simple_type_specifier)


State 64

  209 simple_type_specifier: SIGNED .

    $default  reduce using rule 209 (simple_type_specifier)


State 65

  191 storage_class_specifier: STATIC .

    $default  reduce using rule 191 (storage_class_specifier)


State 66

  289 class_key: STRUCT .

    $default  reduce using rule 289 (class_key)


State 67

  187 decl_specifier: TYPEDEF .

    $default  reduce using rule 187 (decl_specifier)


State 68

  219 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  220                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 121


State 69

  290 class_key: UNION .

    $default  reduce using rule 290 (class_key)


State 70

  210 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 210 (simple_type_specifier)


State 71

  195 function_specifier: VIRTUAL .

    $default  reduce using rule 195 (function_specifier)


State 72

  213 simple_type_specifier: VOID .

    $default  reduce using rule 213 (simple_type_specifier)


State 73

  257 cv_qualifier: VOLATILE .

    $default  reduce using rule 257 (cv_qualifier)


State 74

  204 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 204 (simple_type_specifier)


State 75

  251 direct_declarator: '(' . declarator ')'

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator         go to state 122
    direct_declarator  go to state 88
    ptr_operator       go to state 89
    declarator_id      go to state 91
    COLONCOLON_opt     go to state 123


State 76

  252 ptr_operator: '*' . cv_qualifier_seq_opt

    CONST     shift, and go to state 51
    VOLATILE  shift, and go to state 73

    $default  reduce using rule 431 (cv_qualifier_seq_opt)

    cv_qualifier_seq      go to state 124
    cv_qualifier          go to state 125
    cv_qualifier_seq_opt  go to state 126


State 77

  253 ptr_operator: '&' .

    $default  reduce using rule 253 (ptr_operator)


State 78

  188 decl_specifier_seq: decl_specifier_seq_opt decl_specifier .

    $default  reduce using rule 188 (decl_specifier_seq)


State 79

  183 decl_specifier: storage_class_specifier .

    $default  reduce using rule 183 (decl_specifier)


State 80

  185 decl_specifier: function_specifier .

    $default  reduce using rule 185 (decl_specifier)


State 81

  184 decl_specifier: type_specifier .

    $default  reduce using rule 184 (decl_specifier)


State 82

  197 type_specifier: simple_type_specifier .

    $default  reduce using rule 197 (type_specifier)


State 83

  200 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 200 (type_specifier)


State 84

  199 type_specifier: enum_specifier .

    $default  reduce using rule 199 (type_specifier)


State 85

  244 init_declarator_list: init_declarator_list . ',' init_declarator
  422 init_declarator_list_opt: init_declarator_list .

    ','  shift, and go to state 127

    $default  reduce using rule 422 (init_declarator_list_opt)


State 86

  243 init_declarator_list: init_declarator .

    $default  reduce using rule 243 (init_declarator_list)


State 87

  245 init_declarator: declarator . initializer_opt
  275 function_definition: decl_specifier_seq_opt declarator . ctor_initializer_opt function_body
  276                    | decl_specifier_seq_opt declarator . function_try_block

    TRY  shift, and go to state 128
    '('  shift, and go to state 129
    ':'  shift, and go to state 130
    '='  shift, and go to state 131

    '{'       reduce using rule 447 (ctor_initializer_opt)
    $default  reduce using rule 429 (initializer_opt)

    initializer           go to state 132
    ctor_initializer      go to state 133
    function_try_block    go to state 134
    initializer_opt       go to state 135
    ctor_initializer_opt  go to state 136


State 88

  246 declarator: direct_declarator .
  249 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt
  250                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 137
    '['  shift, and go to state 138

    '('       [reduce using rule 246 (declarator)]
    $default  reduce using rule 246 (declarator)


State 89

  247 declarator: ptr_operator . declarator

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator         go to state 139
    direct_declarator  go to state 88
    ptr_operator       go to state 89
    declarator_id      go to state 91
    COLONCOLON_opt     go to state 123


State 90

  201 type_specifier: cv_qualifier .

    $default  reduce using rule 201 (type_specifier)


State 91

  248 direct_declarator: declarator_id .

    $default  reduce using rule 248 (direct_declarator)


State 92

  198 type_specifier: class_specifier .

    $default  reduce using rule 198 (type_specifier)


State 93

  285 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 140


State 94

  217 elaborated_type_specifier: class_key . COLONCOLON_opt nested_name_specifier_opt identifier
  286 class_head: class_key . identifier_opt base_clause_opt
  287           | class_key . nested_name_specifier identifier base_clause_opt

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    COLONCOLON      shift, and go to state 46

    IDENTIFIER      [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 423 (identifier_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 118
    nested_name_specifier    go to state 147
    class_or_namespace_name  go to state 148
    template_id              go to state 149
    COLONCOLON_opt           go to state 150
    identifier_opt           go to state 151


State 95

  202 simple_type_specifier: COLONCOLON_opt . nested_name_specifier_opt type_name
  254 ptr_operator: COLONCOLON_opt . nested_name_specifier '*' cv_qualifier_seq_opt
  258 declarator_id: COLONCOLON_opt . id_expression
  259              | COLONCOLON_opt . nested_name_specifier_opt type_name

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    OPERATOR        shift, and go to state 108
    '~'             shift, and go to state 109

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    $default       reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    id_expression              go to state 152
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 155
    class_or_namespace_name    go to state 148
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    nested_name_specifier_opt  go to state 157


State 96

  182 simple_declaration: decl_specifier_seq_opt init_declarator_list_opt . ';'

    ';'  shift, and go to state 158


State 97

  366 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 159


State 98

  240 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 160


State 99

  241 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    '}'       reduce using rule 397 (declaration_seq_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration_seq                 go to state 8
    declaration                     go to state 9
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    declaration_seq_opt             go to state 161
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 100

  242 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 242 (linkage_specification)


State 101

  233 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 162


State 102

  234 namespace_body: declaration_seq_opt .

    $default  reduce using rule 234 (namespace_body)


State 103

  232 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    '}'       reduce using rule 397 (declaration_seq_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration_seq                 go to state 8
    declaration                     go to state 9
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_body                  go to state 163
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    declaration_seq_opt             go to state 102
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 104

  235 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    qualified_namespace_specifier  go to state 164
    COLONCOLON_opt                 go to state 165


State 105

  231 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    '}'       reduce using rule 397 (declaration_seq_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration_seq                 go to state 8
    declaration                     go to state 9
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_body                  go to state 166
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    declaration_seq_opt             go to state 102
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 106

  384 explicit_specialization: TEMPLATE '<' '>' . declaration

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration                     go to state 167
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 107

    9 template_name: TEMPLATE_NAME .

    $default  reduce using rule 9 (template_name)


State 108

  314 conversion_function_id: OPERATOR . conversion_type_id
  323 operator_function_id: OPERATOR . operator

    COLONCOLON  shift, and go to state 46
    ADDEQ       shift, and go to state 168
    SUBEQ       shift, and go to state 169
    MULEQ       shift, and go to state 170
    DIVEQ       shift, and go to state 171
    MODEQ       shift, and go to state 172
    XOREQ       shift, and go to state 173
    ANDEQ       shift, and go to state 174
    OREQ        shift, and go to state 175
    SL          shift, and go to state 176
    SR          shift, and go to state 177
    SREQ        shift, and go to state 178
    SLEQ        shift, and go to state 179
    EQ          shift, and go to state 180
    NOTEQ       shift, and go to state 181
    LTEQ        shift, and go to state 182
    GTEQ        shift, and go to state 183
    ANDAND      shift, and go to state 184
    OROR        shift, and go to state 185
    PLUSPLUS    shift, and go to state 186
    MINUSMINUS  shift, and go to state 187
    ARROWSTAR   shift, and go to state 188
    ARROW       shift, and go to state 189
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DELETE      shift, and go to state 190
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    NEW         shift, and go to state 191
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74
    '('         shift, and go to state 192
    '~'         shift, and go to state 193
    '['         shift, and go to state 194
    '<'         shift, and go to state 195
    '>'         shift, and go to state 196
    ','         shift, and go to state 197
    '*'         shift, and go to state 198
    '&'         shift, and go to state 199
    '+'         shift, and go to state 200
    '!'         shift, and go to state 201
    '/'         shift, and go to state 202
    '%'         shift, and go to state 203
    '^'         shift, and go to state 204
    '|'         shift, and go to state 205
    '='         shift, and go to state 206
    '_'         shift, and go to state 207

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 209
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_type_id         go to state 210
    operator                   go to state 211
    COLONCOLON_opt             go to state 212


State 109

   35 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    class_name     go to state 213
    template_name  go to state 110
    template_id    go to state 149


State 110

  377 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 214


State 111

   32 unqualified_id: identifier .

    $default  reduce using rule 32 (unqualified_id)


State 112

  238 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 215


State 113

   34 unqualified_id: conversion_function_id .

    $default  reduce using rule 34 (unqualified_id)


State 114

   33 unqualified_id: operator_function_id .

    $default  reduce using rule 33 (unqualified_id)


State 115

   36 unqualified_id: template_id .

    $default  reduce using rule 36 (unqualified_id)


State 116

  239 using_directive: USING NAMESPACE COLONCOLON_opt . nested_name_specifier_opt namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    NAMESPACE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 217


State 117

  237 using_declaration: USING TYPENAME_opt COLONCOLON_opt . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    nested_name_specifier    go to state 218
    class_or_namespace_name  go to state 148
    template_id              go to state 149


State 118

  424 identifier_opt: identifier .

    $default  reduce using rule 424 (identifier_opt)


State 119

  218 elaborated_type_specifier: ENUM COLONCOLON_opt . nested_name_specifier_opt identifier

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    $default  reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 219


State 120

  221 enum_specifier: ENUM identifier_opt . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 220


State 121

  219 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  220                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    nested_name_specifier    go to state 221
    class_or_namespace_name  go to state 148
    template_id              go to state 149


State 122

  251 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 222


State 123

  254 ptr_operator: COLONCOLON_opt . nested_name_specifier '*' cv_qualifier_seq_opt
  258 declarator_id: COLONCOLON_opt . id_expression
  259              | COLONCOLON_opt . nested_name_specifier_opt type_name

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    OPERATOR        shift, and go to state 108
    '~'             shift, and go to state 109

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    $default       reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    id_expression              go to state 152
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 155
    class_or_namespace_name    go to state 148
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    nested_name_specifier_opt  go to state 223


State 124

  432 cv_qualifier_seq_opt: cv_qualifier_seq .

    $default  reduce using rule 432 (cv_qualifier_seq_opt)


State 125

  255 cv_qualifier_seq: cv_qualifier . cv_qualifier_seq_opt

    CONST     shift, and go to state 51
    VOLATILE  shift, and go to state 73

    $default  reduce using rule 431 (cv_qualifier_seq_opt)

    cv_qualifier_seq      go to state 124
    cv_qualifier          go to state 125
    cv_qualifier_seq_opt  go to state 224


State 126

  252 ptr_operator: '*' cv_qualifier_seq_opt .

    $default  reduce using rule 252 (ptr_operator)


State 127

  244 init_declarator_list: init_declarator_list ',' . init_declarator

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    $default  reduce using rule 405 (COLONCOLON_opt)

    init_declarator    go to state 225
    declarator         go to state 226
    direct_declarator  go to state 88
    ptr_operator       go to state 89
    declarator_id      go to state 91
    COLONCOLON_opt     go to state 123


State 128

  386 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 130

    $default  reduce using rule 447 (ctor_initializer_opt)

    ctor_initializer      go to state 133
    ctor_initializer_opt  go to state 227


State 129

  279 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 261
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 130

  317 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER  shift, and go to state 33
    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    identifier            go to state 283
    mem_initializer_list  go to state 284
    mem_initializer       go to state 285
    mem_initializer_id    go to state 286
    COLONCOLON_opt        go to state 287


State 131

  278 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 288

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 289
    simple_type_specifier      go to state 280
    initializer_clause         go to state 290
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 132

  430 initializer_opt: initializer .

    $default  reduce using rule 430 (initializer_opt)


State 133

  448 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 448 (ctor_initializer_opt)


State 134

  276 function_definition: decl_specifier_seq_opt declarator function_try_block .

    $default  reduce using rule 276 (function_definition)


State 135

  245 init_declarator: declarator initializer_opt .

    $default  reduce using rule 245 (init_declarator)


State 136

  275 function_definition: decl_specifier_seq_opt declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 291

    compound_statement  go to state 292
    function_body       go to state 293


State 137

  249 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt

    ELLIPSIS  reduce using rule 443 (parameter_declaration_list_opt)
    ')'       reduce using rule 443 (parameter_declaration_list_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq              go to state 294
    parameter_declaration_clause    go to state 295
    parameter_declaration_list      go to state 296
    parameter_declaration           go to state 297
    decl_specifier_seq_opt          go to state 298
    parameter_declaration_list_opt  go to state 299


State 138

  250 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ']'             reduce using rule 435 (constant_expression_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 302
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282
    constant_expression_opt    go to state 303


State 139

  247 declarator: ptr_operator declarator .

    $default  reduce using rule 247 (declarator)


State 140

  285 class_specifier: class_head '{' . member_specification_opt '}'

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    EXPORT          shift, and go to state 2
    PRIVATE         shift, and go to state 304
    PROTECTED       shift, and go to state 305
    PUBLIC          shift, and go to state 306
    USING           shift, and go to state 307

    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE        reduce using rule 469 (EXPORT_opt)
    '}'             reduce using rule 451 (member_specification_opt)
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name            go to state 143
    original_namespace_name   go to state 144
    namespace_alias           go to state 145
    class_name                go to state 146
    template_name             go to state 110
    qualified_id              go to state 308
    nested_name_specifier     go to state 259
    class_or_namespace_name   go to state 148
    decl_specifier_seq        go to state 12
    using_declaration         go to state 309
    function_definition       go to state 310
    member_specification      go to state 311
    member_declaration        go to state 312
    access_specifier          go to state 313
    template_declaration      go to state 314
    template_id               go to state 149
    decl_specifier_seq_opt    go to state 315
    member_specification_opt  go to state 316
    EXPORT_opt                go to state 29


State 141

    4 original_namespace_name: NAMESPACE_NAME .
    5 namespace_alias: NAMESPACE_NAME .

    COLONCOLON  reduce using rule 4 (original_namespace_name)
    COLONCOLON  [reduce using rule 5 (namespace_alias)]
    ';'         reduce using rule 4 (original_namespace_name)
    ';'         [reduce using rule 5 (namespace_alias)]
    $default    reduce using rule 4 (original_namespace_name)


State 142

    6 class_name: CLASS_NAME .

    $default  reduce using rule 6 (class_name)


State 143

   40 class_or_namespace_name: namespace_name .

    $default  reduce using rule 40 (class_or_namespace_name)


State 144

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


State 145

    3 namespace_name: namespace_alias .

    $default  reduce using rule 3 (namespace_name)


State 146

   39 class_or_namespace_name: class_name .

    $default  reduce using rule 39 (class_or_namespace_name)


State 147

  287 class_head: class_key nested_name_specifier . identifier base_clause_opt

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 317


State 148

   38 nested_name_specifier: class_or_namespace_name . COLONCOLON nested_name_specifier_opt

    COLONCOLON  shift, and go to state 318


State 149

    7 class_name: template_id .

    $default  reduce using rule 7 (class_name)


State 150

  217 elaborated_type_specifier: class_key COLONCOLON_opt . nested_name_specifier_opt identifier

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    $default  reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 319


State 151

  286 class_head: class_key identifier_opt . base_clause_opt

    ':'  shift, and go to state 320

    $default  reduce using rule 453 (base_clause_opt)

    base_clause      go to state 321
    base_clause_opt  go to state 322


State 152

  258 declarator_id: COLONCOLON_opt id_expression .

    $default  reduce using rule 258 (declarator_id)


State 153

   30 id_expression: unqualified_id .

    $default  reduce using rule 30 (id_expression)


State 154

   31 id_expression: qualified_id .

    $default  reduce using rule 31 (id_expression)


State 155

   37 qualified_id: nested_name_specifier . TEMPLATE_opt unqualified_id
  254 ptr_operator: COLONCOLON_opt nested_name_specifier . '*' cv_qualifier_seq_opt
  402 nested_name_specifier_opt: nested_name_specifier .

    TEMPLATE  shift, and go to state 323
    '*'       shift, and go to state 324

    TYPEDEF_NAME   reduce using rule 402 (nested_name_specifier_opt)
    CLASS_NAME     reduce using rule 402 (nested_name_specifier_opt)
    ENUM_NAME      reduce using rule 402 (nested_name_specifier_opt)
    TEMPLATE_NAME  reduce using rule 399 (TEMPLATE_opt)
    TEMPLATE_NAME  [reduce using rule 402 (nested_name_specifier_opt)]
    $default       reduce using rule 399 (TEMPLATE_opt)

    TEMPLATE_opt  go to state 325


State 156

    7 class_name: template_id .
   36 unqualified_id: template_id .

    COLONCOLON  reduce using rule 7 (class_name)
    $default    reduce using rule 36 (unqualified_id)


State 157

  202 simple_type_specifier: COLONCOLON_opt nested_name_specifier_opt . type_name
  259 declarator_id: COLONCOLON_opt nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 331
    template_id    go to state 149


State 158

  182 simple_declaration: decl_specifier_seq_opt init_declarator_list_opt ';' .

    $default  reduce using rule 182 (simple_declaration)


State 159

  366 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    CLASS     shift, and go to state 332
    TEMPLATE  shift, and go to state 333
    TYPENAME  shift, and go to state 334

    CLASS     [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPENAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq       go to state 294
    parameter_declaration    go to state 335
    template_parameter_list  go to state 336
    template_parameter       go to state 337
    type_parameter           go to state 338
    decl_specifier_seq_opt   go to state 298


State 160

  240 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 339


State 161

  241 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 340


State 162

  233 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 233 (unnamed_namespace_definition)


State 163

  232 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 341


State 164

  235 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 342


State 165

  236 qualified_namespace_specifier: COLONCOLON_opt . nested_name_specifier_opt namespace_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    NAMESPACE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 343


State 166

  231 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 344


State 167

  384 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 384 (explicit_specialization)


State 168

  341 operator: ADDEQ .

    $default  reduce using rule 341 (operator)


State 169

  342 operator: SUBEQ .

    $default  reduce using rule 342 (operator)


State 170

  343 operator: MULEQ .

    $default  reduce using rule 343 (operator)


State 171

  344 operator: DIVEQ .

    $default  reduce using rule 344 (operator)


State 172

  345 operator: MODEQ .

    $default  reduce using rule 345 (operator)


State 173

  346 operator: XOREQ .

    $default  reduce using rule 346 (operator)


State 174

  347 operator: ANDEQ .

    $default  reduce using rule 347 (operator)


State 175

  348 operator: OREQ .

    $default  reduce using rule 348 (operator)


State 176

  349 operator: SL .

    $default  reduce using rule 349 (operator)


State 177

  350 operator: SR .

    $default  reduce using rule 350 (operator)


State 178

  351 operator: SREQ .

    $default  reduce using rule 351 (operator)


State 179

  352 operator: SLEQ .

    $default  reduce using rule 352 (operator)


State 180

  353 operator: EQ .

    $default  reduce using rule 353 (operator)


State 181

  354 operator: NOTEQ .

    $default  reduce using rule 354 (operator)


State 182

  355 operator: LTEQ .

    $default  reduce using rule 355 (operator)


State 183

  356 operator: GTEQ .

    $default  reduce using rule 356 (operator)


State 184

  357 operator: ANDAND .

    $default  reduce using rule 357 (operator)


State 185

  358 operator: OROR .

    $default  reduce using rule 358 (operator)


State 186

  359 operator: PLUSPLUS .

    $default  reduce using rule 359 (operator)


State 187

  360 operator: MINUSMINUS .

    $default  reduce using rule 360 (operator)


State 188

  362 operator: ARROWSTAR .

    $default  reduce using rule 362 (operator)


State 189

  363 operator: ARROW .

    $default  reduce using rule 363 (operator)


State 190

  325 operator: DELETE .
  327         | DELETE . '[' ']'

    '['  shift, and go to state 345

    '['       [reduce using rule 325 (operator)]
    $default  reduce using rule 325 (operator)


State 191

  324 operator: NEW .
  326         | NEW . '[' ']'

    '['  shift, and go to state 346

    '['       [reduce using rule 324 (operator)]
    $default  reduce using rule 324 (operator)


State 192

  364 operator: '(' . ')'

    ')'  shift, and go to state 347


State 193

  336 operator: '~' .

    $default  reduce using rule 336 (operator)


State 194

  365 operator: '[' . ']'

    ']'  shift, and go to state 348


State 195

  339 operator: '<' .

    $default  reduce using rule 339 (operator)


State 196

  340 operator: '>' .

    $default  reduce using rule 340 (operator)


State 197

  361 operator: ',' .

    $default  reduce using rule 361 (operator)


State 198

  330 operator: '*' .

    $default  reduce using rule 330 (operator)


State 199

  334 operator: '&' .

    $default  reduce using rule 334 (operator)


State 200

  328 operator: '+' .

    $default  reduce using rule 328 (operator)


State 201

  337 operator: '!' .

    $default  reduce using rule 337 (operator)


State 202

  331 operator: '/' .

    $default  reduce using rule 331 (operator)


State 203

  332 operator: '%' .

    $default  reduce using rule 332 (operator)


State 204

  333 operator: '^' .

    $default  reduce using rule 333 (operator)


State 205

  335 operator: '|' .

    $default  reduce using rule 335 (operator)


State 206

  338 operator: '=' .

    $default  reduce using rule 338 (operator)


State 207

  329 operator: '_' .

    $default  reduce using rule 329 (operator)


State 208

  261 type_specifier_seq: type_specifier . type_specifier_seq_opt

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 439 (type_specifier_seq_opt)]
    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    NAMESPACE_NAME  [reduce using rule 439 (type_specifier_seq_opt)]
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      [reduce using rule 439 (type_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 439 (type_specifier_seq_opt)]
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   [reduce using rule 439 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 439 (type_specifier_seq_opt)]
    $default        reduce using rule 439 (type_specifier_seq_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 349
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212
    type_specifier_seq_opt     go to state 350


State 209

  315 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    COLONCOLON  shift, and go to state 46
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    '*'             [reduce using rule 467 (conversion_declarator_opt)]
    '&'             [reduce using rule 467 (conversion_declarator_opt)]
    $default        reduce using rule 467 (conversion_declarator_opt)

    ptr_operator               go to state 351
    conversion_declarator      go to state 352
    COLONCOLON_opt             go to state 353
    conversion_declarator_opt  go to state 354


State 210

  314 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 314 (conversion_function_id)


State 211

  323 operator_function_id: OPERATOR operator .

    $default  reduce using rule 323 (operator_function_id)


State 212

  202 simple_type_specifier: COLONCOLON_opt . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    $default       reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 355


State 213

   35 unqualified_id: '~' class_name .

    $default  reduce using rule 35 (unqualified_id)


State 214

  377 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 356
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 357
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 359
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    template_argument_list     go to state 361
    template_argument          go to state 362
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 215

  238 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 238 (using_declaration)


State 216

  402 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 402 (nested_name_specifier_opt)


State 217

  239 using_directive: USING NAMESPACE COLONCOLON_opt nested_name_specifier_opt . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 141

    namespace_name           go to state 363
    original_namespace_name  go to state 144
    namespace_alias          go to state 145


State 218

  237 using_declaration: USING TYPENAME_opt COLONCOLON_opt nested_name_specifier . unqualified_id ';'

    IDENTIFIER     shift, and go to state 33
    TEMPLATE_NAME  shift, and go to state 107
    OPERATOR       shift, and go to state 108
    '~'            shift, and go to state 109

    template_name           go to state 110
    identifier              go to state 111
    unqualified_id          go to state 364
    conversion_function_id  go to state 113
    operator_function_id    go to state 114
    template_id             go to state 115


State 219

  218 elaborated_type_specifier: ENUM COLONCOLON_opt nested_name_specifier_opt . identifier

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 365


State 220

  221 enum_specifier: ENUM identifier_opt '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 425 (enumerator_list_opt)

    identifier             go to state 366
    enumerator_list        go to state 367
    enumerator_definition  go to state 368
    enumerator             go to state 369
    enumerator_list_opt    go to state 370


State 221

  219 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  220                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 371


State 222

  251 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 251 (direct_declarator)


State 223

  259 declarator_id: COLONCOLON_opt nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 372
    template_id    go to state 149


State 224

  255 cv_qualifier_seq: cv_qualifier cv_qualifier_seq_opt .

    $default  reduce using rule 255 (cv_qualifier_seq)


State 225

  244 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 244 (init_declarator_list)


State 226

  245 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 129
    '='  shift, and go to state 131

    $default  reduce using rule 429 (initializer_opt)

    initializer      go to state 132
    initializer_opt  go to state 135


State 227

  386 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 291

    compound_statement  go to state 292
    function_body       go to state 373


State 228

   16 integer_literal: INTEGER .

    $default  reduce using rule 16 (integer_literal)


State 229

   18 floating_literal: FLOATING .

    $default  reduce using rule 18 (floating_literal)


State 230

   17 character_literal: CHARACTER .

    $default  reduce using rule 17 (character_literal)


State 231

   25 primary_expression: COLONCOLON . identifier
   26                   | COLONCOLON . operator_function_id
   27                   | COLONCOLON . qualified_id
  406 COLONCOLON_opt: COLONCOLON .

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    OPERATOR        shift, and go to state 374

    NAMESPACE_NAME  [reduce using rule 406 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 406 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 406 (COLONCOLON_opt)]
    $default        reduce using rule 406 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 375
    qualified_id             go to state 376
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    operator_function_id     go to state 377
    template_id              go to state 149


State 232

   62 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 378
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 233

   63 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 379
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 234

   54 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 380


State 235

   51 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 381


State 236

   21 boolean_literal: FALSE .

    $default  reduce using rule 21 (boolean_literal)


State 237

   53 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 382


State 238

   65 unary_expression: SIZEOF . unary_expression
   66                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 383
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 384
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 239

   52 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 385


State 240

   24 primary_expression: THIS .

    $default  reduce using rule 24 (primary_expression)


State 241

  393 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    NEW             reduce using rule 405 (COLONCOLON_opt)
    $default        reduce using rule 473 (assignment_expression_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 386
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282
    assignment_expression_opt  go to state 387


State 242

   20 boolean_literal: TRUE .

    $default  reduce using rule 20 (boolean_literal)


State 243

   55 postfix_expression: TYPEID . '(' expression ')'
   56                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 388


State 244

   28 primary_expression: '(' . expression ')'
   87 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 390
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 391
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 245

   35 unqualified_id: '~' . class_name
   74 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    CLASS_NAME     [reduce using rule 74 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 74 (unary_operator)]
    $default       reduce using rule 74 (unary_operator)

    class_name     go to state 213
    template_name  go to state 110
    template_id    go to state 149


State 246

   69 unary_operator: '*' .

    $default  reduce using rule 69 (unary_operator)


State 247

   70 unary_operator: '&' .

    $default  reduce using rule 70 (unary_operator)


State 248

   71 unary_operator: '+' .

    $default  reduce using rule 71 (unary_operator)


State 249

   72 unary_operator: '-' .

    $default  reduce using rule 72 (unary_operator)


State 250

   73 unary_operator: '!' .

    $default  reduce using rule 73 (unary_operator)


State 251

   23 primary_expression: literal .

    $default  reduce using rule 23 (primary_expression)


State 252

   11 literal: integer_literal .

    $default  reduce using rule 11 (literal)


State 253

   12 literal: character_literal .

    $default  reduce using rule 12 (literal)


State 254

   13 literal: floating_literal .

    $default  reduce using rule 13 (literal)


State 255

   14 literal: string_literal .

    $default  reduce using rule 14 (literal)


State 256

   15 literal: boolean_literal .

    $default  reduce using rule 15 (literal)


State 257

   41 postfix_expression: primary_expression .

    $default  reduce using rule 41 (postfix_expression)


State 258

   29 primary_expression: id_expression .

    $default  reduce using rule 29 (primary_expression)


State 259

   37 qualified_id: nested_name_specifier . TEMPLATE_opt unqualified_id

    TEMPLATE  shift, and go to state 323

    $default  reduce using rule 399 (TEMPLATE_opt)

    TEMPLATE_opt  go to state 325


State 260

   42 postfix_expression: postfix_expression . '[' expression ']'
   43                   | postfix_expression . '(' expression_list_opt ')'
   45                   | postfix_expression . '.' TEMPLATE_opt COLONCOLON_opt id_expression
   46                   | postfix_expression . ARROW TEMPLATE_opt COLONCOLON_opt id_expression
   47                   | postfix_expression . '.' pseudo_destructor_name
   48                   | postfix_expression . ARROW pseudo_destructor_name
   49                   | postfix_expression . PLUSPLUS
   50                   | postfix_expression . MINUSMINUS
   61 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 392
    MINUSMINUS  shift, and go to state 393
    ARROW       shift, and go to state 394
    '('         shift, and go to state 395
    '['         shift, and go to state 396
    '.'         shift, and go to state 397

    $default  reduce using rule 61 (unary_expression)


State 261

   58 expression_list: expression_list . ',' assignment_expression
  279 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 398
    ','  shift, and go to state 399


State 262

   86 cast_expression: unary_expression .

    $default  reduce using rule 86 (cast_expression)


State 263

   64 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 400
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 264

   67 unary_expression: new_expression .

    $default  reduce using rule 67 (unary_expression)


State 265

   68 unary_expression: delete_expression .

    $default  reduce using rule 68 (unary_expression)


State 266

   88 pm_expression: cast_expression .

    $default  reduce using rule 88 (pm_expression)


State 267

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   91 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 401
    ARROWSTAR  shift, and go to state 402

    $default  reduce using rule 91 (multiplicative_expression)


State 268

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   95 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 403
    '/'  shift, and go to state 404
    '%'  shift, and go to state 405

    $default  reduce using rule 95 (additive_expression)


State 269

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   98 shift_expression: additive_expression .

    '+'  shift, and go to state 406
    '-'  shift, and go to state 407

    $default  reduce using rule 98 (shift_expression)


State 270

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  101 relational_expression: shift_expression .

    SL  shift, and go to state 408
    SR  shift, and go to state 409

    $default  reduce using rule 101 (relational_expression)


State 271

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  106 equality_expression: relational_expression .

    LTEQ  shift, and go to state 410
    GTEQ  shift, and go to state 411
    '<'   shift, and go to state 412
    '>'   shift, and go to state 413

    '>'       [reduce using rule 106 (equality_expression)]
    $default  reduce using rule 106 (equality_expression)


State 272

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  109 and_expression: equality_expression .

    EQ     shift, and go to state 414
    NOTEQ  shift, and go to state 415

    $default  reduce using rule 109 (and_expression)


State 273

  110 and_expression: and_expression . '&' equality_expression
  111 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 416

    $default  reduce using rule 111 (exclusive_or_expression)


State 274

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  113 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 417

    $default  reduce using rule 113 (inclusive_or_expression)


State 275

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  115 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 418

    $default  reduce using rule 115 (logical_and_expression)


State 276

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  117 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 419

    $default  reduce using rule 117 (logical_or_expression)


State 277

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression
  122 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 420
    SUBEQ  shift, and go to state 421
    MULEQ  shift, and go to state 422
    DIVEQ  shift, and go to state 423
    MODEQ  shift, and go to state 424
    XOREQ  shift, and go to state 425
    ANDEQ  shift, and go to state 426
    OREQ   shift, and go to state 427
    SREQ   shift, and go to state 428
    SLEQ   shift, and go to state 429
    OROR   shift, and go to state 430
    '?'    shift, and go to state 431
    '='    shift, and go to state 432

    $default  reduce using rule 119 (conditional_expression)

    assignment_operator  go to state 433


State 278

  121 assignment_expression: conditional_expression .

    $default  reduce using rule 121 (assignment_expression)


State 279

   57 expression_list: assignment_expression .

    $default  reduce using rule 57 (expression_list)


State 280

   44 postfix_expression: simple_type_specifier . '(' expression_list_opt ')'

    '('  shift, and go to state 434


State 281

  123 assignment_expression: throw_expression .

    $default  reduce using rule 123 (assignment_expression)


State 282

   75 new_expression: COLONCOLON_opt . NEW new_placement_opt new_type_id new_initializer_opt
   76               | COLONCOLON_opt . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   84 delete_expression: COLONCOLON_opt . DELETE cast_expression
   85                  | COLONCOLON_opt . DELETE '[' ']' cast_expression
  202 simple_type_specifier: COLONCOLON_opt . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    DELETE          shift, and go to state 435
    NEW             shift, and go to state 436

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    $default       reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 355


State 283

  322 mem_initializer_id: identifier .

    $default  reduce using rule 322 (mem_initializer_id)


State 284

  317 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 317 (ctor_initializer)


State 285

  318 mem_initializer_list: mem_initializer .
  319                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 437

    $default  reduce using rule 318 (mem_initializer_list)


State 286

  320 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 438


State 287

  321 mem_initializer_id: COLONCOLON_opt . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 439


State 288

  281 initializer_clause: '{' . initializer_list COMMA_opt '}'
  282                   | '{' . '}'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 288
    '}'               shift, and go to state 440

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 289
    simple_type_specifier      go to state 280
    initializer_clause         go to state 441
    initializer_list           go to state 442
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 289

  280 initializer_clause: assignment_expression .

    $default  reduce using rule 280 (initializer_clause)


State 290

  278 initializer: '=' initializer_clause .

    $default  reduce using rule 278 (initializer)


State 291

  150 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '}'             reduce using rule 415 (statement_seq_opt)
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 458
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    statement_seq               go to state 462
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    statement_seq_opt           go to state 470
    decl_specifier_seq_opt      go to state 471


State 292

  277 function_body: compound_statement .

    $default  reduce using rule 277 (function_body)


State 293

  275 function_definition: decl_specifier_seq_opt declarator ctor_initializer_opt function_body .

    $default  reduce using rule 275 (function_definition)


State 294

  271 parameter_declaration: decl_specifier_seq . declarator
  272                      | decl_specifier_seq . declarator '=' assignment_expression
  273                      | decl_specifier_seq . abstract_declarator_opt
  274                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression
  420 decl_specifier_seq_opt: decl_specifier_seq .

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 472
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    IDENTIFIER      reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 420 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    NAMESPACE_NAME  [reduce using rule 420 (decl_specifier_seq_opt)]
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      [reduce using rule 420 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 420 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   [reduce using rule 420 (decl_specifier_seq_opt)]
    ELLIPSIS        reduce using rule 437 (abstract_declarator_opt)
    COLONCOLON      [reduce using rule 420 (decl_specifier_seq_opt)]
    OPERATOR        reduce using rule 405 (COLONCOLON_opt)
    '('             [reduce using rule 441 (direct_abstract_declarator_opt)]
    ')'             reduce using rule 437 (abstract_declarator_opt)
    '~'             reduce using rule 405 (COLONCOLON_opt)
    '['             reduce using rule 441 (direct_abstract_declarator_opt)
    '>'             reduce using rule 437 (abstract_declarator_opt)
    ','             reduce using rule 437 (abstract_declarator_opt)
    '='             reduce using rule 437 (abstract_declarator_opt)
    $default        reduce using rule 420 (decl_specifier_seq_opt)

    declarator                      go to state 473
    direct_declarator               go to state 88
    ptr_operator                    go to state 474
    declarator_id                   go to state 91
    abstract_declarator             go to state 475
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 123
    abstract_declarator_opt         go to state 477
    direct_abstract_declarator_opt  go to state 478


State 295

  249 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq_opt exception_specification_opt

    ')'  shift, and go to state 479


State 296

  268 parameter_declaration_clause: parameter_declaration_list . ',' ELLIPSIS
  270 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration
  444 parameter_declaration_list_opt: parameter_declaration_list .

    ','  shift, and go to state 480

    $default  reduce using rule 444 (parameter_declaration_list_opt)


State 297

  269 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 269 (parameter_declaration_list)


State 298

  188 decl_specifier_seq: decl_specifier_seq_opt . decl_specifier

    COLONCOLON  shift, and go to state 46
    AUTO        shift, and go to state 47
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    EXPLICIT    shift, and go to state 54
    EXTERN      shift, and go to state 55
    FLOAT       shift, and go to state 56
    FRIEND      shift, and go to state 57
    INLINE      shift, and go to state 58
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    MUTABLE     shift, and go to state 61
    REGISTER    shift, and go to state 62
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STATIC      shift, and go to state 65
    STRUCT      shift, and go to state 66
    TYPEDEF     shift, and go to state 67
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VIRTUAL     shift, and go to state 71
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    decl_specifier             go to state 78
    storage_class_specifier    go to state 79
    function_specifier         go to state 80
    type_specifier             go to state 81
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 299

  267 parameter_declaration_clause: parameter_declaration_list_opt . ELLIPSIS_opt

    ELLIPSIS  shift, and go to state 481

    $default  reduce using rule 445 (ELLIPSIS_opt)

    ELLIPSIS_opt  go to state 482


State 300

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 430
    '?'   shift, and go to state 431

    $default  reduce using rule 119 (conditional_expression)


State 301

  137 constant_expression: conditional_expression .

    $default  reduce using rule 137 (constant_expression)


State 302

  436 constant_expression_opt: constant_expression .

    $default  reduce using rule 436 (constant_expression_opt)


State 303

  250 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 483


State 304

  311 access_specifier: PRIVATE .

    $default  reduce using rule 311 (access_specifier)


State 305

  312 access_specifier: PROTECTED .

    $default  reduce using rule 312 (access_specifier)


State 306

  313 access_specifier: PUBLIC .

    $default  reduce using rule 313 (access_specifier)


State 307

  237 using_declaration: USING . TYPENAME_opt COLONCOLON_opt nested_name_specifier unqualified_id ';'
  238                  | USING . COLONCOLON unqualified_id ';'

    COLONCOLON  shift, and go to state 40
    TYPENAME    shift, and go to state 42

    COLONCOLON  [reduce using rule 427 (TYPENAME_opt)]
    $default    reduce using rule 427 (TYPENAME_opt)

    TYPENAME_opt  go to state 43


State 308

  295 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 484


State 309

  296 member_declaration: using_declaration .

    $default  reduce using rule 296 (member_declaration)


State 310

  294 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 485

    ';'       [reduce using rule 457 (SEMICOLON_opt)]
    $default  reduce using rule 457 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 486


State 311

  452 member_specification_opt: member_specification .

    $default  reduce using rule 452 (member_specification_opt)


State 312

  291 member_specification: member_declaration . member_specification_opt

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    EXPORT          shift, and go to state 2
    PRIVATE         shift, and go to state 304
    PROTECTED       shift, and go to state 305
    PUBLIC          shift, and go to state 306
    USING           shift, and go to state 307

    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE        reduce using rule 469 (EXPORT_opt)
    '}'             reduce using rule 451 (member_specification_opt)
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name            go to state 143
    original_namespace_name   go to state 144
    namespace_alias           go to state 145
    class_name                go to state 146
    template_name             go to state 110
    qualified_id              go to state 308
    nested_name_specifier     go to state 259
    class_or_namespace_name   go to state 148
    decl_specifier_seq        go to state 12
    using_declaration         go to state 309
    function_definition       go to state 310
    member_specification      go to state 311
    member_declaration        go to state 312
    access_specifier          go to state 313
    template_declaration      go to state 314
    template_id               go to state 149
    decl_specifier_seq_opt    go to state 315
    member_specification_opt  go to state 487
    EXPORT_opt                go to state 29


State 313

  292 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 488


State 314

  297 member_declaration: template_declaration .

    $default  reduce using rule 297 (member_declaration)


State 315

  188 decl_specifier_seq: decl_specifier_seq_opt . decl_specifier
  275 function_definition: decl_specifier_seq_opt . declarator ctor_initializer_opt function_body
  276                    | decl_specifier_seq_opt . declarator function_try_block
  293 member_declaration: decl_specifier_seq_opt . member_declarator_list_opt ';'

    IDENTIFIER  shift, and go to state 33
    COLONCOLON  shift, and go to state 46
    AUTO        shift, and go to state 47
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    EXPLICIT    shift, and go to state 54
    EXTERN      shift, and go to state 55
    FLOAT       shift, and go to state 56
    FRIEND      shift, and go to state 57
    INLINE      shift, and go to state 58
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    MUTABLE     shift, and go to state 61
    REGISTER    shift, and go to state 62
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STATIC      shift, and go to state 65
    STRUCT      shift, and go to state 66
    TYPEDEF     shift, and go to state 67
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VIRTUAL     shift, and go to state 71
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    IDENTIFIER  [reduce using rule 405 (COLONCOLON_opt)]
    ':'         reduce using rule 423 (identifier_opt)
    ';'         reduce using rule 455 (member_declarator_list_opt)
    $default    reduce using rule 405 (COLONCOLON_opt)

    identifier                  go to state 118
    decl_specifier              go to state 78
    storage_class_specifier     go to state 79
    function_specifier          go to state 80
    type_specifier              go to state 81
    simple_type_specifier       go to state 82
    elaborated_type_specifier   go to state 83
    enum_specifier              go to state 84
    declarator                  go to state 489
    direct_declarator           go to state 88
    ptr_operator                go to state 89
    cv_qualifier                go to state 90
    declarator_id               go to state 91
    class_specifier             go to state 92
    class_head                  go to state 93
    class_key                   go to state 94
    member_declarator_list      go to state 490
    member_declarator           go to state 491
    COLONCOLON_opt              go to state 95
    identifier_opt              go to state 492
    member_declarator_list_opt  go to state 493


State 316

  285 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 494


State 317

  287 class_head: class_key nested_name_specifier identifier . base_clause_opt

    ':'  shift, and go to state 320

    $default  reduce using rule 453 (base_clause_opt)

    base_clause      go to state 321
    base_clause_opt  go to state 495


State 318

   38 nested_name_specifier: class_or_namespace_name COLONCOLON . nested_name_specifier_opt

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    NAMESPACE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    CLASS_NAME      [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME   [reduce using rule 401 (nested_name_specifier_opt)]
    $default        reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 496


State 319

  217 elaborated_type_specifier: class_key COLONCOLON_opt nested_name_specifier_opt . identifier

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 497


State 320

  305 base_clause: ':' . base_specifier_list

    COLONCOLON  shift, and go to state 46
    PRIVATE     shift, and go to state 304
    PROTECTED   shift, and go to state 305
    PUBLIC      shift, and go to state 306
    VIRTUAL     shift, and go to state 498

    $default  reduce using rule 405 (COLONCOLON_opt)

    base_specifier_list  go to state 499
    base_specifier       go to state 500
    access_specifier     go to state 501
    COLONCOLON_opt       go to state 502


State 321

  454 base_clause_opt: base_clause .

    $default  reduce using rule 454 (base_clause_opt)


State 322

  286 class_head: class_key identifier_opt base_clause_opt .

    $default  reduce using rule 286 (class_head)


State 323

  400 TEMPLATE_opt: TEMPLATE .

    $default  reduce using rule 400 (TEMPLATE_opt)


State 324

  254 ptr_operator: COLONCOLON_opt nested_name_specifier '*' . cv_qualifier_seq_opt

    CONST     shift, and go to state 51
    VOLATILE  shift, and go to state 73

    $default  reduce using rule 431 (cv_qualifier_seq_opt)

    cv_qualifier_seq      go to state 124
    cv_qualifier          go to state 125
    cv_qualifier_seq_opt  go to state 503


State 325

   37 qualified_id: nested_name_specifier TEMPLATE_opt . unqualified_id

    IDENTIFIER     shift, and go to state 33
    TEMPLATE_NAME  shift, and go to state 107
    OPERATOR       shift, and go to state 108
    '~'            shift, and go to state 109

    template_name           go to state 110
    identifier              go to state 111
    unqualified_id          go to state 504
    conversion_function_id  go to state 113
    operator_function_id    go to state 114
    template_id             go to state 115


State 326

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


State 327

    8 enum_name: ENUM_NAME .

    $default  reduce using rule 8 (enum_name)


State 328

  216 type_name: typedef_name .

    $default  reduce using rule 216 (type_name)


State 329

  214 type_name: class_name .

    $default  reduce using rule 214 (type_name)


State 330

  215 type_name: enum_name .

    $default  reduce using rule 215 (type_name)


State 331

  202 simple_type_specifier: COLONCOLON_opt nested_name_specifier_opt type_name .
  259 declarator_id: COLONCOLON_opt nested_name_specifier_opt type_name .

    TRY       reduce using rule 259 (declarator_id)
    '('       reduce using rule 202 (simple_type_specifier)
    '('       [reduce using rule 259 (declarator_id)]
    '['       reduce using rule 259 (declarator_id)
    ','       reduce using rule 259 (declarator_id)
    ':'       reduce using rule 202 (simple_type_specifier)
    ':'       [reduce using rule 259 (declarator_id)]
    '='       reduce using rule 259 (declarator_id)
    ';'       reduce using rule 202 (simple_type_specifier)
    ';'       [reduce using rule 259 (declarator_id)]
    '{'       reduce using rule 259 (declarator_id)
    $default  reduce using rule 202 (simple_type_specifier)


State 332

  371 type_parameter: CLASS . identifier_opt
  372               | CLASS . identifier_opt '=' type_id

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 423 (identifier_opt)

    identifier      go to state 118
    identifier_opt  go to state 505


State 333

  375 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier_opt
  376               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier_opt '=' template_name

    '<'  shift, and go to state 506


State 334

  373 type_parameter: TYPENAME . identifier_opt
  374               | TYPENAME . identifier_opt '=' type_id

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 423 (identifier_opt)

    identifier      go to state 118
    identifier_opt  go to state 507


State 335

  370 template_parameter: parameter_declaration .

    $default  reduce using rule 370 (template_parameter)


State 336

  366 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  368 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 508
    ','  shift, and go to state 509


State 337

  367 template_parameter_list: template_parameter .

    $default  reduce using rule 367 (template_parameter_list)


State 338

  369 template_parameter: type_parameter .

    $default  reduce using rule 369 (template_parameter)


State 339

  240 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 240 (asm_definition)


State 340

  241 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 241 (linkage_specification)


State 341

  232 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 232 (extension_namespace_definition)


State 342

  235 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 235 (namespace_alias_definition)


State 343

  236 qualified_namespace_specifier: COLONCOLON_opt nested_name_specifier_opt . namespace_name

    NAMESPACE_NAME  shift, and go to state 141

    namespace_name           go to state 510
    original_namespace_name  go to state 144
    namespace_alias          go to state 145


State 344

  231 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 231 (original_namespace_definition)


State 345

  327 operator: DELETE '[' . ']'

    ']'  shift, and go to state 511


State 346

  326 operator: NEW '[' . ']'

    ']'  shift, and go to state 512


State 347

  364 operator: '(' ')' .

    $default  reduce using rule 364 (operator)


State 348

  365 operator: '[' ']' .

    $default  reduce using rule 365 (operator)


State 349

  440 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 440 (type_specifier_seq_opt)


State 350

  261 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 261 (type_specifier_seq)


State 351

  316 conversion_declarator: ptr_operator . conversion_declarator_opt

    COLONCOLON  shift, and go to state 46
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    '*'             [reduce using rule 467 (conversion_declarator_opt)]
    '&'             [reduce using rule 467 (conversion_declarator_opt)]
    $default        reduce using rule 467 (conversion_declarator_opt)

    ptr_operator               go to state 351
    conversion_declarator      go to state 352
    COLONCOLON_opt             go to state 353
    conversion_declarator_opt  go to state 513


State 352

  468 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 468 (conversion_declarator_opt)


State 353

  254 ptr_operator: COLONCOLON_opt . nested_name_specifier '*' cv_qualifier_seq_opt

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    nested_name_specifier    go to state 514
    class_or_namespace_name  go to state 148
    template_id              go to state 149


State 354

  315 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 315 (conversion_type_id)


State 355

  202 simple_type_specifier: COLONCOLON_opt nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 515
    template_id    go to state 149


State 356

  377 template_id: template_name . '<' template_argument_list '>'
  382 template_argument: template_name .

    '<'  shift, and go to state 214

    $default  reduce using rule 382 (template_argument)


State 357

  380 template_argument: assignment_expression .

    $default  reduce using rule 380 (template_argument)


State 358

   44 postfix_expression: simple_type_specifier . '(' expression_list_opt ')'
  197 type_specifier: simple_type_specifier .

    '('  shift, and go to state 434

    '('       [reduce using rule 197 (type_specifier)]
    $default  reduce using rule 197 (type_specifier)


State 359

  381 template_argument: type_id .

    $default  reduce using rule 381 (template_argument)


State 360

  260 type_id: type_specifier_seq . abstract_declarator_opt

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 516
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    ')'       reduce using rule 437 (abstract_declarator_opt)
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    '>'       reduce using rule 437 (abstract_declarator_opt)
    ','       reduce using rule 437 (abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    ptr_operator                    go to state 517
    abstract_declarator             go to state 475
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 353
    abstract_declarator_opt         go to state 518
    direct_abstract_declarator_opt  go to state 478


State 361

  377 template_id: template_name '<' template_argument_list . '>'
  379 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 519
    ','  shift, and go to state 520


State 362

  378 template_argument_list: template_argument .

    $default  reduce using rule 378 (template_argument_list)


State 363

  239 using_directive: USING NAMESPACE COLONCOLON_opt nested_name_specifier_opt namespace_name . ';'

    ';'  shift, and go to state 521


State 364

  237 using_declaration: USING TYPENAME_opt COLONCOLON_opt nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 522


State 365

  218 elaborated_type_specifier: ENUM COLONCOLON_opt nested_name_specifier_opt identifier .

    $default  reduce using rule 218 (elaborated_type_specifier)


State 366

  226 enumerator: identifier .

    $default  reduce using rule 226 (enumerator)


State 367

  223 enumerator_list: enumerator_list . ',' enumerator_definition
  426 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 523

    $default  reduce using rule 426 (enumerator_list_opt)


State 368

  222 enumerator_list: enumerator_definition .

    $default  reduce using rule 222 (enumerator_list)


State 369

  224 enumerator_definition: enumerator .
  225                      | enumerator . '=' constant_expression

    '='  shift, and go to state 524

    $default  reduce using rule 224 (enumerator_definition)


State 370

  221 enum_specifier: ENUM identifier_opt '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 525


State 371

  219 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  220                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 526

    '<'       [reduce using rule 219 (elaborated_type_specifier)]
    $default  reduce using rule 219 (elaborated_type_specifier)


State 372

  259 declarator_id: COLONCOLON_opt nested_name_specifier_opt type_name .

    $default  reduce using rule 259 (declarator_id)


State 373

  386 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 527

    handler_seq  go to state 528
    handler      go to state 529


State 374

  323 operator_function_id: OPERATOR . operator

    ADDEQ       shift, and go to state 168
    SUBEQ       shift, and go to state 169
    MULEQ       shift, and go to state 170
    DIVEQ       shift, and go to state 171
    MODEQ       shift, and go to state 172
    XOREQ       shift, and go to state 173
    ANDEQ       shift, and go to state 174
    OREQ        shift, and go to state 175
    SL          shift, and go to state 176
    SR          shift, and go to state 177
    SREQ        shift, and go to state 178
    SLEQ        shift, and go to state 179
    EQ          shift, and go to state 180
    NOTEQ       shift, and go to state 181
    LTEQ        shift, and go to state 182
    GTEQ        shift, and go to state 183
    ANDAND      shift, and go to state 184
    OROR        shift, and go to state 185
    PLUSPLUS    shift, and go to state 186
    MINUSMINUS  shift, and go to state 187
    ARROWSTAR   shift, and go to state 188
    ARROW       shift, and go to state 189
    DELETE      shift, and go to state 190
    NEW         shift, and go to state 191
    '('         shift, and go to state 192
    '~'         shift, and go to state 193
    '['         shift, and go to state 194
    '<'         shift, and go to state 195
    '>'         shift, and go to state 196
    ','         shift, and go to state 197
    '*'         shift, and go to state 198
    '&'         shift, and go to state 199
    '+'         shift, and go to state 200
    '!'         shift, and go to state 201
    '/'         shift, and go to state 202
    '%'         shift, and go to state 203
    '^'         shift, and go to state 204
    '|'         shift, and go to state 205
    '='         shift, and go to state 206
    '_'         shift, and go to state 207

    operator  go to state 211


State 375

   25 primary_expression: COLONCOLON identifier .

    $default  reduce using rule 25 (primary_expression)


State 376

   27 primary_expression: COLONCOLON qualified_id .

    $default  reduce using rule 27 (primary_expression)


State 377

   26 primary_expression: COLONCOLON operator_function_id .

    $default  reduce using rule 26 (primary_expression)


State 378

   62 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 62 (unary_expression)


State 379

   63 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 63 (unary_expression)


State 380

   54 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 530
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 381

   51 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 531
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 382

   53 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 532
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 383

   28 primary_expression: '(' . expression ')'
   66 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 390
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 533
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 384

   65 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 65 (unary_expression)


State 385

   52 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 534
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 386

  474 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 474 (assignment_expression_opt)


State 387

  393 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 393 (throw_expression)


State 388

   55 postfix_expression: TYPEID '(' . expression ')'
   56                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 535
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 536
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 389

  135 expression: assignment_expression .

    $default  reduce using rule 135 (expression)


State 390

   28 primary_expression: '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 537
    ','  shift, and go to state 538


State 391

   87 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 539


State 392

   49 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 49 (postfix_expression)


State 393

   50 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 50 (postfix_expression)


State 394

   46 postfix_expression: postfix_expression ARROW . TEMPLATE_opt COLONCOLON_opt id_expression
   48                   | postfix_expression ARROW . pseudo_destructor_name

    COLONCOLON  shift, and go to state 46
    TEMPLATE    shift, and go to state 323

    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    NAMESPACE_NAME  reduce using rule 399 (TEMPLATE_opt)
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      reduce using rule 399 (TEMPLATE_opt)
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 399 (TEMPLATE_opt)
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    COLONCOLON      [reduce using rule 399 (TEMPLATE_opt)]
    '~'             reduce using rule 399 (TEMPLATE_opt)
    '~'             [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 399 (TEMPLATE_opt)

    pseudo_destructor_name  go to state 540
    TEMPLATE_opt            go to state 541
    COLONCOLON_opt          go to state 542


State 395

   43 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ')'             reduce using rule 403 (expression_list_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 543
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    expression_list_opt        go to state 544
    COLONCOLON_opt             go to state 282


State 396

   42 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 545
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 397

   45 postfix_expression: postfix_expression '.' . TEMPLATE_opt COLONCOLON_opt id_expression
   47                   | postfix_expression '.' . pseudo_destructor_name

    COLONCOLON  shift, and go to state 46
    TEMPLATE    shift, and go to state 323

    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    NAMESPACE_NAME  reduce using rule 399 (TEMPLATE_opt)
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      reduce using rule 399 (TEMPLATE_opt)
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 399 (TEMPLATE_opt)
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    COLONCOLON      [reduce using rule 399 (TEMPLATE_opt)]
    '~'             reduce using rule 399 (TEMPLATE_opt)
    '~'             [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 399 (TEMPLATE_opt)

    pseudo_destructor_name  go to state 546
    TEMPLATE_opt            go to state 547
    COLONCOLON_opt          go to state 542


State 398

  279 initializer: '(' expression_list ')' .

    $default  reduce using rule 279 (initializer)


State 399

   58 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 548
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 400

   64 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 64 (unary_expression)


State 401

   89 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 549
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 402

   90 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 550
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 403

   92 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 266
    pm_expression            go to state 551
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 404

   93 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 266
    pm_expression            go to state 552
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 405

   94 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 266
    pm_expression            go to state 553
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 406

   96 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 554
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 407

   97 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 555
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 408

   99 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 556
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 409

  100 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 557
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 410

  104 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 558
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 411

  105 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 559
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 412

  102 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 560
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 413

  103 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 561
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 414

  107 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 562
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 415

  108 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 563
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 416

  110 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 564
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 417

  112 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 565
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 418

  114 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 566
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 419

  116 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 567
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 420

  128 assignment_operator: ADDEQ .

    $default  reduce using rule 128 (assignment_operator)


State 421

  129 assignment_operator: SUBEQ .

    $default  reduce using rule 129 (assignment_operator)


State 422

  125 assignment_operator: MULEQ .

    $default  reduce using rule 125 (assignment_operator)


State 423

  126 assignment_operator: DIVEQ .

    $default  reduce using rule 126 (assignment_operator)


State 424

  127 assignment_operator: MODEQ .

    $default  reduce using rule 127 (assignment_operator)


State 425

  133 assignment_operator: XOREQ .

    $default  reduce using rule 133 (assignment_operator)


State 426

  132 assignment_operator: ANDEQ .

    $default  reduce using rule 132 (assignment_operator)


State 427

  134 assignment_operator: OREQ .

    $default  reduce using rule 134 (assignment_operator)


State 428

  130 assignment_operator: SREQ .

    $default  reduce using rule 130 (assignment_operator)


State 429

  131 assignment_operator: SLEQ .

    $default  reduce using rule 131 (assignment_operator)


State 430

  118 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 568
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 431

  120 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 569
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 432

  124 assignment_operator: '=' .

    $default  reduce using rule 124 (assignment_operator)


State 433

  122 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 570
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 434

   44 postfix_expression: simple_type_specifier '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ')'             reduce using rule 403 (expression_list_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 543
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    expression_list_opt        go to state 571
    COLONCOLON_opt             go to state 282


State 435

   84 delete_expression: COLONCOLON_opt DELETE . cast_expression
   85                  | COLONCOLON_opt DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '['               shift, and go to state 572
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 573
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 436

   75 new_expression: COLONCOLON_opt NEW . new_placement_opt new_type_id new_initializer_opt
   76               | COLONCOLON_opt NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 574

    '('       [reduce using rule 407 (new_placement_opt)]
    $default  reduce using rule 407 (new_placement_opt)

    new_placement      go to state 575
    new_placement_opt  go to state 576


State 437

  319 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER  shift, and go to state 33
    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    identifier            go to state 283
    mem_initializer_list  go to state 577
    mem_initializer       go to state 285
    mem_initializer_id    go to state 286
    COLONCOLON_opt        go to state 287


State 438

  320 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ')'             reduce using rule 403 (expression_list_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 543
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    expression_list_opt        go to state 578
    COLONCOLON_opt             go to state 282


State 439

  321 mem_initializer_id: COLONCOLON_opt nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    class_name     go to state 579
    template_name  go to state 110
    template_id    go to state 149


State 440

  282 initializer_clause: '{' '}' .

    $default  reduce using rule 282 (initializer_clause)


State 441

  283 initializer_list: initializer_clause .

    $default  reduce using rule 283 (initializer_list)


State 442

  281 initializer_clause: '{' initializer_list . COMMA_opt '}'
  284 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 580

    $default  reduce using rule 449 (COMMA_opt)

    COMMA_opt  go to state 581


State 443

  163 jump_statement: BREAK . ';'

    ';'  shift, and go to state 582


State 444

  147 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 583
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 445

  164 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 584


State 446

  148 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 585


State 447

  159 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 586
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 448

  160 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 587


State 449

  166 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 588


State 450

  153 selection_statement: IF . '(' condition ')' statement
  154                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 589


State 451

  235 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 33

    identifier  go to state 590


State 452

  165 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ';'             reduce using rule 413 (expression_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 457
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282
    expression_opt             go to state 591


State 453

  155 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 592


State 454

  385 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 291

    compound_statement  go to state 593


State 455

  158 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 594


State 456

   32 unqualified_id: identifier .
  146 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 595

    $default  reduce using rule 32 (unqualified_id)


State 457

  136 expression: expression . ',' assignment_expression
  414 expression_opt: expression .

    ','  shift, and go to state 538

    $default  reduce using rule 414 (expression_opt)


State 458

  151 statement_seq: statement .

    $default  reduce using rule 151 (statement_seq)


State 459

  138 statement: labeled_statement .

    $default  reduce using rule 138 (statement)


State 460

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


State 461

  140 statement: compound_statement .

    $default  reduce using rule 140 (statement)


State 462

  152 statement_seq: statement_seq . statement
  416 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '}'             reduce using rule 416 (statement_seq_opt)
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 596
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 463

  141 statement: selection_statement .

    $default  reduce using rule 141 (statement)


State 464

  142 statement: iteration_statement .

    $default  reduce using rule 142 (statement)


State 465

  143 statement: jump_statement .

    $default  reduce using rule 143 (statement)


State 466

  144 statement: declaration_statement .

    $default  reduce using rule 144 (statement)


State 467

  167 declaration_statement: block_declaration .

    $default  reduce using rule 167 (declaration_statement)


State 468

  145 statement: try_block .

    $default  reduce using rule 145 (statement)


State 469

  149 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 597


State 470

  150 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 598


State 471

  182 simple_declaration: decl_specifier_seq_opt . init_declarator_list_opt ';'
  188 decl_specifier_seq: decl_specifier_seq_opt . decl_specifier

    COLONCOLON  shift, and go to state 46
    AUTO        shift, and go to state 47
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    EXPLICIT    shift, and go to state 54
    EXTERN      shift, and go to state 55
    FLOAT       shift, and go to state 56
    FRIEND      shift, and go to state 57
    INLINE      shift, and go to state 58
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    MUTABLE     shift, and go to state 61
    REGISTER    shift, and go to state 62
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STATIC      shift, and go to state 65
    STRUCT      shift, and go to state 66
    TYPEDEF     shift, and go to state 67
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VIRTUAL     shift, and go to state 71
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    ';'       reduce using rule 421 (init_declarator_list_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    decl_specifier             go to state 78
    storage_class_specifier    go to state 79
    function_specifier         go to state 80
    type_specifier             go to state 81
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    init_declarator_list       go to state 85
    init_declarator            go to state 86
    declarator                 go to state 226
    direct_declarator          go to state 88
    ptr_operator               go to state 89
    cv_qualifier               go to state 90
    declarator_id              go to state 91
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 95
    init_declarator_list_opt   go to state 96


State 472

  251 direct_declarator: '(' . declarator ')'
  266 direct_abstract_declarator: '(' . abstract_declarator ')'

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 472
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator                      go to state 122
    direct_declarator               go to state 88
    ptr_operator                    go to state 474
    declarator_id                   go to state 91
    abstract_declarator             go to state 599
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 123
    direct_abstract_declarator_opt  go to state 478


State 473

  271 parameter_declaration: decl_specifier_seq declarator .
  272                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 600

    $default  reduce using rule 271 (parameter_declaration)


State 474

  247 declarator: ptr_operator . declarator
  262 abstract_declarator: ptr_operator . abstract_declarator_opt

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 472
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    ELLIPSIS  reduce using rule 437 (abstract_declarator_opt)
    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    ')'       reduce using rule 437 (abstract_declarator_opt)
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    '>'       reduce using rule 437 (abstract_declarator_opt)
    ','       reduce using rule 437 (abstract_declarator_opt)
    '='       reduce using rule 437 (abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator                      go to state 139
    direct_declarator               go to state 88
    ptr_operator                    go to state 474
    declarator_id                   go to state 91
    abstract_declarator             go to state 475
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 123
    abstract_declarator_opt         go to state 601
    direct_abstract_declarator_opt  go to state 478


State 475

  438 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 438 (abstract_declarator_opt)


State 476

  263 abstract_declarator: direct_abstract_declarator .
  442 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 442 (direct_abstract_declarator_opt)
    '['       reduce using rule 442 (direct_abstract_declarator_opt)
    $default  reduce using rule 263 (abstract_declarator)


State 477

  273 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  274                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 602

    $default  reduce using rule 273 (parameter_declaration)


State 478

  264 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt
  265                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 603
    '['  shift, and go to state 604


State 479

  249 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq_opt exception_specification_opt

    CONST     shift, and go to state 51
    VOLATILE  shift, and go to state 73

    $default  reduce using rule 431 (cv_qualifier_seq_opt)

    cv_qualifier_seq      go to state 124
    cv_qualifier          go to state 125
    cv_qualifier_seq_opt  go to state 605


State 480

  268 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  270 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    ELLIPSIS  shift, and go to state 606

    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq      go to state 294
    parameter_declaration   go to state 607
    decl_specifier_seq_opt  go to state 298


State 481

  446 ELLIPSIS_opt: ELLIPSIS .

    $default  reduce using rule 446 (ELLIPSIS_opt)


State 482

  267 parameter_declaration_clause: parameter_declaration_list_opt ELLIPSIS_opt .

    $default  reduce using rule 267 (parameter_declaration_clause)


State 483

  250 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 250 (direct_declarator)


State 484

  295 member_declaration: qualified_id ';' .

    $default  reduce using rule 295 (member_declaration)


State 485

  458 SEMICOLON_opt: ';' .

    $default  reduce using rule 458 (SEMICOLON_opt)


State 486

  294 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 294 (member_declaration)


State 487

  291 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 291 (member_specification)


State 488

  292 member_specification: access_specifier ':' . member_specification_opt

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    EXPORT          shift, and go to state 2
    PRIVATE         shift, and go to state 304
    PROTECTED       shift, and go to state 305
    PUBLIC          shift, and go to state 306
    USING           shift, and go to state 307

    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE        reduce using rule 469 (EXPORT_opt)
    '}'             reduce using rule 451 (member_specification_opt)
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name            go to state 143
    original_namespace_name   go to state 144
    namespace_alias           go to state 145
    class_name                go to state 146
    template_name             go to state 110
    qualified_id              go to state 308
    nested_name_specifier     go to state 259
    class_or_namespace_name   go to state 148
    decl_specifier_seq        go to state 12
    using_declaration         go to state 309
    function_definition       go to state 310
    member_specification      go to state 311
    member_declaration        go to state 312
    access_specifier          go to state 313
    template_declaration      go to state 314
    template_id               go to state 149
    decl_specifier_seq_opt    go to state 315
    member_specification_opt  go to state 608
    EXPORT_opt                go to state 29


State 489

  275 function_definition: decl_specifier_seq_opt declarator . ctor_initializer_opt function_body
  276                    | decl_specifier_seq_opt declarator . function_try_block
  300 member_declarator: declarator . pure_specifier_opt
  301                  | declarator . constant_initializer_opt

    TRY  shift, and go to state 128
    ':'  shift, and go to state 130
    '='  shift, and go to state 609

    ','       reduce using rule 459 (pure_specifier_opt)
    ','       [reduce using rule 461 (constant_initializer_opt)]
    ';'       reduce using rule 459 (pure_specifier_opt)
    ';'       [reduce using rule 461 (constant_initializer_opt)]
    '{'       reduce using rule 447 (ctor_initializer_opt)
    $default  reduce using rule 459 (pure_specifier_opt)

    pure_specifier            go to state 610
    constant_initializer      go to state 611
    ctor_initializer          go to state 133
    function_try_block        go to state 134
    ctor_initializer_opt      go to state 136
    pure_specifier_opt        go to state 612
    constant_initializer_opt  go to state 613


State 490

  299 member_declarator_list: member_declarator_list . ',' member_declarator
  456 member_declarator_list_opt: member_declarator_list .

    ','  shift, and go to state 614

    $default  reduce using rule 456 (member_declarator_list_opt)


State 491

  298 member_declarator_list: member_declarator .

    $default  reduce using rule 298 (member_declarator_list)


State 492

  302 member_declarator: identifier_opt . ':' constant_expression

    ':'  shift, and go to state 615


State 493

  293 member_declaration: decl_specifier_seq_opt member_declarator_list_opt . ';'

    ';'  shift, and go to state 616


State 494

  285 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 285 (class_specifier)


State 495

  287 class_head: class_key nested_name_specifier identifier base_clause_opt .

    $default  reduce using rule 287 (class_head)


State 496

   38 nested_name_specifier: class_or_namespace_name COLONCOLON nested_name_specifier_opt .

    $default  reduce using rule 38 (nested_name_specifier)


State 497

  217 elaborated_type_specifier: class_key COLONCOLON_opt nested_name_specifier_opt identifier .

    $default  reduce using rule 217 (elaborated_type_specifier)


State 498

  309 base_specifier: VIRTUAL . access_specifier_opt COLONCOLON_opt nested_name_specifier_opt class_name

    PRIVATE    shift, and go to state 304
    PROTECTED  shift, and go to state 305
    PUBLIC     shift, and go to state 306

    $default  reduce using rule 463 (access_specifier_opt)

    access_specifier      go to state 617
    access_specifier_opt  go to state 618


State 499

  305 base_clause: ':' base_specifier_list .
  307 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 619

    $default  reduce using rule 305 (base_clause)


State 500

  306 base_specifier_list: base_specifier .

    $default  reduce using rule 306 (base_specifier_list)


State 501

  310 base_specifier: access_specifier . VIRTUAL_opt COLONCOLON_opt nested_name_specifier_opt class_name

    VIRTUAL  shift, and go to state 620

    $default  reduce using rule 465 (VIRTUAL_opt)

    VIRTUAL_opt  go to state 621


State 502

  308 base_specifier: COLONCOLON_opt . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 622


State 503

  254 ptr_operator: COLONCOLON_opt nested_name_specifier '*' cv_qualifier_seq_opt .

    $default  reduce using rule 254 (ptr_operator)


State 504

   37 qualified_id: nested_name_specifier TEMPLATE_opt unqualified_id .

    $default  reduce using rule 37 (qualified_id)


State 505

  371 type_parameter: CLASS identifier_opt .
  372               | CLASS identifier_opt . '=' type_id

    '='  shift, and go to state 623

    $default  reduce using rule 371 (type_parameter)


State 506

  375 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier_opt
  376               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier_opt '=' template_name

    CLASS     shift, and go to state 332
    TEMPLATE  shift, and go to state 333
    TYPENAME  shift, and go to state 334

    CLASS     [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPENAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq       go to state 294
    parameter_declaration    go to state 335
    template_parameter_list  go to state 624
    template_parameter       go to state 337
    type_parameter           go to state 338
    decl_specifier_seq_opt   go to state 298


State 507

  373 type_parameter: TYPENAME identifier_opt .
  374               | TYPENAME identifier_opt . '=' type_id

    '='  shift, and go to state 625

    $default  reduce using rule 373 (type_parameter)


State 508

  366 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    ASM        shift, and go to state 1
    EXPORT     shift, and go to state 2
    EXTERN     shift, and go to state 3
    NAMESPACE  shift, and go to state 4
    TEMPLATE   shift, and go to state 5
    USING      shift, and go to state 6

    EXTERN    [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE  [reduce using rule 469 (EXPORT_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    declaration                     go to state 626
    block_declaration               go to state 10
    simple_declaration              go to state 11
    decl_specifier_seq              go to state 12
    namespace_definition            go to state 13
    named_namespace_definition      go to state 14
    original_namespace_definition   go to state 15
    extension_namespace_definition  go to state 16
    unnamed_namespace_definition    go to state 17
    namespace_alias_definition      go to state 18
    using_declaration               go to state 19
    using_directive                 go to state 20
    asm_definition                  go to state 21
    linkage_specification           go to state 22
    function_definition             go to state 23
    template_declaration            go to state 24
    explicit_instantiation          go to state 25
    explicit_specialization         go to state 26
    decl_specifier_seq_opt          go to state 28
    EXPORT_opt                      go to state 29


State 509

  368 template_parameter_list: template_parameter_list ',' . template_parameter

    CLASS     shift, and go to state 332
    TEMPLATE  shift, and go to state 333
    TYPENAME  shift, and go to state 334

    CLASS     [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPENAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq      go to state 294
    parameter_declaration   go to state 335
    template_parameter      go to state 627
    type_parameter          go to state 338
    decl_specifier_seq_opt  go to state 298


State 510

  236 qualified_namespace_specifier: COLONCOLON_opt nested_name_specifier_opt namespace_name .

    $default  reduce using rule 236 (qualified_namespace_specifier)


State 511

  327 operator: DELETE '[' ']' .

    $default  reduce using rule 327 (operator)


State 512

  326 operator: NEW '[' ']' .

    $default  reduce using rule 326 (operator)


State 513

  316 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 316 (conversion_declarator)


State 514

  254 ptr_operator: COLONCOLON_opt nested_name_specifier . '*' cv_qualifier_seq_opt

    '*'  shift, and go to state 324


State 515

  202 simple_type_specifier: COLONCOLON_opt nested_name_specifier_opt type_name .

    $default  reduce using rule 202 (simple_type_specifier)


State 516

  266 direct_abstract_declarator: '(' . abstract_declarator ')'

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 516
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    ptr_operator                    go to state 517
    abstract_declarator             go to state 599
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 353
    direct_abstract_declarator_opt  go to state 478


State 517

  262 abstract_declarator: ptr_operator . abstract_declarator_opt

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 516
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    ')'       reduce using rule 437 (abstract_declarator_opt)
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    '>'       reduce using rule 437 (abstract_declarator_opt)
    ','       reduce using rule 437 (abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    ptr_operator                    go to state 517
    abstract_declarator             go to state 475
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 353
    abstract_declarator_opt         go to state 601
    direct_abstract_declarator_opt  go to state 478


State 518

  260 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 260 (type_id)


State 519

  377 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 377 (template_id)


State 520

  379 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 356
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 357
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 359
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    template_argument          go to state 628
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 521

  239 using_directive: USING NAMESPACE COLONCOLON_opt nested_name_specifier_opt namespace_name ';' .

    $default  reduce using rule 239 (using_directive)


State 522

  237 using_declaration: USING TYPENAME_opt COLONCOLON_opt nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 237 (using_declaration)


State 523

  223 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 33

    identifier             go to state 366
    enumerator_definition  go to state 629
    enumerator             go to state 369


State 524

  225 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 630
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 525

  221 enum_specifier: ENUM identifier_opt '{' enumerator_list_opt '}' .

    $default  reduce using rule 221 (enum_specifier)


State 526

  220 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 356
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 357
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 359
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    template_argument_list     go to state 631
    template_argument          go to state 362
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 527

  388 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 632


State 528

  386 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 386 (function_try_block)


State 529

  387 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 527

    $default  reduce using rule 471 (handler_seq_opt)

    handler_seq      go to state 633
    handler          go to state 529
    handler_seq_opt  go to state 634


State 530

   54 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 635


State 531

   51 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 636


State 532

   53 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 637


State 533

   66 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 638


State 534

   52 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 639


State 535

   55 postfix_expression: TYPEID '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 640
    ','  shift, and go to state 538


State 536

   56 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 641


State 537

   28 primary_expression: '(' expression ')' .

    $default  reduce using rule 28 (primary_expression)


State 538

  136 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 642
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 539

   87 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 643
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 540

   48 postfix_expression: postfix_expression ARROW pseudo_destructor_name .

    $default  reduce using rule 48 (postfix_expression)


State 541

   46 postfix_expression: postfix_expression ARROW TEMPLATE_opt . COLONCOLON_opt id_expression

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 644


State 542

   59 pseudo_destructor_name: COLONCOLON_opt . nested_name_specifier_opt type_name COLONCOLON '~' type_name
   60                       | COLONCOLON_opt . nested_name_specifier_opt '~' type_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]
    $default       reduce using rule 401 (nested_name_specifier_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 645


State 543

   58 expression_list: expression_list . ',' assignment_expression
  404 expression_list_opt: expression_list .

    ','  shift, and go to state 399

    $default  reduce using rule 404 (expression_list_opt)


State 544

   43 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 646


State 545

   42 postfix_expression: postfix_expression '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 647
    ','  shift, and go to state 538


State 546

   47 postfix_expression: postfix_expression '.' pseudo_destructor_name .

    $default  reduce using rule 47 (postfix_expression)


State 547

   45 postfix_expression: postfix_expression '.' TEMPLATE_opt . COLONCOLON_opt id_expression

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 648


State 548

   58 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 58 (expression_list)


State 549

   89 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 89 (pm_expression)


State 550

   90 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


State 551

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 401
    ARROWSTAR  shift, and go to state 402

    $default  reduce using rule 92 (multiplicative_expression)


State 552

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 401
    ARROWSTAR  shift, and go to state 402

    $default  reduce using rule 93 (multiplicative_expression)


State 553

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 401
    ARROWSTAR  shift, and go to state 402

    $default  reduce using rule 94 (multiplicative_expression)


State 554

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 403
    '/'  shift, and go to state 404
    '%'  shift, and go to state 405

    $default  reduce using rule 96 (additive_expression)


State 555

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 403
    '/'  shift, and go to state 404
    '%'  shift, and go to state 405

    $default  reduce using rule 97 (additive_expression)


State 556

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 406
    '-'  shift, and go to state 407

    $default  reduce using rule 99 (shift_expression)


State 557

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 406
    '-'  shift, and go to state 407

    $default  reduce using rule 100 (shift_expression)


State 558

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 408
    SR  shift, and go to state 409

    $default  reduce using rule 104 (relational_expression)


State 559

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 408
    SR  shift, and go to state 409

    $default  reduce using rule 105 (relational_expression)


State 560

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  102 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 408
    SR  shift, and go to state 409

    $default  reduce using rule 102 (relational_expression)


State 561

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 408
    SR  shift, and go to state 409

    $default  reduce using rule 103 (relational_expression)


State 562

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  107 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 410
    GTEQ  shift, and go to state 411
    '<'   shift, and go to state 412
    '>'   shift, and go to state 413

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


State 563

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 410
    GTEQ  shift, and go to state 411
    '<'   shift, and go to state 412
    '>'   shift, and go to state 413

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


State 564

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  110 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 414
    NOTEQ  shift, and go to state 415

    $default  reduce using rule 110 (and_expression)


State 565

  110 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 416

    $default  reduce using rule 112 (exclusive_or_expression)


State 566

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 417

    $default  reduce using rule 114 (inclusive_or_expression)


State 567

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 418

    $default  reduce using rule 116 (logical_and_expression)


State 568

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 419

    $default  reduce using rule 118 (logical_or_expression)


State 569

  120 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 538
    ':'  shift, and go to state 649


State 570

  122 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 122 (assignment_expression)


State 571

   44 postfix_expression: simple_type_specifier '(' expression_list_opt . ')'

    ')'  shift, and go to state 650


State 572

   85 delete_expression: COLONCOLON_opt DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 651


State 573

   84 delete_expression: COLONCOLON_opt DELETE cast_expression .

    $default  reduce using rule 84 (delete_expression)


State 574

   77 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 652
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 575

  408 new_placement_opt: new_placement .

    $default  reduce using rule 408 (new_placement_opt)


State 576

   75 new_expression: COLONCOLON_opt NEW new_placement_opt . new_type_id new_initializer_opt
   76               | COLONCOLON_opt NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74
    '('         shift, and go to state 653

    $default  reduce using rule 405 (COLONCOLON_opt)

    new_type_id                go to state 654
    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 655
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 577

  319 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 319 (mem_initializer_list)


State 578

  320 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 656


State 579

  321 mem_initializer_id: COLONCOLON_opt nested_name_specifier_opt class_name .

    $default  reduce using rule 321 (mem_initializer_id)


State 580

  284 initializer_list: initializer_list ',' . initializer_clause
  450 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 288

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    '}'             reduce using rule 450 (COMMA_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 289
    simple_type_specifier      go to state 280
    initializer_clause         go to state 657
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 581

  281 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 658


State 582

  163 jump_statement: BREAK ';' .

    $default  reduce using rule 163 (jump_statement)


State 583

  147 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 659


State 584

  164 jump_statement: CONTINUE ';' .

    $default  reduce using rule 164 (jump_statement)


State 585

  148 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 660
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 586

  159 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 661


State 587

  160 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 457
    expression_statement       go to state 662
    for_init_statement         go to state 663
    simple_declaration         go to state 664
    decl_specifier_seq         go to state 12
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282
    expression_opt             go to state 469
    decl_specifier_seq_opt     go to state 471


State 588

  166 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 665


State 589

  153 selection_statement: IF '(' . condition ')' statement
  154                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 666
    condition                  go to state 667
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 668
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 590

  235 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 104


State 591

  165 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 669


State 592

  155 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 666
    condition                  go to state 670
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 668
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 593

  385 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 527

    handler_seq  go to state 671
    handler      go to state 529


State 594

  158 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 666
    condition                  go to state 672
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 668
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 595

  146 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 673
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 596

  152 statement_seq: statement_seq statement .

    $default  reduce using rule 152 (statement_seq)


State 597

  149 expression_statement: expression_opt ';' .

    $default  reduce using rule 149 (expression_statement)


State 598

  150 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 150 (compound_statement)


State 599

  266 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 674


State 600

  272 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 675
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 601

  262 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 262 (abstract_declarator)


State 602

  274 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 676
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 603

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt

    ELLIPSIS  reduce using rule 443 (parameter_declaration_list_opt)
    ')'       reduce using rule 443 (parameter_declaration_list_opt)
    $default  reduce using rule 419 (decl_specifier_seq_opt)

    decl_specifier_seq              go to state 294
    parameter_declaration_clause    go to state 677
    parameter_declaration_list      go to state 296
    parameter_declaration           go to state 297
    decl_specifier_seq_opt          go to state 298
    parameter_declaration_list_opt  go to state 299


State 604

  265 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ']'             reduce using rule 435 (constant_expression_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 302
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282
    constant_expression_opt    go to state 678


State 605

  249 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq_opt . exception_specification_opt

    THROW  shift, and go to state 679

    $default  reduce using rule 433 (exception_specification_opt)

    exception_specification      go to state 680
    exception_specification_opt  go to state 681


State 606

  268 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 268 (parameter_declaration_clause)


State 607

  270 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 270 (parameter_declaration_list)


State 608

  292 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 292 (member_specification)


State 609

  303 pure_specifier: '=' . '0'
  304 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '0'               shift, and go to state 682

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 683
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 610

  460 pure_specifier_opt: pure_specifier .

    $default  reduce using rule 460 (pure_specifier_opt)


State 611

  462 constant_initializer_opt: constant_initializer .

    $default  reduce using rule 462 (constant_initializer_opt)


State 612

  300 member_declarator: declarator pure_specifier_opt .

    $default  reduce using rule 300 (member_declarator)


State 613

  301 member_declarator: declarator constant_initializer_opt .

    $default  reduce using rule 301 (member_declarator)


State 614

  299 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER  shift, and go to state 33
    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    IDENTIFIER  [reduce using rule 405 (COLONCOLON_opt)]
    ':'         reduce using rule 423 (identifier_opt)
    $default    reduce using rule 405 (COLONCOLON_opt)

    identifier         go to state 118
    declarator         go to state 684
    direct_declarator  go to state 88
    ptr_operator       go to state 89
    declarator_id      go to state 91
    member_declarator  go to state 685
    COLONCOLON_opt     go to state 123
    identifier_opt     go to state 492


State 615

  302 member_declarator: identifier_opt ':' . constant_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 686
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 616

  293 member_declaration: decl_specifier_seq_opt member_declarator_list_opt ';' .

    $default  reduce using rule 293 (member_declaration)


State 617

  464 access_specifier_opt: access_specifier .

    $default  reduce using rule 464 (access_specifier_opt)


State 618

  309 base_specifier: VIRTUAL access_specifier_opt . COLONCOLON_opt nested_name_specifier_opt class_name

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 687


State 619

  307 base_specifier_list: base_specifier_list ',' . base_specifier

    COLONCOLON  shift, and go to state 46
    PRIVATE     shift, and go to state 304
    PROTECTED   shift, and go to state 305
    PUBLIC      shift, and go to state 306
    VIRTUAL     shift, and go to state 498

    $default  reduce using rule 405 (COLONCOLON_opt)

    base_specifier    go to state 688
    access_specifier  go to state 501
    COLONCOLON_opt    go to state 502


State 620

  466 VIRTUAL_opt: VIRTUAL .

    $default  reduce using rule 466 (VIRTUAL_opt)


State 621

  310 base_specifier: access_specifier VIRTUAL_opt . COLONCOLON_opt nested_name_specifier_opt class_name

    COLONCOLON  shift, and go to state 46

    $default  reduce using rule 405 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 689


State 622

  308 base_specifier: COLONCOLON_opt nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    class_name     go to state 690
    template_name  go to state 110
    template_id    go to state 149


State 623

  372 type_parameter: CLASS identifier_opt '=' . type_id

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 691
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 624

  368 template_parameter_list: template_parameter_list . ',' template_parameter
  375 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier_opt
  376               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier_opt '=' template_name

    '>'  shift, and go to state 692
    ','  shift, and go to state 509


State 625

  374 type_parameter: TYPENAME identifier_opt '=' . type_id

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 693
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 626

  366 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 366 (template_declaration)


State 627

  368 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 368 (template_parameter_list)


State 628

  379 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 379 (template_argument_list)


State 629

  223 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 223 (enumerator_list)


State 630

  225 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 225 (enumerator_definition)


State 631

  220 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  379 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 694
    ','  shift, and go to state 520


State 632

  388 handler: CATCH '(' . exception_declaration ')' compound_statement

    ELLIPSIS    shift, and go to state 695
    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 696
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    exception_declaration      go to state 697
    COLONCOLON_opt             go to state 212


State 633

  472 handler_seq_opt: handler_seq .

    $default  reduce using rule 472 (handler_seq_opt)


State 634

  387 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 387 (handler_seq)


State 635

   54 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 698


State 636

   51 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 699


State 637

   53 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 700


State 638

   66 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 66 (unary_expression)


State 639

   52 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 701


State 640

   55 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 55 (postfix_expression)


State 641

   56 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 56 (postfix_expression)


State 642

  136 expression: expression ',' assignment_expression .

    $default  reduce using rule 136 (expression)


State 643

   87 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 87 (cast_expression)


State 644

   46 postfix_expression: postfix_expression ARROW TEMPLATE_opt COLONCOLON_opt . id_expression

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    OPERATOR        shift, and go to state 108
    '~'             shift, and go to state 109

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    id_expression            go to state 702
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156


State 645

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt . type_name COLONCOLON '~' type_name
   60                       | COLONCOLON_opt nested_name_specifier_opt . '~' type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107
    '~'            shift, and go to state 703

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 704
    template_id    go to state 149


State 646

   43 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 43 (postfix_expression)


State 647

   42 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 42 (postfix_expression)


State 648

   45 postfix_expression: postfix_expression '.' TEMPLATE_opt COLONCOLON_opt . id_expression

    IDENTIFIER      shift, and go to state 33
    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107
    OPERATOR        shift, and go to state 108
    '~'             shift, and go to state 109

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    id_expression            go to state 705
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156


State 649

  120 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 706
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 650

   44 postfix_expression: simple_type_specifier '(' expression_list_opt ')' .

    $default  reduce using rule 44 (postfix_expression)


State 651

   85 delete_expression: COLONCOLON_opt DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name           go to state 143
    original_namespace_name  go to state 144
    namespace_alias          go to state 145
    class_name               go to state 146
    template_name            go to state 110
    identifier               go to state 111
    literal                  go to state 251
    integer_literal          go to state 252
    character_literal        go to state 253
    floating_literal         go to state 254
    string_literal           go to state 255
    boolean_literal          go to state 256
    primary_expression       go to state 257
    id_expression            go to state 258
    unqualified_id           go to state 153
    qualified_id             go to state 154
    nested_name_specifier    go to state 259
    class_or_namespace_name  go to state 148
    postfix_expression       go to state 260
    unary_expression         go to state 262
    unary_operator           go to state 263
    new_expression           go to state 264
    delete_expression        go to state 265
    cast_expression          go to state 707
    simple_type_specifier    go to state 280
    conversion_function_id   go to state 113
    operator_function_id     go to state 114
    template_id              go to state 156
    COLONCOLON_opt           go to state 282


State 652

   58 expression_list: expression_list . ',' assignment_expression
   77 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 708
    ','  shift, and go to state 399


State 653

   76 new_expression: COLONCOLON_opt NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 709
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 654

   75 new_expression: COLONCOLON_opt NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 710

    $default  reduce using rule 409 (new_initializer_opt)

    new_initializer      go to state 711
    new_initializer_opt  go to state 712


State 655

   78 new_type_id: type_specifier_seq . new_declarator_opt

    COLONCOLON  shift, and go to state 46
    '['         shift, and go to state 713
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    '*'             [reduce using rule 411 (new_declarator_opt)]
    '&'             [reduce using rule 411 (new_declarator_opt)]
    $default        reduce using rule 411 (new_declarator_opt)

    new_declarator         go to state 714
    direct_new_declarator  go to state 715
    ptr_operator           go to state 716
    COLONCOLON_opt         go to state 353
    new_declarator_opt     go to state 717


State 656

  320 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 320 (mem_initializer)


State 657

  284 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 284 (initializer_list)


State 658

  281 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 281 (initializer_clause)


State 659

  147 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 718
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 660

  148 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 148 (labeled_statement)


State 661

  159 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 719


State 662

  161 for_init_statement: expression_statement .

    $default  reduce using rule 161 (for_init_statement)


State 663

  160 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CLASS             shift, and go to state 50
    CONST             shift, and go to state 51
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    ENUM              shift, and go to state 53
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    STRUCT            shift, and go to state 66
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    TYPENAME          shift, and go to state 68
    UNION             shift, and go to state 69
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    VOLATILE          shift, and go to state 73
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ';'             reduce using rule 417 (condition_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 666
    condition                  go to state 720
    type_specifier             go to state 208
    simple_type_specifier      go to state 358
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_specifier_seq         go to state 668
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282
    condition_opt              go to state 721


State 664

  162 for_init_statement: simple_declaration .

    $default  reduce using rule 162 (for_init_statement)


State 665

  166 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 166 (jump_statement)


State 666

  136 expression: expression . ',' assignment_expression
  156 condition: expression .

    ','  shift, and go to state 538

    $default  reduce using rule 156 (condition)


State 667

  153 selection_statement: IF '(' condition . ')' statement
  154                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 722


State 668

  157 condition: type_specifier_seq . declarator '=' assignment_expression

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 75
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator         go to state 723
    direct_declarator  go to state 88
    ptr_operator       go to state 89
    declarator_id      go to state 91
    COLONCOLON_opt     go to state 123


State 669

  165 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 165 (jump_statement)


State 670

  155 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 724


State 671

  385 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 385 (try_block)


State 672

  158 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 725


State 673

  146 labeled_statement: identifier ':' statement .

    $default  reduce using rule 146 (labeled_statement)


State 674

  266 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 266 (direct_abstract_declarator)


State 675

  272 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 272 (parameter_declaration)


State 676

  274 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 274 (parameter_declaration)


State 677

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq_opt exception_specification_opt

    ')'  shift, and go to state 726


State 678

  265 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 727


State 679

  394 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 728


State 680

  434 exception_specification_opt: exception_specification .

    $default  reduce using rule 434 (exception_specification_opt)


State 681

  249 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt .

    $default  reduce using rule 249 (direct_declarator)


State 682

  303 pure_specifier: '=' '0' .

    $default  reduce using rule 303 (pure_specifier)


State 683

  304 constant_initializer: '=' constant_expression .

    $default  reduce using rule 304 (constant_initializer)


State 684

  300 member_declarator: declarator . pure_specifier_opt
  301                  | declarator . constant_initializer_opt

    '='  shift, and go to state 609

    ','       reduce using rule 459 (pure_specifier_opt)
    ','       [reduce using rule 461 (constant_initializer_opt)]
    ';'       reduce using rule 459 (pure_specifier_opt)
    ';'       [reduce using rule 461 (constant_initializer_opt)]
    $default  reduce using rule 459 (pure_specifier_opt)

    pure_specifier            go to state 610
    constant_initializer      go to state 611
    pure_specifier_opt        go to state 612
    constant_initializer_opt  go to state 613


State 685

  299 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 299 (member_declarator_list)


State 686

  302 member_declarator: identifier_opt ':' constant_expression .

    $default  reduce using rule 302 (member_declarator)


State 687

  309 base_specifier: VIRTUAL access_specifier_opt COLONCOLON_opt . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 729


State 688

  307 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 307 (base_specifier_list)


State 689

  310 base_specifier: access_specifier VIRTUAL_opt COLONCOLON_opt . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 141
    CLASS_NAME      shift, and go to state 142
    TEMPLATE_NAME   shift, and go to state 107

    CLASS_NAME     [reduce using rule 401 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 401 (nested_name_specifier_opt)]

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    nested_name_specifier      go to state 216
    class_or_namespace_name    go to state 148
    template_id                go to state 149
    nested_name_specifier_opt  go to state 730


State 690

  308 base_specifier: COLONCOLON_opt nested_name_specifier_opt class_name .

    $default  reduce using rule 308 (base_specifier)


State 691

  372 type_parameter: CLASS identifier_opt '=' type_id .

    $default  reduce using rule 372 (type_parameter)


State 692

  375 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier_opt
  376               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier_opt '=' template_name

    CLASS  shift, and go to state 731


State 693

  374 type_parameter: TYPENAME identifier_opt '=' type_id .

    $default  reduce using rule 374 (type_parameter)


State 694

  220 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 220 (elaborated_type_specifier)


State 695

  392 exception_declaration: ELLIPSIS .

    $default  reduce using rule 392 (exception_declaration)


State 696

  389 exception_declaration: type_specifier_seq . declarator
  390                      | type_specifier_seq . abstract_declarator
  391                      | type_specifier_seq .

    COLONCOLON  shift, and go to state 46
    '('         shift, and go to state 472
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    '('       [reduce using rule 441 (direct_abstract_declarator_opt)]
    ')'       reduce using rule 391 (exception_declaration)
    '['       reduce using rule 441 (direct_abstract_declarator_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    declarator                      go to state 732
    direct_declarator               go to state 88
    ptr_operator                    go to state 474
    declarator_id                   go to state 91
    abstract_declarator             go to state 733
    direct_abstract_declarator      go to state 476
    COLONCOLON_opt                  go to state 123
    direct_abstract_declarator_opt  go to state 478


State 697

  388 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 734


State 698

   54 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 735
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 699

   51 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 736
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 700

   53 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 737
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 701

   52 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 738
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 702

   46 postfix_expression: postfix_expression ARROW TEMPLATE_opt COLONCOLON_opt id_expression .

    $default  reduce using rule 46 (postfix_expression)


State 703

   60 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt '~' . type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 739
    template_id    go to state 149


State 704

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt type_name . COLONCOLON '~' type_name

    COLONCOLON  shift, and go to state 740


State 705

   45 postfix_expression: postfix_expression '.' TEMPLATE_opt COLONCOLON_opt id_expression .

    $default  reduce using rule 45 (postfix_expression)


State 706

  120 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 120 (conditional_expression)


State 707

   85 delete_expression: COLONCOLON_opt DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


State 708

   77 new_placement: '(' expression_list ')' .

    $default  reduce using rule 77 (new_placement)


State 709

   76 new_expression: COLONCOLON_opt NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 741


State 710

   83 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ')'             reduce using rule 403 (expression_list_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    expression_list            go to state 543
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 279
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    expression_list_opt        go to state 742
    COLONCOLON_opt             go to state 282


State 711

  410 new_initializer_opt: new_initializer .

    $default  reduce using rule 410 (new_initializer_opt)


State 712

   75 new_expression: COLONCOLON_opt NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 75 (new_expression)


State 713

   81 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 743
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 714

  412 new_declarator_opt: new_declarator .

    $default  reduce using rule 412 (new_declarator_opt)


State 715

   80 new_declarator: direct_new_declarator .
   82 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 744

    $default  reduce using rule 80 (new_declarator)


State 716

   79 new_declarator: ptr_operator . new_declarator_opt

    COLONCOLON  shift, and go to state 46
    '['         shift, and go to state 713
    '*'         shift, and go to state 76
    '&'         shift, and go to state 77

    NAMESPACE_NAME  reduce using rule 405 (COLONCOLON_opt)
    CLASS_NAME      reduce using rule 405 (COLONCOLON_opt)
    TEMPLATE_NAME   reduce using rule 405 (COLONCOLON_opt)
    '*'             [reduce using rule 411 (new_declarator_opt)]
    '&'             [reduce using rule 411 (new_declarator_opt)]
    $default        reduce using rule 411 (new_declarator_opt)

    new_declarator         go to state 714
    direct_new_declarator  go to state 715
    ptr_operator           go to state 716
    COLONCOLON_opt         go to state 353
    new_declarator_opt     go to state 745


State 717

   78 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 78 (new_type_id)


State 718

  147 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 147 (labeled_statement)


State 719

  159 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 746
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 720

  418 condition_opt: condition .

    $default  reduce using rule 418 (condition_opt)


State 721

  160 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 747


State 722

  153 selection_statement: IF '(' condition ')' . statement
  154                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 748
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 723

  157 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 749


State 724

  155 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 750
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 725

  158 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 751
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 726

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq_opt exception_specification_opt

    CONST     shift, and go to state 51
    VOLATILE  shift, and go to state 73

    $default  reduce using rule 431 (cv_qualifier_seq_opt)

    cv_qualifier_seq      go to state 124
    cv_qualifier          go to state 125
    cv_qualifier_seq_opt  go to state 752


State 727

  265 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 265 (direct_abstract_declarator)


State 728

  394 exception_specification: THROW '(' . type_id_list_opt ')'

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    ')'       reduce using rule 475 (type_id_list_opt)
    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 753
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    type_id_list               go to state 754
    COLONCOLON_opt             go to state 212
    type_id_list_opt           go to state 755


State 729

  309 base_specifier: VIRTUAL access_specifier_opt COLONCOLON_opt nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    class_name     go to state 756
    template_name  go to state 110
    template_id    go to state 149


State 730

  310 base_specifier: access_specifier VIRTUAL_opt COLONCOLON_opt nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 142
    TEMPLATE_NAME  shift, and go to state 107

    class_name     go to state 757
    template_name  go to state 110
    template_id    go to state 149


State 731

  375 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier_opt
  376               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier_opt '=' template_name

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 423 (identifier_opt)

    identifier      go to state 118
    identifier_opt  go to state 758


State 732

  389 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 389 (exception_declaration)


State 733

  390 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 390 (exception_declaration)


State 734

  388 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 291

    compound_statement  go to state 759


State 735

   54 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 760
    ','  shift, and go to state 538


State 736

   51 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 761
    ','  shift, and go to state 538


State 737

   53 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 762
    ','  shift, and go to state 538


State 738

   52 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 763
    ','  shift, and go to state 538


State 739

   60 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt '~' type_name .

    $default  reduce using rule 60 (pseudo_destructor_name)


State 740

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt type_name COLONCOLON . '~' type_name

    '~'  shift, and go to state 764


State 741

   76 new_expression: COLONCOLON_opt NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 710

    $default  reduce using rule 409 (new_initializer_opt)

    new_initializer      go to state 711
    new_initializer_opt  go to state 765


State 742

   83 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 766


State 743

   81 direct_new_declarator: '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 767
    ','  shift, and go to state 538


State 744

   82 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 300
    conditional_expression     go to state 301
    constant_expression        go to state 768
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    COLONCOLON_opt             go to state 282


State 745

   79 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 79 (new_declarator)


State 746

  136 expression: expression . ',' assignment_expression
  159 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 769
    ','  shift, and go to state 538


State 747

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    ')'             reduce using rule 413 (expression_opt)
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 389
    expression                 go to state 457
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282
    expression_opt             go to state 770


State 748

  153 selection_statement: IF '(' condition ')' statement .
  154                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 771

    ELSE      [reduce using rule 153 (selection_statement)]
    $default  reduce using rule 153 (selection_statement)


State 749

  157 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    BOOL              shift, and go to state 48
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250

    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    $default        reduce using rule 405 (COLONCOLON_opt)

    namespace_name             go to state 143
    original_namespace_name    go to state 144
    namespace_alias            go to state 145
    class_name                 go to state 146
    template_name              go to state 110
    identifier                 go to state 111
    literal                    go to state 251
    integer_literal            go to state 252
    character_literal          go to state 253
    floating_literal           go to state 254
    string_literal             go to state 255
    boolean_literal            go to state 256
    primary_expression         go to state 257
    id_expression              go to state 258
    unqualified_id             go to state 153
    qualified_id               go to state 154
    nested_name_specifier      go to state 259
    class_or_namespace_name    go to state 148
    postfix_expression         go to state 260
    unary_expression           go to state 262
    unary_operator             go to state 263
    new_expression             go to state 264
    delete_expression          go to state 265
    cast_expression            go to state 266
    pm_expression              go to state 267
    multiplicative_expression  go to state 268
    additive_expression        go to state 269
    shift_expression           go to state 270
    relational_expression      go to state 271
    equality_expression        go to state 272
    and_expression             go to state 273
    exclusive_or_expression    go to state 274
    inclusive_or_expression    go to state 275
    logical_and_expression     go to state 276
    logical_or_expression      go to state 277
    conditional_expression     go to state 278
    assignment_expression      go to state 772
    simple_type_specifier      go to state 280
    conversion_function_id     go to state 113
    operator_function_id       go to state 114
    template_id                go to state 156
    throw_expression           go to state 281
    COLONCOLON_opt             go to state 282


State 750

  155 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 155 (selection_statement)


State 751

  158 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 158 (iteration_statement)


State 752

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq_opt . exception_specification_opt

    THROW  shift, and go to state 679

    $default  reduce using rule 433 (exception_specification_opt)

    exception_specification      go to state 680
    exception_specification_opt  go to state 773


State 753

  395 type_id_list: type_id .

    $default  reduce using rule 395 (type_id_list)


State 754

  396 type_id_list: type_id_list . ',' type_id
  476 type_id_list_opt: type_id_list .

    ','  shift, and go to state 774

    $default  reduce using rule 476 (type_id_list_opt)


State 755

  394 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 775


State 756

  309 base_specifier: VIRTUAL access_specifier_opt COLONCOLON_opt nested_name_specifier_opt class_name .

    $default  reduce using rule 309 (base_specifier)


State 757

  310 base_specifier: access_specifier VIRTUAL_opt COLONCOLON_opt nested_name_specifier_opt class_name .

    $default  reduce using rule 310 (base_specifier)


State 758

  375 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt .
  376               | TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt . '=' template_name

    '='  shift, and go to state 776

    $default  reduce using rule 375 (type_parameter)


State 759

  388 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 388 (handler)


State 760

   54 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 54 (postfix_expression)


State 761

   51 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


State 762

   53 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


State 763

   52 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


State 764

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt type_name COLONCOLON '~' . type_name

    TYPEDEF_NAME   shift, and go to state 326
    CLASS_NAME     shift, and go to state 142
    ENUM_NAME      shift, and go to state 327
    TEMPLATE_NAME  shift, and go to state 107

    typedef_name   go to state 328
    class_name     go to state 329
    enum_name      go to state 330
    template_name  go to state 110
    type_name      go to state 777
    template_id    go to state 149


State 765

   76 new_expression: COLONCOLON_opt NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 76 (new_expression)


State 766

   83 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 83 (new_initializer)


State 767

   81 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 81 (direct_new_declarator)


State 768

   82 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 778


State 769

  159 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 779


State 770

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 780


State 771

  154 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 781
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 772

  157 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 157 (condition)


State 773

  264 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq_opt exception_specification_opt .

    $default  reduce using rule 264 (direct_abstract_declarator)


State 774

  396 type_id_list: type_id_list ',' . type_id

    COLONCOLON  shift, and go to state 46
    BOOL        shift, and go to state 48
    CHAR        shift, and go to state 49
    CLASS       shift, and go to state 50
    CONST       shift, and go to state 51
    DOUBLE      shift, and go to state 52
    ENUM        shift, and go to state 53
    FLOAT       shift, and go to state 56
    INT         shift, and go to state 59
    LONG        shift, and go to state 60
    SHORT       shift, and go to state 63
    SIGNED      shift, and go to state 64
    STRUCT      shift, and go to state 66
    TYPENAME    shift, and go to state 68
    UNION       shift, and go to state 69
    UNSIGNED    shift, and go to state 70
    VOID        shift, and go to state 72
    VOLATILE    shift, and go to state 73
    WCHAR_T     shift, and go to state 74

    $default  reduce using rule 405 (COLONCOLON_opt)

    type_specifier             go to state 208
    simple_type_specifier      go to state 82
    elaborated_type_specifier  go to state 83
    enum_specifier             go to state 84
    cv_qualifier               go to state 90
    type_id                    go to state 782
    type_specifier_seq         go to state 360
    class_specifier            go to state 92
    class_head                 go to state 93
    class_key                  go to state 94
    COLONCOLON_opt             go to state 212


State 775

  394 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 394 (exception_specification)


State 776

  376 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt '=' . template_name

    TEMPLATE_NAME  shift, and go to state 107

    template_name  go to state 783


State 777

   59 pseudo_destructor_name: COLONCOLON_opt nested_name_specifier_opt type_name COLONCOLON '~' type_name .

    $default  reduce using rule 59 (pseudo_destructor_name)


State 778

   82 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 82 (direct_new_declarator)


State 779

  159 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 159 (iteration_statement)


State 780

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 33
    INTEGER           shift, and go to state 228
    FLOATING          shift, and go to state 229
    CHARACTER         shift, and go to state 230
    STRING            shift, and go to state 31
    NAMESPACE_NAME    shift, and go to state 141
    CLASS_NAME        shift, and go to state 142
    TEMPLATE_NAME     shift, and go to state 107
    COLONCOLON        shift, and go to state 231
    PLUSPLUS          shift, and go to state 232
    MINUSMINUS        shift, and go to state 233
    ASM               shift, and go to state 1
    BOOL              shift, and go to state 48
    BREAK             shift, and go to state 443
    CASE              shift, and go to state 444
    CHAR              shift, and go to state 49
    CONST_CAST        shift, and go to state 234
    CONTINUE          shift, and go to state 445
    DEFAULT           shift, and go to state 446
    DO                shift, and go to state 447
    DOUBLE            shift, and go to state 52
    DYNAMIC_CAST      shift, and go to state 235
    FALSE             shift, and go to state 236
    FLOAT             shift, and go to state 56
    FOR               shift, and go to state 448
    GOTO              shift, and go to state 449
    IF                shift, and go to state 450
    INT               shift, and go to state 59
    LONG              shift, and go to state 60
    NAMESPACE         shift, and go to state 451
    OPERATOR          shift, and go to state 108
    REINTERPRET_CAST  shift, and go to state 237
    RETURN            shift, and go to state 452
    SHORT             shift, and go to state 63
    SIGNED            shift, and go to state 64
    SIZEOF            shift, and go to state 238
    STATIC_CAST       shift, and go to state 239
    SWITCH            shift, and go to state 453
    THIS              shift, and go to state 240
    THROW             shift, and go to state 241
    TRUE              shift, and go to state 242
    TRY               shift, and go to state 454
    TYPEID            shift, and go to state 243
    UNSIGNED          shift, and go to state 70
    USING             shift, and go to state 6
    VOID              shift, and go to state 72
    WCHAR_T           shift, and go to state 74
    WHILE             shift, and go to state 455
    '('               shift, and go to state 244
    '~'               shift, and go to state 245
    '*'               shift, and go to state 246
    '&'               shift, and go to state 247
    '+'               shift, and go to state 248
    '-'               shift, and go to state 249
    '!'               shift, and go to state 250
    '{'               shift, and go to state 291

    IDENTIFIER      [reduce using rule 419 (decl_specifier_seq_opt)]
    TYPEDEF_NAME    reduce using rule 405 (COLONCOLON_opt)
    TYPEDEF_NAME    [reduce using rule 419 (decl_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 405 (COLONCOLON_opt)]
    NAMESPACE_NAME  [reduce using rule 419 (decl_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 405 (COLONCOLON_opt)]
    CLASS_NAME      [reduce using rule 419 (decl_specifier_seq_opt)]
    ENUM_NAME       reduce using rule 405 (COLONCOLON_opt)
    ENUM_NAME       [reduce using rule 419 (decl_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 405 (COLONCOLON_opt)]
    TEMPLATE_NAME   [reduce using rule 419 (decl_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 419 (decl_specifier_seq_opt)]
    BOOL            [reduce using rule 419 (decl_specifier_seq_opt)]
    CHAR            [reduce using rule 419 (decl_specifier_seq_opt)]
    DELETE          reduce using rule 405 (COLONCOLON_opt)
    DOUBLE          [reduce using rule 419 (decl_specifier_seq_opt)]
    FLOAT           [reduce using rule 419 (decl_specifier_seq_opt)]
    INT             [reduce using rule 419 (decl_specifier_seq_opt)]
    LONG            [reduce using rule 419 (decl_specifier_seq_opt)]
    NEW             reduce using rule 405 (COLONCOLON_opt)
    OPERATOR        [reduce using rule 419 (decl_specifier_seq_opt)]
    SHORT           [reduce using rule 419 (decl_specifier_seq_opt)]
    SIGNED          [reduce using rule 419 (decl_specifier_seq_opt)]
    UNSIGNED        [reduce using rule 419 (decl_specifier_seq_opt)]
    VOID            [reduce using rule 419 (decl_specifier_seq_opt)]
    WCHAR_T         [reduce using rule 419 (decl_specifier_seq_opt)]
    '('             [reduce using rule 419 (decl_specifier_seq_opt)]
    '~'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '*'             [reduce using rule 419 (decl_specifier_seq_opt)]
    '&'             [reduce using rule 419 (decl_specifier_seq_opt)]
    ';'             reduce using rule 413 (expression_opt)
    ';'             [reduce using rule 419 (decl_specifier_seq_opt)]
    $default        reduce using rule 419 (decl_specifier_seq_opt)

    namespace_name              go to state 143
    original_namespace_name     go to state 144
    namespace_alias             go to state 145
    class_name                  go to state 146
    template_name               go to state 110
    identifier                  go to state 456
    literal                     go to state 251
    integer_literal             go to state 252
    character_literal           go to state 253
    floating_literal            go to state 254
    string_literal              go to state 255
    boolean_literal             go to state 256
    primary_expression          go to state 257
    id_expression               go to state 258
    unqualified_id              go to state 153
    qualified_id                go to state 154
    nested_name_specifier       go to state 259
    class_or_namespace_name     go to state 148
    postfix_expression          go to state 260
    unary_expression            go to state 262
    unary_operator              go to state 263
    new_expression              go to state 264
    delete_expression           go to state 265
    cast_expression             go to state 266
    pm_expression               go to state 267
    multiplicative_expression   go to state 268
    additive_expression         go to state 269
    shift_expression            go to state 270
    relational_expression       go to state 271
    equality_expression         go to state 272
    and_expression              go to state 273
    exclusive_or_expression     go to state 274
    inclusive_or_expression     go to state 275
    logical_and_expression      go to state 276
    logical_or_expression       go to state 277
    conditional_expression      go to state 278
    assignment_expression       go to state 389
    expression                  go to state 457
    statement                   go to state 784
    labeled_statement           go to state 459
    expression_statement        go to state 460
    compound_statement          go to state 461
    selection_statement         go to state 463
    iteration_statement         go to state 464
    jump_statement              go to state 465
    declaration_statement       go to state 466
    block_declaration           go to state 467
    simple_declaration          go to state 11
    decl_specifier_seq          go to state 12
    simple_type_specifier       go to state 280
    namespace_alias_definition  go to state 18
    using_declaration           go to state 19
    using_directive             go to state 20
    asm_definition              go to state 21
    conversion_function_id      go to state 113
    operator_function_id        go to state 114
    template_id                 go to state 156
    try_block                   go to state 468
    throw_expression            go to state 281
    COLONCOLON_opt              go to state 282
    expression_opt              go to state 469
    decl_specifier_seq_opt      go to state 471


State 781

  154 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 154 (selection_statement)


State 782

  396 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 396 (type_id_list)


State 783

  376 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier_opt '=' template_name .

    $default  reduce using rule 376 (type_parameter)


State 784

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 160 (iteration_statement)
