\relax 
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Programming}{3}}
\@writefile{lot}{\contentsline {table}{\numberline {1.1}{\ignorespaces The command \texttt  {x = y + 7} as it is written in different programming languages.}}{3}}
\newlabel{tab:instructions}{{1.1}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Using This Text}{4}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Fortune Teller}{5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{ch:fortune}{{2}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}The Program}{5}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.1}The code for the Fortune Teller. When entering this program, do not enter the line numbers. Keywords (also known as reserved words) are in bold, comments are in italics, and variables are colored maroon.}{6}}
\newlabel{listing:FortuneTeller}{{2.1}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Comments}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Variables}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Variables can be thought of as boxes with a name that hold a value. Different types of variables correspond to different-sized boxes. }}{8}}
\newlabel{fig:variables1}{{2.1}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Input and Output}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}Expressions}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.5}Conditionals: \texttt  {if}}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Analysis of the Code}{11}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-5, 7, and More: Comments}{11}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5-6: \#includes}{11}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 7-8 and 38: Main}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 10-12: Variables}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 14-17, 20, 22, 25, 28, 31, and 34-36: Input and Output (I/O)}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Line 19: Calculations}{13}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 21, 24, 27, and 30: Conditionals}{14}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 34-36: A Graceful Exit}{15}}
\@writefile{toc}{\contentsline {subsubsection}{Line 38: Return}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Exercises: Modifying the Program}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: Modifying the Output }{16}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: Printing an Introduction}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: A Final Message}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: More Fortunes}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: Error Checking}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Problems}{17}}
\@writefile{toc}{\contentsline {chapter}{Interlude 1: Debugging}{18}}
\@writefile{toc}{\contentsline {subsubsection}{Compiler Errors}{18}}
\@writefile{toc}{\contentsline {subsubsection}{Run-time Errors}{18}}
\@writefile{toc}{\contentsline {subsubsection}{Logical Errors}{19}}
\@writefile{toc}{\contentsline {subsubsection}{Fixing Errors -- Debugging}{19}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}NIM}{21}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{ch:NIM}{{3}{21}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Introduction}{21}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.1}The code for NIM. When entering this program, do not enter the line numbers. Keywords are in bold, comments are in italics, and variables are colored maroon.}{22}}
\newlabel{listing:NIM1}{{3.1}{22}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}The Program}{22}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Conditionals: \texttt  {if-else}}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Loops}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}Random Numbers}{24}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Analysis of the Code}{24}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1, 2, 5, 7, and others: Comments}{24}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 2-4: \#includes}{25}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5, 6, and 36: Main}{25}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8-10: Variables}{25}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 12 and 29: The Game Loop}{25}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 13, 20, and 25: Conditionals}{26}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 16 and 19 and Lines 21 and 23: More Loops}{26}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 14, 15, 17, 18, 24, 27, and 31-34: Output and Input}{27}}
\@writefile{toc}{\contentsline {subsubsection}{Line 22: Selecting the computer's move}{27}}
\@writefile{toc}{\contentsline {subsubsection}{Line 26: The Move}{28}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 32-34: A Graceful Exit}{28}}
\@writefile{toc}{\contentsline {subsubsection}{Line 35: Return}{28}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Exercises: Modifying the Program}{28}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: Modifying the Output }{28}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: Printing the Rules}{29}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: Objects Removed by the Player}{29}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: Truly Random Moves}{29}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: Number of Objects}{30}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 6: Smarter Play -- Artificial Intelligence}{30}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 7: Really Intelligent Play}{31}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 8: Multiple Games and Keeping Score}{31}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}Problems}{32}}
\@writefile{toc}{\contentsline {chapter}{Interlude 2: Testing}{35}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Calculator}{37}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Introduction}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}The Program}{37}}
\newlabel{listing:calc}{{4.1}{38}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4.1}The code for the \texttt  {main()} function and the prototypes for the other functions in the calculator program.}{38}}
\newlabel{listing:calcFunctions}{{4.2}{39}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4.2}The code for the functions that are used in the calculator program. The lines are numbered followed by a \emph  {`b'} for easy reference in the text.}{39}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Functions}{39}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces When a function is called, the value of the arguments are copied into the function's parameters. When a function returns, the return value (if any) should be copied into a variable in the calling function.}}{40}}
\newlabel{fig:arguments}{{4.1}{40}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces The parts of a function definition. A function can have zero or more parameters, which may have different types. A function has a return type (or \emph  {void} if the function doesn't return a value). A function may have several return statements in its code, but the first one reached returns a value and ends the function.}}{41}}
\newlabel{fig:functions1}{{4.2}{41}}
\@writefile{toc}{\contentsline {subsubsection}{Pass-by-Value}{41}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Functions with the Same Name}{41}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.3}Real Number Types}{41}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.4}Conversions and Casts}{42}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Analysis of the Code}{43}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-3: Comment Block}{43}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 4-5: \#includes}{43}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 7-9: Function Prototypes}{43}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1b-22b: Function Definitions}{43}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 11-12, 41: Main}{44}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 13-14: Variables}{45}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 15-39: The Calculator Loop}{45}}
\@writefile{toc}{\contentsline {subsubsection}{Line 16: Print Menu}{45}}
\@writefile{toc}{\contentsline {subsubsection}{Line 18: A Valid Choice}{45}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 19-35: Switch Statement}{45}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 20-21: Case 0}{46}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 22-26: Case 1}{46}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 27-31: Case 2}{46}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 32-34: Default}{46}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 36-38: Print the Answer}{47}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}Scope}{47}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces Illustration of scope. The vertical lines mark the scope of each of the variables \texttt  {X}, \texttt  {Y}, and \texttt  {Z} (including second variables \texttt  {X} and \texttt  {Y} in the function). Scope extends from the where the variable was declared to the closing bracket \} marking the end of that block of code. Note that scope includes any nested blocks, for example, \texttt  {Y}'s scope includes the nested set of brackets \{\} where \texttt  {Z} is declared, and \texttt  {X}'s scope includes the scope of both \texttt  {Y} and \texttt  {Z}. Any reference to a variable outside of its scope will result in a compiler error or warning. The variables \texttt  {X} and \texttt  {Y} in the function \texttt  {func()} have their own scope and are separate from the variables of the same name in \texttt  {main()}. }}{48}}
\newlabel{fig:scope1}{{4.3}{48}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Exercises: Modifying the Program}{48}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: Modifying the Output}{48}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: The Final Answer}{48}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: Printing Answers and Problems}{49}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: More Functionality -- Subtraction}{50}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: More Functionality -- Minimum}{50}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 6: Absolute Value}{51}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 7: Cartesian Distances}{51}}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}Problems}{51}}
\@writefile{toc}{\contentsline {chapter}{Interlude 3: Structures}{53}}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Electronic Pet}{55}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{ch:pet}{{5}{55}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Introduction}{55}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}The Program}{55}}
\newlabel{listing:electronic pet}{{5.1}{56}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5.1}The \texttt  {main()} and the declaration of the \texttt  {pet} class.}{56}}
\newlabel{listing:pet class}{{5.2}{57}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5.2}Definition of the functions of the \texttt  {pet} class.}{57}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.1}Classes}{58}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.2}Strings}{58}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}Analysis of the Code}{59}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5-16: The Pet Class Declaration}{59}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces An illustration of the \texttt  {pet} class. Classes contain data members that hold information about objects of the class type (e.g., hold information about pet objects). Classes also have member functions that act on the data.}}{60}}
\newlabel{fig:class1}{{5.1}{60}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.1}Lines 1b-49b: Defining the \texttt  {Pet} Class Member Functions}{60}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1b-7b: The Constructor}{60}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8b-26b: The \texttt  {play()} Function}{60}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 27b-31b: \texttt  {The feed()} Function}{61}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 32b-37b: The \texttt  {print()} Function}{61}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 38b-49b: The \texttt  {check\_health()} Function}{61}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.2}Lines 1-3 and 17-50: The Main Program}{61}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-3: \#includes}{61}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 19-20: Declaring variables (and objects)}{61}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.2}{\ignorespaces The dot notation is used to call a member function of a class.}}{62}}
\newlabel{fig:memberfunctioncall}{{5.2}{62}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 22-36: The Main Loop}{62}}
\@writefile{toc}{\contentsline {subsubsection}{Line 23: Printing the pet}{62}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 24-34: The Menu}{62}}
\@writefile{toc}{\contentsline {subsubsection}{Line 35: Health Check}{63}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 37-40: Graceful Exit}{63}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3.3}Public and Private}{63}}
\@writefile{toc}{\contentsline {section}{\numberline {5.4}Exercises: Modifying the Program}{64}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: The Main Menu}{64}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: More Interactive Pets}{64}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: More Interesting Output}{64}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: Randomized Output}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: More Play Options}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 6: More Feed Options}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 7: Longer Pet Names}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 8: Give Pets a Species}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 9: Other Pet Qualities}{65}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 10: More Pets}{66}}
\@writefile{toc}{\contentsline {section}{\numberline {5.5}Files}{66}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 11: Saving a Pet}{67}}
\@writefile{toc}{\contentsline {section}{\numberline {5.6}Problems}{68}}
\@writefile{toc}{\contentsline {chapter}{Interlude 4: Software Design and Engineering}{70}}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Generic Board Game}{72}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{ch:boardgame}{{6}{72}}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Introduction}{72}}
\@writefile{toc}{\contentsline {section}{\numberline {6.2}The Program}{72}}
\newlabel{listing:GenericGameA}{{6.1}{73}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6.1}Initial code for the Generic Board Game program, including the include statements, declaration of the \texttt  {square class}, prototypes for the other functions defined as part of the program, and a global constant called \texttt  {board\_length}.}{73}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.1}Pass-by-reference}{73}}
\newlabel{listing:GenericGameB}{{6.2}{74}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6.2}The \texttt  {main()} function for the Generic Board Game.}{74}}
\newlabel{listing:GenericGameC}{{6.3}{75}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6.3}The function definitions for the Generic Board Game program. Some are general functions, while others are member functions of the \texttt  {square} class.}{75}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces When a function parameter is \emph  {pass-by-value}, denoted by the \& symbol in the function's parameter declaration, the variable's ``box'' is ``shared'' between the functions. Any changes to the parameter's value in the function ``persist'' in the calling function. Returned values are still copied as normal. Contrast this to the illustration of pass-by-value in Figure\nobreakspace  {}4.1\hbox {} in Chapter 4.}}{76}}
\newlabel{fig:passbyrefarguments}{{6.1}{76}}
\newlabel{listing:game.txt}{{6.4}{76}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6.4}The data for the file ``game.txt.''}{76}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.2}Arrays}{76}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.3}Array Bounds}{77}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.2}{\ignorespaces An array of 10 integers. The array's name is \texttt  {numbers}. The first four values in the array are 5, 6, 99, and 2, the last value is 8. Note that the array elements are numbered 0 to 9, \emph  {not} 1 to 10. The variable \texttt  {numbers} (no brackets) keeps track of the beginning of the array.}}{78}}
\newlabel{fig:array1}{{6.2}{78}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.4}Passing Arrays to Functions}{78}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.3}{\ignorespaces Arrays are always passed to functions via pass-by-reference, so the array is ``shared'' between the two functions. The array is named \texttt  {numbers[]} in \texttt  {main()} and named \texttt  {z[]} in \texttt  {foo()}. Any changes made in the called function ``persist'' in the calling function. So, in this example \texttt  {z[2]} becomes $88$ in \texttt  {main()} after the function is called.}}{79}}
\newlabel{fig:arrayarguments}{{6.3}{79}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.5}Globals}{79}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.6}Characters}{80}}
\@writefile{toc}{\contentsline {section}{\numberline {6.3}Analysis of the Code}{80}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-6: \#includes}{80}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8-18: The \texttt  {Square} Class Declaration}{80}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 20-22: Function Prototypes}{81}}
\@writefile{toc}{\contentsline {subsubsection}{Line 24: Global Constant}{81}}
\@writefile{toc}{\contentsline {subsubsection}{Line 4b: Array Declaration}{81}}
\@writefile{toc}{\contentsline {subsubsection}{Line 5b: Random Seed}{81}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 6b and 1c-13c: The read\_board() Function}{81}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 7b, 8b, 26b, 27b, and 14c-25c: The print\_board() Function}{82}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 9b-29b: The Game Loop}{83}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 10b-13b: Player Move}{83}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 14b-25b: The Move}{84}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 26b-27b: Reprinting the Board}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Line 28b: Next Player's Move}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 30b-33b: The End of the Game}{85}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.1}Lines 33c-49c: The \texttt  {Square} Class Definitions}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 33c-37c: The \texttt  {square()} Function (the constructor)}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 38c-41c: The \texttt  {action()} Function}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 42c-44c: The \texttt  {print()} Function}{85}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 45c-49c: The \texttt  {set()} Function}{86}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.2}The Data File}{86}}
\@writefile{toc}{\contentsline {section}{\numberline {6.4}Exercises: Modifying the Program}{86}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: Customize the Game}{86}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: Add an Introduction}{87}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: Improve the Output}{87}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: Players' ``Pieces''}{87}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: Other changes}{87}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 6: Multi-player}{87}}
\@writefile{toc}{\contentsline {section}{\numberline {6.5}Problems}{87}}
\@writefile{toc}{\contentsline {chapter}{Interlude 5: C++ Compared to C}{89}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Structures}{89}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}C Input and Output}{90}}
\@writefile{lot}{\contentsline {table}{\numberline {5.1}{\ignorespaces Common C Input and Output Functions. These are also available in C++.}}{90}}
\newlabel{tab:operators2}{{5.1}{90}}
\@writefile{lot}{\contentsline {table}{\numberline {5.2}{\ignorespaces Common C Format Specifiers.}}{91}}
\newlabel{tab:formatspecifiers}{{5.2}{91}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}C-style Strings}{91}}
\@writefile{lot}{\contentsline {table}{\numberline {5.3}{\ignorespaces A few of the more useful functions for manipulating C-style strings. These are found in the \texttt  {cstring} library. The asterisks (*) in the function definitions refer to pointers, which are covered in the next chapter. Generally, any place in the code where \texttt  {char *} appears a C-style array of characters is appropriate. }}{92}}
\newlabel{tab:cstrings}{{5.3}{92}}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}Robot World}{93}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}Introduction}{93}}
\@writefile{toc}{\contentsline {section}{\numberline {7.2}The Program}{93}}
\newlabel{listing:robotWorldMain}{{7.1}{94}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7.1}The main program for the Robot World program. The code to include the libraries containing the \texttt  {robot} class and the \texttt  {world} class is already part of the main program (lines 5 and 6).}{94}}
\newlabel{listing:roboth}{{7.2}{94}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7.2}The declaration of the \texttt  {robot} class. It has four private data members, three private member functions, and five public member functions.}{94}}
\newlabel{listing:robotcpp}{{7.3}{95}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7.3}The definitions of the member functions of the \texttt  {robot} class.}{95}}
\newlabel{listing:worldh}{{7.4}{96}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7.4}The declaration of the \texttt  {world} class.}{96}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.1}Two-Dimensional Arrays}{96}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.2}Pointers}{96}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.1}{\ignorespaces {\bf  Left:} Illustration of a pointer. The variable \texttt  {ptr} is a pointer that ``points'' to (or refers to) the variable \texttt  {X}. {\bf  Right:} Pointers actually work by storing the ``target'' variable's address; for example, \texttt  {ptr} stores \texttt  {X}'s address: 7a08 (addresses are typically written in hexadecimal). This allows \texttt  {ptr} to access the value of \texttt  {X} using the dereference operator: \texttt  {*} or to pass the address of \texttt  {X} to a function. The ``0x'' before the addresses is used to indicate that the values are written in hexadecimal. Note that many variable types, including pointers and integers, actually use more than one location (or byte) in memory to store the data.}}{97}}
\newlabel{fig:pointers1}{{7.1}{97}}
\newlabel{listing:worldcpp}{{7.5}{98}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7.5}Definitions of the member functions of the \texttt  {world} class.}{98}}
\@writefile{lot}{\contentsline {table}{\numberline {7.1}{\ignorespaces Pointer Operators.}}{99}}
\newlabel{tab:pointers}{{7.1}{99}}
\@writefile{toc}{\contentsline {subsubsection}{The NULL Pointer}{100}}
\@writefile{toc}{\contentsline {subsubsection}{Arrays and Pointers}{100}}
\@writefile{toc}{\contentsline {subsubsection}{Using Pointers}{100}}
\@writefile{toc}{\contentsline {section}{\numberline {7.3}Analysis of the Code}{101}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1a-16a: The \texttt  {Robot} Class Declaration}{101}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 7a, 8a, and 1b-8b: turnLeft() and turnRight()}{102}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 9b and 9b-19b: forward()}{102}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 11a and 20b-25b: The Constructor}{103}}
\@writefile{toc}{\contentsline {subsubsection}{Line 12a: The \texttt  {refresh()} Function}{103}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 12a-13a, 26b-28b, and 29b-31b: The \texttt  {draw()} and \texttt  {print()} Functions}{103}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 12a and Lines 32b-50b: The \texttt  {move()} Function}{103}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1c-11c: The World Class Declaration}{104}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1c and 2c: The Global Constants}{104}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5c and 6c: The Data Members}{104}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8c and 1d-10d: The \texttt  {set\_up()} Function}{105}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 9c and 11d-28d: The \texttt  {draw()} Function}{105}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 10c and 29d-50d: The \texttt  {update()} Function}{106}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.1}Figure\nobreakspace  {}7.1\hbox {}: The \texttt  {main()} Function}{106}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-6: \#includes}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8-10: Initializing the Program}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 11-15: The Main Program Loop}{107}}
\@writefile{toc}{\contentsline {section}{\numberline {7.4}Exercises: Modifying the Program}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: World Size}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: More Robots}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: Robots with Different Appearances}{107}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: Different Behaviors}{108}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: Different Terrain}{108}}
\@writefile{toc}{\contentsline {section}{\numberline {7.5}Problems}{108}}
\@writefile{toc}{\contentsline {chapter}{Interlude 6: Command-Line Arguments}{110}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces Illustration of command-line arguments in C++. This shows the data structures created when the command-line command: ``\texttt  {a.out these are args}" is run. The program name is \texttt  {a.out}, the arguments are \texttt  {these}, \texttt  {are}, and \texttt  {args}. The parameter \texttt  {argc} gets the value 4 because there are four arguments total, including the program name (\texttt  {a.out} in this example), which is also treated as an argument. Note that \texttt  {argv} is an array of pointers to C-style strings and each argument is stored as a C-style array of characters (an array of individual characters ending with the \texttt  {null} character \textbackslash 0; see Interlude 5).}}{111}}
\newlabel{fig:args}{{6.1}{111}}
\@writefile{toc}{\contentsline {chapter}{\numberline {8}Linked Robots}{112}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {8.1}Introduction}{112}}
\@writefile{toc}{\contentsline {section}{\numberline {8.2}The Program}{112}}
\newlabel{listing:robotlinkedlist}{{8.1}{113}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8.1}Main program for the Linked Robots program. The include statements (lines 4, 5, and 6) automatically include the code from the other listings.}{113}}
\newlabel{listing:llh}{{8.2}{113}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8.2}The declaration of the \texttt  {linkedlist} class, which holds the ``head'' of the linked list.}{113}}
\newlabel{listing:llcpp}{{8.3}{114}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8.3}The definition of the \texttt  {linkedlist} class functions. }{114}}
\@writefile{lof}{\contentsline {figure}{\numberline {8.1}{\ignorespaces An illustration of a linked list. The linked list consists of a series of \texttt  {node} objects linked by pointers. Each \texttt  {node} object points to the next one in the list and to a \texttt  {robot} object. The head of the linked list is maintained by the \texttt  {linked list} object, which also keeps track of the number of items in the list. The last \texttt  {node} object points to \texttt  {NULL}, thereby identifying the end of the linked list. Other than the initial \texttt  {linked list} object, the objects in a linked list are usually nameless objects created with the \texttt  {new} operator. Objects can be added to or removed from the list simply by rearranging the \texttt  {next} pointers.}}{115}}
\newlabel{fig:llillustration}{{8.1}{115}}
\newlabel{listing:nodeh}{{8.4}{115}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8.4}The declaration of the \texttt  {node} class. }{115}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2.1}Linked Lists}{115}}
\newlabel{listing:nodecpp}{{8.5}{116}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8.5}The definitions of the \texttt  {node} class functions. }{116}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2.2}Recursion}{117}}
\@writefile{toc}{\contentsline {section}{\numberline {8.3}Analysis of the Code}{117}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1-6: \#includes}{118}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 7, 22, 23: The \texttt  {main()} Function}{118}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 8-10: Variable Declarations}{118}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 11-14: Creating the Initial Robots}{118}}
\@writefile{toc}{\contentsline {subsubsection}{Line 15: Print the Robots}{118}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 16-21: Manipulating the Robots}{119}}
\@writefile{toc}{\contentsline {subsubsection}{Listings\nobreakspace  {}8.2\hbox {} and\nobreakspace  {}8.3\hbox {} : The \texttt  {linkedlist} Class}{119}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1a-11a: The \texttt  {linkedlist} Class Declaration}{119}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1b-4b: The Constructor}{119}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5b-12b: The \texttt  {insert()} Function}{119}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 29b-38b: The \texttt  {print()} and \texttt  {turnLeft()} Functions}{120}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 13b-28b: The \texttt  {remove()} Function}{120}}
\@writefile{toc}{\contentsline {subsubsection}{Listings\nobreakspace  {}8.4\hbox {} and\nobreakspace  {}8.5\hbox {}: The \texttt  {node} Class}{120}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1c-15c: The \texttt  {node} Class Declaration}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 1d-4d: The Constructor}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 5d-10d: The \texttt  {print()} Function}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 11d-17d: The \texttt  {turnLeft()} Function}{121}}
\@writefile{toc}{\contentsline {subsubsection}{Lines 18d-33d: The \texttt  {remove()} Function}{122}}
\@writefile{toc}{\contentsline {section}{\numberline {8.4}Exercises: Modifying the Program}{122}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 1: Changing the Print Order}{122}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 2: More Actions}{122}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 3: Adding Elements at the Other End of the List}{123}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 4: Individual Actions}{123}}
\@writefile{toc}{\contentsline {subsubsection}{Exercise 5: Returning a Robot}{123}}
\@writefile{toc}{\contentsline {section}{\numberline {8.5}Problems}{123}}
\@writefile{toc}{\contentsline {chapter}{\numberline {A}Reference}{125}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {A.1}Variables and Types}{125}}
\newlabel{appendix:types}{{A.1}{125}}
\@writefile{lot}{\contentsline {table}{\numberline {A.1}{\ignorespaces Common Variable Types in C++. Note that the actual number of bytes used to store a variable, and hence the allowed range of the variable, may vary from system to system.}}{126}}
\newlabel{tab:types}{{A.1}{126}}
\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.1}Naming Variables}{127}}
\@writefile{toc}{\contentsline {section}{\numberline {A.2}Conditionals: \texttt  {if, if-else, switch}}{127}}
\newlabel{appendix:conditionals}{{A.2}{127}}
\@writefile{toc}{\contentsline {section}{\numberline {A.3}Loops: \texttt  {for}, \texttt  {while}, \texttt  {do-while}}{128}}
\newlabel{appendix:loops}{{A.3}{128}}
\@writefile{toc}{\contentsline {section}{\numberline {A.4}Mathematical Operators}{129}}
\newlabel{appendix:operators}{{A.4}{129}}
\@writefile{lot}{\contentsline {table}{\numberline {A.2}{\ignorespaces Common C++ Mathematical Operators.}}{130}}
\newlabel{tab:operators}{{A.2}{130}}
\@writefile{lot}{\contentsline {table}{\numberline {A.3}{\ignorespaces Common C++ Comparisons and Boolean Operators.}}{131}}
\newlabel{tab:BooleanOperators}{{A.3}{131}}
\@writefile{toc}{\contentsline {section}{\numberline {A.5}Comparison and Boolean Operators}{131}}
\newlabel{appendix:Boolean}{{A.5}{131}}
\@writefile{toc}{\contentsline {section}{\numberline {A.6}The \texttt  {String} Class}{132}}
\newlabel{appendix:string}{{A.6}{132}}
\@writefile{toc}{\contentsline {section}{\numberline {A.7}\texttt  {iostream} Operations}{132}}
\newlabel{appendix:iostream}{{A.7}{132}}
\@writefile{toc}{\contentsline {section}{\numberline {A.8}Libraries}{132}}
\newlabel{appendix:libraries}{{A.8}{132}}
\@writefile{lot}{\contentsline {table}{\numberline {A.4}{\ignorespaces Useful Functions Related to the \texttt  {string} Class.}}{133}}
\newlabel{tab:strings}{{A.4}{133}}
\@writefile{lot}{\contentsline {table}{\numberline {A.5}{\ignorespaces Useful Functions of the \texttt  {iostream} and \texttt  {fstream} classes. Most, but not all, of these functions can be applied to \texttt  {cin} or an input file or \texttt  {cout} or an output file. Many of them have variants to control the number of characters read, format of output, delimiting characters, etc.}}{134}}
\newlabel{tab:iostream}{{A.5}{134}}
\@writefile{lot}{\contentsline {table}{\numberline {A.6}{\ignorespaces Some Useful Libraries.}}{135}}
\newlabel{tab:libraries}{{A.6}{135}}
\@writefile{toc}{\contentsline {chapter}{\numberline {B}Binary and Hexadecimal Numbers}{136}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{appendix:binary}{{B}{136}}
\newlabel{appendix:hexadecimal}{{B}{136}}
\@writefile{lot}{\contentsline {table}{\numberline {B.1}{\ignorespaces The decimal system. The places (columns) are multiples of 10. In a base 10 system 10 digits: 0 through 9 are required, numbers larger than 9 are denoted using the other places (columns), so no additional digits are necessary.}}{137}}
\newlabel{tab:decimal}{{B.1}{137}}
\@writefile{lot}{\contentsline {table}{\numberline {B.2}{\ignorespaces The binary system. The places (columns) are multiples of 2. Only the digits 0 and 1 are used.}}{137}}
\newlabel{tab:binary}{{B.2}{137}}
\bibstyle{plain}
\@writefile{lot}{\contentsline {table}{\numberline {B.3}{\ignorespaces The hexadecimal system. The places (columns) are multiples of 16. Sixteen digits are needed: 0 through 15 (decimal). The characters \emph  {a} through \emph  {f} are used for the numbers 10 through 15.}}{138}}
\newlabel{tab:hexadecimal}{{B.3}{138}}
\@writefile{lot}{\contentsline {table}{\numberline {B.4}{\ignorespaces Conversion between binary and hexadecimal is relatively easy because four binary digits correspond to one hexadecimal digit (second row). This doesn't work for converting to decimal values (last row).}}{138}}
\newlabel{tab:hexbin}{{B.4}{138}}
\@writefile{toc}{\contentsline {chapter}{Index}{139}}
