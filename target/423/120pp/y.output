State 0 conflicts: 1 shift/reduce
State 4 conflicts: 2 shift/reduce
State 7 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 102 conflicts: 4 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 115 conflicts: 2 shift/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 157 conflicts: 4 shift/reduce
State 158 conflicts: 2 shift/reduce
State 176 conflicts: 3 shift/reduce
State 209 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 237 conflicts: 2 shift/reduce
State 240 conflicts: 1 shift/reduce
State 257 conflicts: 2 shift/reduce
State 260 conflicts: 1 shift/reduce
State 261 conflicts: 1 shift/reduce
State 264 conflicts: 1 shift/reduce
State 267 conflicts: 1 shift/reduce
State 268 conflicts: 1 shift/reduce
State 277 conflicts: 2 shift/reduce
State 303 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 353 conflicts: 1 shift/reduce
State 354 conflicts: 1 shift/reduce
State 358 conflicts: 1 shift/reduce
State 375 conflicts: 1 shift/reduce
State 377 conflicts: 1 shift/reduce
State 406 conflicts: 1 shift/reduce
State 418 conflicts: 1 shift/reduce
State 484 conflicts: 1 shift/reduce
State 485 conflicts: 1 shift/reduce
State 551 conflicts: 2 shift/reduce
State 556 conflicts: 2 shift/reduce
State 558 conflicts: 1 shift/reduce
State 608 conflicts: 2 shift/reduce
State 638 conflicts: 1 shift/reduce
State 639 conflicts: 1 shift/reduce
State 688 conflicts: 2 shift/reduce
State 689 conflicts: 2 shift/reduce
State 693 conflicts: 2 shift/reduce
State 694 conflicts: 2 shift/reduce
State 699 conflicts: 1 shift/reduce
State 733 conflicts: 2 shift/reduce
State 777 conflicts: 2 shift/reduce
State 782 conflicts: 2 shift/reduce
State 811 conflicts: 1 shift/reduce
State 849 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON
   35                      | namespace_name COLONCOLON

   36 postfix_expression: primary_expression
   37                   | postfix_expression '[' expression ']'
   38                   | postfix_expression '(' expression_list_opt ')'
   39                   | DOUBLE '(' expression_list_opt ')'
   40                   | INT '(' expression_list_opt ')'
   41                   | CHAR '(' expression_list_opt ')'
   42                   | BOOL '(' expression_list_opt ')'
   43                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression '.' TEMPLATE id_expression
   45                   | postfix_expression '.' COLONCOLON id_expression
   46                   | postfix_expression '.' id_expression
   47                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   48                   | postfix_expression ARROW TEMPLATE id_expression
   49                   | postfix_expression ARROW COLONCOLON id_expression
   50                   | postfix_expression ARROW id_expression
   51                   | postfix_expression PLUSPLUS
   52                   | postfix_expression MINUSMINUS
   53                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   54                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   55                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   56                   | CONST_CAST '<' type_id '>' '(' expression ')'
   57                   | TYPEID '(' expression ')'
   58                   | TYPEID '(' type_id ')'

   59 expression_list: assignment_expression
   60                | expression_list ',' assignment_expression

   61 unary_expression: postfix_expression
   62                 | PLUSPLUS cast_expression
   63                 | MINUSMINUS cast_expression
   64                 | '*' cast_expression
   65                 | '&' cast_expression
   66                 | unary_operator cast_expression
   67                 | SIZEOF unary_expression
   68                 | SIZEOF '(' type_id ')'
   69                 | new_expression
   70                 | delete_expression

   71 unary_operator: '+'
   72               | '-'
   73               | '!'
   74               | '~'

   75 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   76               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   77               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   78               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   79 new_placement: '(' expression_list ')'

   80 new_type_id: type_specifier_seq new_declarator_opt

   81 new_declarator: ptr_operator new_declarator_opt
   82               | direct_new_declarator

   83 direct_new_declarator: '[' expression ']'
   84                      | direct_new_declarator '[' constant_expression ']'

   85 new_initializer: '(' expression_list_opt ')'

   86 delete_expression: DELETE cast_expression
   87                  | COLONCOLON DELETE cast_expression
   88                  | DELETE '[' ']' cast_expression
   89                  | COLONCOLON DELETE '[' ']' cast_expression

   90 cast_expression: unary_expression
   91                | '(' type_id ')' cast_expression

   92 pm_expression: cast_expression
   93              | pm_expression DOTSTAR cast_expression
   94              | pm_expression ARROWSTAR cast_expression

   95 multiplicative_expression: pm_expression
   96                          | multiplicative_expression '*' pm_expression
   97                          | multiplicative_expression '/' pm_expression
   98                          | multiplicative_expression '%' pm_expression

   99 additive_expression: multiplicative_expression
  100                    | additive_expression '+' multiplicative_expression
  101                    | additive_expression '-' multiplicative_expression

  102 shift_expression: additive_expression
  103                 | shift_expression SL additive_expression
  104                 | shift_expression SR additive_expression

  105 relational_expression: shift_expression
  106                      | relational_expression '<' shift_expression
  107                      | relational_expression '>' shift_expression
  108                      | relational_expression LTEQ shift_expression
  109                      | relational_expression GTEQ shift_expression

  110 equality_expression: relational_expression
  111                    | equality_expression EQ relational_expression
  112                    | equality_expression NOTEQ relational_expression

  113 and_expression: equality_expression
  114               | and_expression '&' equality_expression

  115 exclusive_or_expression: and_expression
  116                        | exclusive_or_expression '^' and_expression

  117 inclusive_or_expression: exclusive_or_expression
  118                        | inclusive_or_expression '|' exclusive_or_expression

  119 logical_and_expression: inclusive_or_expression
  120                       | logical_and_expression ANDAND inclusive_or_expression

  121 logical_or_expression: logical_and_expression
  122                      | logical_or_expression OROR logical_and_expression

  123 conditional_expression: logical_or_expression
  124                       | logical_or_expression '?' expression ':' assignment_expression

  125 assignment_expression: conditional_expression
  126                      | logical_or_expression assignment_operator assignment_expression
  127                      | throw_expression

  128 assignment_operator: '='
  129                    | MULEQ
  130                    | DIVEQ
  131                    | MODEQ
  132                    | ADDEQ
  133                    | SUBEQ
  134                    | SREQ
  135                    | SLEQ
  136                    | ANDEQ
  137                    | XOREQ
  138                    | OREQ

  139 expression: assignment_expression
  140           | expression ',' assignment_expression

  141 constant_expression: conditional_expression

  142 statement: labeled_statement
  143          | expression_statement
  144          | compound_statement
  145          | selection_statement
  146          | iteration_statement
  147          | jump_statement
  148          | declaration_statement
  149          | try_block

  150 labeled_statement: identifier ':' statement
  151                  | CASE constant_expression ':' statement
  152                  | DEFAULT ':' statement

  153 expression_statement: expression_opt ';'

  154 compound_statement: '{' statement_seq_opt '}'

  155 statement_seq: statement
  156              | statement_seq statement

  157 selection_statement: IF '(' condition ')' statement
  158                    | IF '(' condition ')' statement ELSE statement
  159                    | SWITCH '(' condition ')' statement

  160 condition: expression
  161          | type_specifier_seq declarator '=' assignment_expression

  162 iteration_statement: WHILE '(' condition ')' statement
  163                    | DO statement WHILE '(' expression ')' ';'
  164                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  165 for_init_statement: expression_statement
  166                   | simple_declaration

  167 jump_statement: BREAK ';'
  168               | CONTINUE ';'
  169               | RETURN expression_opt ';'
  170               | GOTO identifier ';'

  171 declaration_statement: block_declaration

  172 declaration_seq: declaration
  173                | declaration_seq declaration

  174 declaration: block_declaration
  175            | function_definition
  176            | template_declaration
  177            | explicit_instantiation
  178            | explicit_specialization
  179            | linkage_specification
  180            | namespace_definition

  181 block_declaration: simple_declaration
  182                  | asm_definition
  183                  | namespace_alias_definition
  184                  | using_declaration
  185                  | using_directive

  186 simple_declaration: decl_specifier_seq init_declarator_list ';'
  187                   | decl_specifier_seq ';'

  188 decl_specifier: storage_class_specifier
  189               | type_specifier
  190               | function_specifier
  191               | FRIEND
  192               | TYPEDEF

  193 decl_specifier_seq: decl_specifier
  194                   | decl_specifier_seq decl_specifier

  195 storage_class_specifier: AUTO
  196                        | REGISTER
  197                        | STATIC
  198                        | EXTERN
  199                        | MUTABLE

  200 function_specifier: INLINE
  201                   | VIRTUAL
  202                   | EXPLICIT

  203 type_specifier: simple_type_specifier
  204               | class_specifier
  205               | enum_specifier
  206               | elaborated_type_specifier
  207               | cv_qualifier

  208 simple_type_specifier: type_name
  209                      | nested_name_specifier type_name
  210                      | COLONCOLON nested_name_specifier_opt type_name
  211                      | CHAR
  212                      | WCHAR_T
  213                      | BOOL
  214                      | SHORT
  215                      | INT
  216                      | LONG
  217                      | SIGNED
  218                      | UNSIGNED
  219                      | FLOAT
  220                      | DOUBLE
  221                      | VOID

  222 type_name: class_name
  223          | enum_name
  224          | typedef_name

  225 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  226                          | class_key COLONCOLON identifier
  227                          | ENUM COLONCOLON nested_name_specifier identifier
  228                          | ENUM COLONCOLON identifier
  229                          | ENUM nested_name_specifier identifier
  230                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  231                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  232 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  233 enumerator_list: enumerator_definition
  234                | enumerator_list ',' enumerator_definition

  235 enumerator_definition: enumerator
  236                      | enumerator '=' constant_expression

  237 enumerator: identifier

  238 namespace_definition: named_namespace_definition
  239                     | unnamed_namespace_definition

  240 named_namespace_definition: original_namespace_definition
  241                           | extension_namespace_definition

  242 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  243 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  244 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  245 namespace_body: declaration_seq_opt

  246 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  247 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  248                              | COLONCOLON namespace_name
  249                              | nested_name_specifier namespace_name
  250                              | namespace_name

  251 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  253                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  254                  | USING nested_name_specifier unqualified_id ';'
  255                  | USING COLONCOLON unqualified_id ';'

  256 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE COLONCOLON namespace_name ';'
  258                | USING NAMESPACE nested_name_specifier namespace_name ';'
  259                | USING NAMESPACE namespace_name ';'

  260 asm_definition: ASM '(' string_literal ')' ';'

  261 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  262                      | EXTERN string_literal declaration

  263 init_declarator_list: init_declarator
  264                     | init_declarator_list ',' init_declarator

  265 init_declarator: declarator initializer_opt

  266 declarator: direct_declarator
  267           | ptr_operator declarator

  268 direct_declarator: declarator_id
  269                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  271                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  272                  | direct_declarator '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  275                  | CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'
  276                  | direct_declarator '[' constant_expression_opt ']'
  277                  | '(' declarator ')'

  278 ptr_operator: '*'
  279             | '*' cv_qualifier_seq
  280             | '&'
  281             | nested_name_specifier '*'
  282             | nested_name_specifier '*' cv_qualifier_seq
  283             | COLONCOLON nested_name_specifier '*'
  284             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  285 cv_qualifier_seq: cv_qualifier
  286                 | cv_qualifier cv_qualifier_seq

  287 cv_qualifier: CONST
  288             | VOLATILE

  289 declarator_id: id_expression
  290              | COLONCOLON id_expression
  291              | COLONCOLON nested_name_specifier type_name
  292              | COLONCOLON type_name

  293 type_id: type_specifier_seq abstract_declarator_opt

  294 type_specifier_seq: type_specifier type_specifier_seq_opt

  295 abstract_declarator: ptr_operator abstract_declarator_opt
  296                    | direct_abstract_declarator

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  301                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  302                           | '(' abstract_declarator ')'

  303 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  304                             | parameter_declaration_list
  305                             | ELLIPSIS
  306                             | %empty
  307                             | parameter_declaration_list ',' ELLIPSIS

  308 parameter_declaration_list: parameter_declaration
  309                           | parameter_declaration_list ',' parameter_declaration

  310 parameter_declaration: decl_specifier_seq declarator
  311                      | decl_specifier_seq declarator '=' assignment_expression
  312                      | decl_specifier_seq abstract_declarator_opt
  313                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  314 function_definition: declarator ctor_initializer_opt function_body
  315                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  316                    | declarator function_try_block
  317                    | decl_specifier_seq declarator function_try_block

  318 function_body: compound_statement

  319 initializer: '=' initializer_clause
  320            | '(' expression_list ')'

  321 initializer_clause: assignment_expression
  322                   | '{' initializer_list COMMA_opt '}'
  323                   | '{' '}'

  324 initializer_list: initializer_clause
  325                 | initializer_list ',' initializer_clause

  326 class_specifier: class_head '{' member_specification_opt '}'

  327 class_head: class_key identifier
  328           | class_key identifier base_clause
  329           | class_key nested_name_specifier identifier
  330           | class_key nested_name_specifier identifier base_clause

  331 class_key: CLASS
  332          | STRUCT
  333          | UNION

  334 member_specification: member_declaration member_specification_opt
  335                     | access_specifier ':' member_specification_opt

  336 member_declaration: decl_specifier_seq member_declarator_list ';'
  337                   | decl_specifier_seq ';'
  338                   | member_declarator_list ';'
  339                   | ';'
  340                   | function_definition SEMICOLON_opt
  341                   | qualified_id ';'
  342                   | using_declaration
  343                   | template_declaration

  344 member_declarator_list: member_declarator
  345                       | member_declarator_list ',' member_declarator

  346 member_declarator: declarator
  347                  | declarator pure_specifier
  348                  | declarator constant_initializer
  349                  | identifier ':' constant_expression

  350 pure_specifier: '=' '0'

  351 constant_initializer: '=' constant_expression

  352 base_clause: ':' base_specifier_list

  353 base_specifier_list: base_specifier
  354                    | base_specifier_list ',' base_specifier

  355 base_specifier: COLONCOLON nested_name_specifier class_name
  356               | COLONCOLON class_name
  357               | nested_name_specifier class_name
  358               | class_name
  359               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  361               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  362               | VIRTUAL nested_name_specifier_opt class_name
  363               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  365               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  366               | access_specifier nested_name_specifier_opt class_name

  367 access_specifier: PRIVATE
  368                 | PROTECTED
  369                 | PUBLIC

  370 conversion_function_id: OPERATOR conversion_type_id

  371 conversion_type_id: type_specifier_seq conversion_declarator_opt

  372 conversion_declarator: ptr_operator conversion_declarator_opt

  373 ctor_initializer: ':' mem_initializer_list

  374 mem_initializer_list: mem_initializer
  375                     | mem_initializer ',' mem_initializer_list

  376 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  377 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  378                   | COLONCOLON class_name
  379                   | nested_name_specifier class_name
  380                   | class_name
  381                   | identifier

  382 operator_function_id: OPERATOR operator

  383 operator: NEW
  384         | DELETE
  385         | NEW '[' ']'
  386         | DELETE '[' ']'
  387         | '+'
  388         | '_'
  389         | '*'
  390         | '/'
  391         | '%'
  392         | '^'
  393         | '&'
  394         | '|'
  395         | '~'
  396         | '!'
  397         | '='
  398         | '<'
  399         | '>'
  400         | ADDEQ
  401         | SUBEQ
  402         | MULEQ
  403         | DIVEQ
  404         | MODEQ
  405         | XOREQ
  406         | ANDEQ
  407         | OREQ
  408         | SL
  409         | SR
  410         | SREQ
  411         | SLEQ
  412         | EQ
  413         | NOTEQ
  414         | LTEQ
  415         | GTEQ
  416         | ANDAND
  417         | OROR
  418         | PLUSPLUS
  419         | MINUSMINUS
  420         | ','
  421         | ARROWSTAR
  422         | ARROW
  423         | '(' ')'
  424         | '[' ']'

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  426 template_parameter_list: template_parameter
  427                        | template_parameter_list ',' template_parameter

  428 template_parameter: type_parameter
  429                   | parameter_declaration

  430 type_parameter: CLASS identifier
  431               | CLASS identifier '=' type_id
  432               | TYPENAME identifier
  433               | TYPENAME identifier '=' type_id
  434               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  435               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  436 template_id: template_name '<' template_argument_list '>'

  437 template_argument_list: template_argument
  438                       | template_argument_list ',' template_argument

  439 template_argument: assignment_expression
  440                  | type_id
  441                  | template_name

  442 explicit_instantiation: TEMPLATE declaration

  443 explicit_specialization: TEMPLATE '<' '>' declaration

  444 try_block: TRY compound_statement handler_seq

  445 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  446 handler_seq: handler handler_seq_opt

  447 handler: CATCH '(' exception_declaration ')' compound_statement

  448 exception_declaration: type_specifier_seq declarator
  449                      | type_specifier_seq abstract_declarator
  450                      | type_specifier_seq
  451                      | ELLIPSIS

  452 throw_expression: THROW assignment_expression_opt

  453 exception_specification: THROW '(' type_id_list_opt ')'

  454 type_id_list: type_id
  455             | type_id_list ',' type_id

  456 declaration_seq_opt: %empty
  457                    | declaration_seq

  458 nested_name_specifier_opt: %empty
  459                          | nested_name_specifier

  460 expression_list_opt: %empty
  461                    | expression_list

  462 COLONCOLON_opt: %empty
  463               | COLONCOLON

  464 new_placement_opt: %empty
  465                  | new_placement

  466 new_initializer_opt: %empty
  467                    | new_initializer

  468 new_declarator_opt: %empty
  469                   | new_declarator

  470 expression_opt: %empty
  471               | expression

  472 statement_seq_opt: %empty
  473                  | statement_seq

  474 condition_opt: %empty
  475              | condition

  476 enumerator_list_opt: %empty
  477                    | enumerator_list

  478 initializer_opt: %empty
  479                | initializer

  480 constant_expression_opt: %empty
  481                        | constant_expression

  482 abstract_declarator_opt: %empty
  483                        | abstract_declarator

  484 type_specifier_seq_opt: %empty
  485                       | type_specifier_seq

  486 direct_abstract_declarator_opt: %empty
  487                               | direct_abstract_declarator

  488 ctor_initializer_opt: %empty
  489                     | ctor_initializer

  490 COMMA_opt: %empty
  491          | ','

  492 member_specification_opt: %empty
  493                         | member_specification

  494 SEMICOLON_opt: %empty
  495              | ';'

  496 conversion_declarator_opt: %empty
  497                          | conversion_declarator

  498 EXPORT_opt: %empty
  499           | EXPORT

  500 handler_seq_opt: %empty
  501                | handler_seq

  502 assignment_expression_opt: %empty
  503                          | assignment_expression

  504 type_id_list_opt: %empty
  505                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73 396
'%' (37) 98 391
'&' (38) 65 114 280 393
'(' (40) 23 38 39 40 41 42 53 54 55 56 57 58 68 77 78 79 85 91 157
    158 159 162 163 164 260 269 270 271 272 273 274 275 277 297 298
    299 300 302 320 376 423 447 453
')' (41) 23 38 39 40 41 42 53 54 55 56 57 58 68 77 78 79 85 91 157
    158 159 162 163 164 260 269 270 271 272 273 274 275 277 297 298
    299 300 302 320 376 423 447 453
'*' (42) 64 96 278 279 281 282 283 284 389
'+' (43) 71 100 387
',' (44) 60 140 234 264 307 309 325 345 354 375 420 427 438 455 491
'-' (45) 72 101
'.' (46) 43 44 45 46
'/' (47) 97 390
'0' (48) 350
':' (58) 124 150 151 152 335 349 352 373
';' (59) 153 163 164 167 168 169 170 186 187 246 251 252 253 254 255
    256 257 258 259 260 336 337 338 339 341 495
'<' (60) 53 54 55 56 106 231 398 425 434 435 436 443
'=' (61) 128 161 236 246 311 313 319 350 351 397 431 433 435
'>' (62) 53 54 55 56 107 231 399 425 434 435 436 443
'?' (63) 124
'[' (91) 37 83 84 88 89 276 301 385 386 424
']' (93) 37 83 84 88 89 276 301 385 386 424
'^' (94) 116 392
'_' (95) 388
'{' (123) 154 232 242 243 244 261 322 323 326
'|' (124) 118 394
'}' (125) 154 232 242 243 244 261 322 323 326
'~' (126) 30 74 395
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
NAMESPACE_NAME (264) 3
CLASS_NAME (265) 4 273 274 275
ENUM_NAME (266) 6
TEMPLATE_NAME (267) 7
ELLIPSIS (268) 303 305 307 451
COLONCOLON (269) 33 34 35 43 45 47 49 76 78 87 89 210 225 226 227 228
    247 248 251 253 255 256 257 274 275 283 284 290 291 292 355 356
    359 361 363 365 377 378 463
DOTSTAR (270) 93
ADDEQ (271) 132 400
SUBEQ (272) 133 401
MULEQ (273) 129 402
DIVEQ (274) 130 403
MODEQ (275) 131 404
XOREQ (276) 137 405
ANDEQ (277) 136 406
OREQ (278) 138 407
SL (279) 103 408
SR (280) 104 409
SREQ (281) 134 410
SLEQ (282) 135 411
EQ (283) 111 412
NOTEQ (284) 112 413
LTEQ (285) 108 414
GTEQ (286) 109 415
ANDAND (287) 120 416
OROR (288) 122 417
PLUSPLUS (289) 51 62 418
MINUSMINUS (290) 52 63 419
ARROWSTAR (291) 94 421
ARROW (292) 47 48 49 50 422
ASM (293) 260
AUTO (294) 195
BOOL (295) 42 213
BREAK (296) 167
CASE (297) 151
CATCH (298) 447
CHAR (299) 41 211
CLASS (300) 331 430 431 434 435
CONST (301) 287
CONST_CAST (302) 56
CONTINUE (303) 168
DEFAULT (304) 152
DELETE (305) 86 87 88 89 384 386
DO (306) 163
DOUBLE (307) 39 220
DYNAMIC_CAST (308) 53
ELSE (309) 158
ENUM (310) 227 228 229 232
EXPLICIT (311) 202
EXPORT (312) 499
EXTERN (313) 198 261 262
FALSE (314) 19
FLOAT (315) 219
FOR (316) 164
FRIEND (317) 191
GOTO (318) 170
IF (319) 157 158
INLINE (320) 200
INT (321) 40 215
LONG (322) 216
MUTABLE (323) 199
NAMESPACE (324) 242 243 244 246 256 257 258 259
NEW (325) 75 76 77 78 383 385
OPERATOR (326) 370 382
PRIVATE (327) 367
PROTECTED (328) 368
PUBLIC (329) 369
REGISTER (330) 196
REINTERPRET_CAST (331) 55
RETURN (332) 169
SHORT (333) 214
SIGNED (334) 217
SIZEOF (335) 67 68
STATIC (336) 197
STATIC_CAST (337) 54
STRUCT (338) 332
SWITCH (339) 159
TEMPLATE (340) 32 43 44 47 48 425 434 435 442 443
THIS (341) 22
THROW (342) 452 453
TRUE (343) 18
TRY (344) 444 445
TYPEDEF (345) 192
TYPEID (346) 57 58
TYPENAME (347) 230 231 251 252 432 433
UNION (348) 333
UNSIGNED (349) 218
USING (350) 251 252 253 254 255 256 257 258 259
VIRTUAL (351) 201 359 360 361 362 363 364
VOID (352) 221
VOLATILE (353) 288
WCHAR_T (354) 212
WHILE (355) 162 163


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 224
namespace_name (129)
    on left: 2, on right: 33 35 247 248 249 250 256 257 258 259
original_namespace_name (130)
    on left: 3, on right: 2 243
class_name (131)
    on left: 4 5, on right: 30 33 34 222 355 356 357 358 359 360 361
    362 363 364 365 366 377 378 379 380
enum_name (132)
    on left: 6, on right: 223
template_name (133)
    on left: 7, on right: 435 436 441
identifier (134)
    on left: 8, on right: 27 150 170 225 226 227 228 229 230 231 232
    237 242 246 327 328 329 330 349 381 430 431 432 433 434 435
literal (135)
    on left: 9 10 11 12 13, on right: 21
integer_literal (136)
    on left: 14, on right: 9
character_literal (137)
    on left: 15, on right: 10
floating_literal (138)
    on left: 16, on right: 11
string_literal (139)
    on left: 17, on right: 12 260 261 262
boolean_literal (140)
    on left: 18 19, on right: 13
translation_unit (141)
    on left: 20, on right: 0
primary_expression (142)
    on left: 21 22 23 24, on right: 36
id_expression (143)
    on left: 25 26, on right: 24 43 44 45 46 47 48 49 50 289 290
unqualified_id (144)
    on left: 27 28 29 30, on right: 25 31 32 251 252 253 254 255
qualified_id (145)
    on left: 31 32, on right: 26 341
nested_name_specifier (146)
    on left: 33 34 35, on right: 31 32 33 209 225 227 229 230 231 247
    249 251 252 253 254 256 258 281 282 283 284 291 329 330 355 357
    377 379 459
postfix_expression (147)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58, on right: 37 38 43 44 45 46 47 48 49 50 51 52 61
expression_list (148)
    on left: 59 60, on right: 60 79 320 461
unary_expression (149)
    on left: 61 62 63 64 65 66 67 68 69 70, on right: 67 90
unary_operator (150)
    on left: 71 72 73 74, on right: 66
new_expression (151)
    on left: 75 76 77 78, on right: 69
new_placement (152)
    on left: 79, on right: 465
new_type_id (153)
    on left: 80, on right: 75 76
new_declarator (154)
    on left: 81 82, on right: 469
direct_new_declarator (155)
    on left: 83 84, on right: 82 84
new_initializer (156)
    on left: 85, on right: 467
delete_expression (157)
    on left: 86 87 88 89, on right: 70
cast_expression (158)
    on left: 90 91, on right: 62 63 64 65 66 86 87 88 89 91 92 93 94
pm_expression (159)
    on left: 92 93 94, on right: 93 94 95 96 97 98
multiplicative_expression (160)
    on left: 95 96 97 98, on right: 96 97 98 99 100 101
additive_expression (161)
    on left: 99 100 101, on right: 100 101 102 103 104
shift_expression (162)
    on left: 102 103 104, on right: 103 104 105 106 107 108 109
relational_expression (163)
    on left: 105 106 107 108 109, on right: 106 107 108 109 110 111
    112
equality_expression (164)
    on left: 110 111 112, on right: 111 112 113 114
and_expression (165)
    on left: 113 114, on right: 114 115 116
exclusive_or_expression (166)
    on left: 115 116, on right: 116 117 118
inclusive_or_expression (167)
    on left: 117 118, on right: 118 119 120
logical_and_expression (168)
    on left: 119 120, on right: 120 121 122
logical_or_expression (169)
    on left: 121 122, on right: 122 123 124 126
conditional_expression (170)
    on left: 123 124, on right: 125 141
assignment_expression (171)
    on left: 125 126 127, on right: 59 60 124 126 139 140 161 311 313
    321 439 503
assignment_operator (172)
    on left: 128 129 130 131 132 133 134 135 136 137 138, on right:
    126
expression (173)
    on left: 139 140, on right: 23 37 53 54 55 56 57 83 124 140 160
    163 471
constant_expression (174)
    on left: 141, on right: 84 151 236 349 351 481
statement (175)
    on left: 142 143 144 145 146 147 148 149, on right: 150 151 152
    155 156 157 158 159 162 163 164
labeled_statement (176)
    on left: 150 151 152, on right: 142
expression_statement (177)
    on left: 153, on right: 143 165
compound_statement (178)
    on left: 154, on right: 144 318 444 447
statement_seq (179)
    on left: 155 156, on right: 156 473
selection_statement (180)
    on left: 157 158 159, on right: 145
condition (181)
    on left: 160 161, on right: 157 158 159 162 475
iteration_statement (182)
    on left: 162 163 164, on right: 146
for_init_statement (183)
    on left: 165 166, on right: 164
jump_statement (184)
    on left: 167 168 169 170, on right: 147
declaration_statement (185)
    on left: 171, on right: 148
declaration_seq (186)
    on left: 172 173, on right: 173 457
declaration (187)
    on left: 174 175 176 177 178 179 180, on right: 172 173 262 425
    442 443
block_declaration (188)
    on left: 181 182 183 184 185, on right: 171 174
simple_declaration (189)
    on left: 186 187, on right: 166 181
decl_specifier (190)
    on left: 188 189 190 191 192, on right: 193 194
decl_specifier_seq (191)
    on left: 193 194, on right: 186 187 194 310 311 312 313 315 317
    336 337
storage_class_specifier (192)
    on left: 195 196 197 198 199, on right: 188
function_specifier (193)
    on left: 200 201 202, on right: 190
type_specifier (194)
    on left: 203 204 205 206 207, on right: 189 294
simple_type_specifier (195)
    on left: 208 209 210 211 212 213 214 215 216 217 218 219 220 221,
    on right: 203
type_name (196)
    on left: 222 223 224, on right: 208 209 210 291 292
elaborated_type_specifier (197)
    on left: 225 226 227 228 229 230 231, on right: 206
enum_specifier (198)
    on left: 232, on right: 205
enumerator_list (199)
    on left: 233 234, on right: 234 477
enumerator_definition (200)
    on left: 235 236, on right: 233 234
enumerator (201)
    on left: 237, on right: 235 236
namespace_definition (202)
    on left: 238 239, on right: 180
named_namespace_definition (203)
    on left: 240 241, on right: 238
original_namespace_definition (204)
    on left: 242, on right: 240
extension_namespace_definition (205)
    on left: 243, on right: 241
unnamed_namespace_definition (206)
    on left: 244, on right: 239
namespace_body (207)
    on left: 245, on right: 242 243 244
namespace_alias_definition (208)
    on left: 246, on right: 183
qualified_namespace_specifier (209)
    on left: 247 248 249 250, on right: 246
using_declaration (210)
    on left: 251 252 253 254 255, on right: 184 342
using_directive (211)
    on left: 256 257 258 259, on right: 185
asm_definition (212)
    on left: 260, on right: 182
linkage_specification (213)
    on left: 261 262, on right: 179
init_declarator_list (214)
    on left: 263 264, on right: 186 264
init_declarator (215)
    on left: 265, on right: 263 264
declarator (216)
    on left: 266 267, on right: 161 265 267 277 310 311 314 315 316
    317 346 347 348 448
direct_declarator (217)
    on left: 268 269 270 271 272 273 274 275 276 277, on right: 266
    269 270 271 272 276
ptr_operator (218)
    on left: 278 279 280 281 282 283 284, on right: 81 267 295 372
cv_qualifier_seq (219)
    on left: 285 286, on right: 269 270 279 282 284 286 297 298
cv_qualifier (220)
    on left: 287 288, on right: 207 285 286
declarator_id (221)
    on left: 289 290 291 292, on right: 268 274
type_id (222)
    on left: 293, on right: 53 54 55 56 58 68 77 78 91 431 433 440
    454 455
type_specifier_seq (223)
    on left: 294, on right: 80 161 293 371 448 449 450 485
abstract_declarator (224)
    on left: 295 296, on right: 302 449 483
direct_abstract_declarator (225)
    on left: 297 298 299 300 301 302, on right: 296 487
parameter_declaration_clause (226)
    on left: 303 304 305 306 307, on right: 269 270 271 272 273 274
    275 297 298 299 300
parameter_declaration_list (227)
    on left: 308 309, on right: 303 304 307 309
parameter_declaration (228)
    on left: 310 311 312 313, on right: 308 309 429
function_definition (229)
    on left: 314 315 316 317, on right: 175 340
function_body (230)
    on left: 318, on right: 314 315 445
initializer (231)
    on left: 319 320, on right: 479
initializer_clause (232)
    on left: 321 322 323, on right: 319 324 325
initializer_list (233)
    on left: 324 325, on right: 322 325
class_specifier (234)
    on left: 326, on right: 204
class_head (235)
    on left: 327 328 329 330, on right: 326
class_key (236)
    on left: 331 332 333, on right: 225 226 327 328 329 330
member_specification (237)
    on left: 334 335, on right: 493
member_declaration (238)
    on left: 336 337 338 339 340 341 342 343, on right: 334
member_declarator_list (239)
    on left: 344 345, on right: 336 338 345
member_declarator (240)
    on left: 346 347 348 349, on right: 344 345
pure_specifier (241)
    on left: 350, on right: 347
constant_initializer (242)
    on left: 351, on right: 348
base_clause (243)
    on left: 352, on right: 328 330
base_specifier_list (244)
    on left: 353 354, on right: 352 354
base_specifier (245)
    on left: 355 356 357 358 359 360 361 362 363 364 365 366, on right:
    353 354
access_specifier (246)
    on left: 367 368 369, on right: 335 359 360 363 364 365 366
conversion_function_id (247)
    on left: 370, on right: 29
conversion_type_id (248)
    on left: 371, on right: 370
conversion_declarator (249)
    on left: 372, on right: 497
ctor_initializer (250)
    on left: 373, on right: 489
mem_initializer_list (251)
    on left: 374 375, on right: 373 375
mem_initializer (252)
    on left: 376, on right: 374 375
mem_initializer_id (253)
    on left: 377 378 379 380 381, on right: 376
operator_function_id (254)
    on left: 382, on right: 28
operator (255)
    on left: 383 384 385 386 387 388 389 390 391 392 393 394 395 396
    397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412
    413 414 415 416 417 418 419 420 421 422 423 424, on right: 382
template_declaration (256)
    on left: 425, on right: 176 343
template_parameter_list (257)
    on left: 426 427, on right: 425 427 434 435
template_parameter (258)
    on left: 428 429, on right: 426 427
type_parameter (259)
    on left: 430 431 432 433 434 435, on right: 428
template_id (260)
    on left: 436, on right: 5
template_argument_list (261)
    on left: 437 438, on right: 231 436 438
template_argument (262)
    on left: 439 440 441, on right: 437 438
explicit_instantiation (263)
    on left: 442, on right: 177
explicit_specialization (264)
    on left: 443, on right: 178
try_block (265)
    on left: 444, on right: 149
function_try_block (266)
    on left: 445, on right: 316 317
handler_seq (267)
    on left: 446, on right: 444 445 501
handler (268)
    on left: 447, on right: 446
exception_declaration (269)
    on left: 448 449 450 451, on right: 447
throw_expression (270)
    on left: 452, on right: 127
exception_specification (271)
    on left: 453, on right: 269 271 297 299
type_id_list (272)
    on left: 454 455, on right: 455 505
declaration_seq_opt (273)
    on left: 456 457, on right: 20 245 261
nested_name_specifier_opt (274)
    on left: 458 459, on right: 210 359 360 361 362 363 364 365 366
expression_list_opt (275)
    on left: 460 461, on right: 38 39 40 41 42 85 376
COLONCOLON_opt (276)
    on left: 462 463, on right: 230 231
new_placement_opt (277)
    on left: 464 465, on right: 75 76 77 78
new_initializer_opt (278)
    on left: 466 467, on right: 75 76 77 78
new_declarator_opt (279)
    on left: 468 469, on right: 80 81
expression_opt (280)
    on left: 470 471, on right: 153 164 169
statement_seq_opt (281)
    on left: 472 473, on right: 154
condition_opt (282)
    on left: 474 475, on right: 164
enumerator_list_opt (283)
    on left: 476 477, on right: 232
initializer_opt (284)
    on left: 478 479, on right: 265
constant_expression_opt (285)
    on left: 480 481, on right: 276 301
abstract_declarator_opt (286)
    on left: 482 483, on right: 293 295 312 313
type_specifier_seq_opt (287)
    on left: 484 485, on right: 294
direct_abstract_declarator_opt (288)
    on left: 486 487, on right: 297 298 299 300 301
ctor_initializer_opt (289)
    on left: 488 489, on right: 314 315 445
COMMA_opt (290)
    on left: 490 491, on right: 322
member_specification_opt (291)
    on left: 492 493, on right: 326 334 335
SEMICOLON_opt (292)
    on left: 494 495, on right: 340
conversion_declarator_opt (293)
    on left: 496 497, on right: 371 372
EXPORT_opt (294)
    on left: 498 499, on right: 425
handler_seq_opt (295)
    on left: 500 501, on right: 446
assignment_expression_opt (296)
    on left: 502 503, on right: 452
type_id_list_opt (297)
    on left: 504 505, on right: 453


State 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    translation_unit                go to state 53
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 96
    EXPORT_opt                      go to state 97


State 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


State 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


State 3

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


State 4

    4 class_name: CLASS_NAME .
  273 direct_declarator: CLASS_NAME . '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME . COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  275                  | CLASS_NAME . COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'

    COLONCOLON  shift, and go to state 98
    '('         shift, and go to state 99

    COLONCOLON  [reduce using rule 4 (class_name)]
    '('         [reduce using rule 4 (class_name)]
    $default    reduce using rule 4 (class_name)


State 5

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


State 6

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


State 7

  210 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  283 ptr_operator: COLONCOLON . nested_name_specifier '*'
  284             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    TYPEDEF_NAME   [reduce using rule 458 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 101
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 102
    type_name                  go to state 103
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 8

  260 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 105


State 9

  195 storage_class_specifier: AUTO .

    $default  reduce using rule 195 (storage_class_specifier)


State 10

  213 simple_type_specifier: BOOL .

    $default  reduce using rule 213 (simple_type_specifier)


State 11

  211 simple_type_specifier: CHAR .

    $default  reduce using rule 211 (simple_type_specifier)


State 12

  331 class_key: CLASS .

    $default  reduce using rule 331 (class_key)


State 13

  287 cv_qualifier: CONST .

    $default  reduce using rule 287 (cv_qualifier)


State 14

  220 simple_type_specifier: DOUBLE .

    $default  reduce using rule 220 (simple_type_specifier)


State 15

  227 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  228                          | ENUM . COLONCOLON identifier
  229                          | ENUM . nested_name_specifier identifier
  232 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 106

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 108
    nested_name_specifier    go to state 109
    template_id              go to state 93


State 16

  202 function_specifier: EXPLICIT .

    $default  reduce using rule 202 (function_specifier)


State 17

  499 EXPORT_opt: EXPORT .

    $default  reduce using rule 499 (EXPORT_opt)


State 18

  198 storage_class_specifier: EXTERN .
  261 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  262                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 110

    $default  reduce using rule 198 (storage_class_specifier)

    string_literal  go to state 111


State 19

  219 simple_type_specifier: FLOAT .

    $default  reduce using rule 219 (simple_type_specifier)


State 20

  191 decl_specifier: FRIEND .

    $default  reduce using rule 191 (decl_specifier)


State 21

  200 function_specifier: INLINE .

    $default  reduce using rule 200 (function_specifier)


State 22

  215 simple_type_specifier: INT .

    $default  reduce using rule 215 (simple_type_specifier)


State 23

  216 simple_type_specifier: LONG .

    $default  reduce using rule 216 (simple_type_specifier)


State 24

  199 storage_class_specifier: MUTABLE .

    $default  reduce using rule 199 (storage_class_specifier)


State 25

  242 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  243 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  244 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  246 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    '{'             shift, and go to state 112

    original_namespace_name  go to state 113
    identifier               go to state 114


State 26

  370 conversion_function_id: OPERATOR . conversion_type_id
  382 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    ADDEQ           shift, and go to state 116
    SUBEQ           shift, and go to state 117
    MULEQ           shift, and go to state 118
    DIVEQ           shift, and go to state 119
    MODEQ           shift, and go to state 120
    XOREQ           shift, and go to state 121
    ANDEQ           shift, and go to state 122
    OREQ            shift, and go to state 123
    SL              shift, and go to state 124
    SR              shift, and go to state 125
    SREQ            shift, and go to state 126
    SLEQ            shift, and go to state 127
    EQ              shift, and go to state 128
    NOTEQ           shift, and go to state 129
    LTEQ            shift, and go to state 130
    GTEQ            shift, and go to state 131
    ANDAND          shift, and go to state 132
    OROR            shift, and go to state 133
    PLUSPLUS        shift, and go to state 134
    MINUSMINUS      shift, and go to state 135
    ARROWSTAR       shift, and go to state 136
    ARROW           shift, and go to state 137
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DELETE          shift, and go to state 138
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    NEW             shift, and go to state 139
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 140
    '~'             shift, and go to state 141
    '['             shift, and go to state 142
    '<'             shift, and go to state 143
    '>'             shift, and go to state 144
    ','             shift, and go to state 145
    '*'             shift, and go to state 146
    '&'             shift, and go to state 147
    '+'             shift, and go to state 148
    '!'             shift, and go to state 149
    '/'             shift, and go to state 150
    '%'             shift, and go to state 151
    '^'             shift, and go to state 152
    '|'             shift, and go to state 153
    '='             shift, and go to state 154
    '_'             shift, and go to state 155

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 158
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_type_id         go to state 159
    operator                   go to state 160
    template_id                go to state 93


State 27

  196 storage_class_specifier: REGISTER .

    $default  reduce using rule 196 (storage_class_specifier)


State 28

  214 simple_type_specifier: SHORT .

    $default  reduce using rule 214 (simple_type_specifier)


State 29

  217 simple_type_specifier: SIGNED .

    $default  reduce using rule 217 (simple_type_specifier)


State 30

  197 storage_class_specifier: STATIC .

    $default  reduce using rule 197 (storage_class_specifier)


State 31

  332 class_key: STRUCT .

    $default  reduce using rule 332 (class_key)


State 32

  442 explicit_instantiation: TEMPLATE . declaration
  443 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '<'             shift, and go to state 161
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 162
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 33

  192 decl_specifier: TYPEDEF .

    $default  reduce using rule 192 (decl_specifier)


State 34

  230 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  231                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 462 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 164


State 35

  333 class_key: UNION .

    $default  reduce using rule 333 (class_key)


State 36

  218 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 218 (simple_type_specifier)


State 37

  251 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  254                  | USING . nested_name_specifier unqualified_id ';'
  255                  | USING . COLONCOLON unqualified_id ';'
  256 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  257                | USING . NAMESPACE COLONCOLON namespace_name ';'
  258                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  259                | USING . NAMESPACE namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 165
    NAMESPACE       shift, and go to state 166
    TYPENAME        shift, and go to state 167

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 38

  201 function_specifier: VIRTUAL .

    $default  reduce using rule 201 (function_specifier)


State 39

  221 simple_type_specifier: VOID .

    $default  reduce using rule 221 (simple_type_specifier)


State 40

  288 cv_qualifier: VOLATILE .

    $default  reduce using rule 288 (cv_qualifier)


State 41

  212 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 212 (simple_type_specifier)


State 42

  277 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 171
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 43

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 172
    template_name  go to state 51
    template_id    go to state 93


State 44

  278 ptr_operator: '*' .
  279             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 278 (ptr_operator)

    cv_qualifier_seq  go to state 173
    cv_qualifier      go to state 174


State 45

  280 ptr_operator: '&' .

    $default  reduce using rule 280 (ptr_operator)


State 46

  224 type_name: typedef_name .

    $default  reduce using rule 224 (type_name)


State 47

   35 nested_name_specifier: namespace_name . COLONCOLON

    COLONCOLON  shift, and go to state 175


State 48

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


State 49

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  222 type_name: class_name .

    COLONCOLON  shift, and go to state 176

    COLONCOLON  [reduce using rule 222 (type_name)]
    $default    reduce using rule 222 (type_name)


State 50

  223 type_name: enum_name .

    $default  reduce using rule 223 (type_name)


State 51

  436 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 177


State 52

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


State 53

    0 $accept: translation_unit . $end

    $end  shift, and go to state 178


State 54

  289 declarator_id: id_expression .

    $default  reduce using rule 289 (declarator_id)


State 55

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


State 56

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


State 57

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  209 simple_type_specifier: nested_name_specifier . type_name
  281 ptr_operator: nested_name_specifier . '*'
  282             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 180

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 58

  173 declaration_seq: declaration_seq . declaration
  457 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 457 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 184
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 59

  172 declaration_seq: declaration .

    $default  reduce using rule 172 (declaration_seq)


State 60

  174 declaration: block_declaration .

    $default  reduce using rule 174 (declaration)


State 61

  181 block_declaration: simple_declaration .

    $default  reduce using rule 181 (block_declaration)


State 62

  193 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 193 (decl_specifier_seq)


State 63

  186 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  187                   | decl_specifier_seq . ';'
  194 decl_specifier_seq: decl_specifier_seq . decl_specifier
  315 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  317                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 186

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 190
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 64

  188 decl_specifier: storage_class_specifier .

    $default  reduce using rule 188 (decl_specifier)


State 65

  190 decl_specifier: function_specifier .

    $default  reduce using rule 190 (decl_specifier)


State 66

  189 decl_specifier: type_specifier .

    $default  reduce using rule 189 (decl_specifier)


State 67

  203 type_specifier: simple_type_specifier .

    $default  reduce using rule 203 (type_specifier)


State 68

  208 simple_type_specifier: type_name .

    $default  reduce using rule 208 (simple_type_specifier)


State 69

  206 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 206 (type_specifier)


State 70

  205 type_specifier: enum_specifier .

    $default  reduce using rule 205 (type_specifier)


State 71

  180 declaration: namespace_definition .

    $default  reduce using rule 180 (declaration)


State 72

  238 namespace_definition: named_namespace_definition .

    $default  reduce using rule 238 (namespace_definition)


State 73

  240 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 240 (named_namespace_definition)


State 74

  241 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 241 (named_namespace_definition)


State 75

  239 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 239 (namespace_definition)


State 76

  183 block_declaration: namespace_alias_definition .

    $default  reduce using rule 183 (block_declaration)


State 77

  184 block_declaration: using_declaration .

    $default  reduce using rule 184 (block_declaration)


State 78

  185 block_declaration: using_directive .

    $default  reduce using rule 185 (block_declaration)


State 79

  182 block_declaration: asm_definition .

    $default  reduce using rule 182 (block_declaration)


State 80

  179 declaration: linkage_specification .

    $default  reduce using rule 179 (declaration)


State 81

  314 function_definition: declarator . ctor_initializer_opt function_body
  316                    | declarator . function_try_block

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192

    $default  reduce using rule 488 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 82

  266 declarator: direct_declarator .
  269 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  270                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  271                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  272                  | direct_declarator . '(' parameter_declaration_clause ')'
  276                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 196
    '['  shift, and go to state 197

    '('       [reduce using rule 266 (declarator)]
    $default  reduce using rule 266 (declarator)


State 83

  267 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 198
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 84

  207 type_specifier: cv_qualifier .

    $default  reduce using rule 207 (type_specifier)


State 85

  268 direct_declarator: declarator_id .

    $default  reduce using rule 268 (direct_declarator)


State 86

  175 declaration: function_definition .

    $default  reduce using rule 175 (declaration)


State 87

  204 type_specifier: class_specifier .

    $default  reduce using rule 204 (type_specifier)


State 88

  326 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 199


State 89

  225 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  226                          | class_key . COLONCOLON identifier
  327 class_head: class_key . identifier
  328           | class_key . identifier base_clause
  329           | class_key . nested_name_specifier identifier
  330           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 200

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 201
    nested_name_specifier    go to state 202
    template_id              go to state 93


State 90

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


State 91

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


State 92

  176 declaration: template_declaration .

    $default  reduce using rule 176 (declaration)


State 93

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


State 94

  177 declaration: explicit_instantiation .

    $default  reduce using rule 177 (declaration)


State 95

  178 declaration: explicit_specialization .

    $default  reduce using rule 178 (declaration)


State 96

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


State 97

  425 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 203


State 98

  274 direct_declarator: CLASS_NAME COLONCOLON . declarator_id '(' parameter_declaration_clause ')'
  275                  | CLASS_NAME COLONCOLON . CLASS_NAME '(' parameter_declaration_clause ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 204
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 205
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    declarator_id            go to state 207
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 99

  273 direct_declarator: CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 210
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 100

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


State 101

  290 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 290 (declarator_id)


State 102

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  283 ptr_operator: COLONCOLON nested_name_specifier . '*'
  284             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  291 declarator_id: COLONCOLON nested_name_specifier . type_name
  459 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 213

    TYPEDEF_NAME   [reduce using rule 459 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 459 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 459 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 459 (nested_name_specifier_opt)]

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 103

  292 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 292 (declarator_id)


State 104

  210 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 215
    template_id    go to state 93


State 105

  260 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 110

    string_literal  go to state 216


State 106

  227 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  228                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 217
    nested_name_specifier    go to state 218
    template_id              go to state 93


State 107

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 176


State 108

  232 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 219


State 109

  229 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 220


State 110

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


State 111

  261 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  262                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    '{'             shift, and go to state 221

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 222
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 112

  244 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 223
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 113

  243 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 225


State 114

  242 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  246 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 226
    '{'  shift, and go to state 227


State 115

  210 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]
    $default       reduce using rule 458 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 116

  400 operator: ADDEQ .

    $default  reduce using rule 400 (operator)


State 117

  401 operator: SUBEQ .

    $default  reduce using rule 401 (operator)


State 118

  402 operator: MULEQ .

    $default  reduce using rule 402 (operator)


State 119

  403 operator: DIVEQ .

    $default  reduce using rule 403 (operator)


State 120

  404 operator: MODEQ .

    $default  reduce using rule 404 (operator)


State 121

  405 operator: XOREQ .

    $default  reduce using rule 405 (operator)


State 122

  406 operator: ANDEQ .

    $default  reduce using rule 406 (operator)


State 123

  407 operator: OREQ .

    $default  reduce using rule 407 (operator)


State 124

  408 operator: SL .

    $default  reduce using rule 408 (operator)


State 125

  409 operator: SR .

    $default  reduce using rule 409 (operator)


State 126

  410 operator: SREQ .

    $default  reduce using rule 410 (operator)


State 127

  411 operator: SLEQ .

    $default  reduce using rule 411 (operator)


State 128

  412 operator: EQ .

    $default  reduce using rule 412 (operator)


State 129

  413 operator: NOTEQ .

    $default  reduce using rule 413 (operator)


State 130

  414 operator: LTEQ .

    $default  reduce using rule 414 (operator)


State 131

  415 operator: GTEQ .

    $default  reduce using rule 415 (operator)


State 132

  416 operator: ANDAND .

    $default  reduce using rule 416 (operator)


State 133

  417 operator: OROR .

    $default  reduce using rule 417 (operator)


State 134

  418 operator: PLUSPLUS .

    $default  reduce using rule 418 (operator)


State 135

  419 operator: MINUSMINUS .

    $default  reduce using rule 419 (operator)


State 136

  421 operator: ARROWSTAR .

    $default  reduce using rule 421 (operator)


State 137

  422 operator: ARROW .

    $default  reduce using rule 422 (operator)


State 138

  384 operator: DELETE .
  386         | DELETE . '[' ']'

    '['  shift, and go to state 229

    '['       [reduce using rule 384 (operator)]
    $default  reduce using rule 384 (operator)


State 139

  383 operator: NEW .
  385         | NEW . '[' ']'

    '['  shift, and go to state 230

    '['       [reduce using rule 383 (operator)]
    $default  reduce using rule 383 (operator)


State 140

  423 operator: '(' . ')'

    ')'  shift, and go to state 231


State 141

  395 operator: '~' .

    $default  reduce using rule 395 (operator)


State 142

  424 operator: '[' . ']'

    ']'  shift, and go to state 232


State 143

  398 operator: '<' .

    $default  reduce using rule 398 (operator)


State 144

  399 operator: '>' .

    $default  reduce using rule 399 (operator)


State 145

  420 operator: ',' .

    $default  reduce using rule 420 (operator)


State 146

  389 operator: '*' .

    $default  reduce using rule 389 (operator)


State 147

  393 operator: '&' .

    $default  reduce using rule 393 (operator)


State 148

  387 operator: '+' .

    $default  reduce using rule 387 (operator)


State 149

  396 operator: '!' .

    $default  reduce using rule 396 (operator)


State 150

  390 operator: '/' .

    $default  reduce using rule 390 (operator)


State 151

  391 operator: '%' .

    $default  reduce using rule 391 (operator)


State 152

  392 operator: '^' .

    $default  reduce using rule 392 (operator)


State 153

  394 operator: '|' .

    $default  reduce using rule 394 (operator)


State 154

  397 operator: '=' .

    $default  reduce using rule 397 (operator)


State 155

  388 operator: '_' .

    $default  reduce using rule 388 (operator)


State 156

  209 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 183
    template_id    go to state 93


State 157

  294 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    NAMESPACE_NAME  [reduce using rule 484 (type_specifier_seq_opt)]
    CLASS_NAME      [reduce using rule 484 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 484 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 484 (type_specifier_seq_opt)]
    $default        reduce using rule 484 (type_specifier_seq_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 233
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_specifier_seq_opt     go to state 234


State 158

  371 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 496 (conversion_declarator_opt)]
    '&'       [reduce using rule 496 (conversion_declarator_opt)]
    $default  reduce using rule 496 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 239


State 159

  370 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 370 (conversion_function_id)


State 160

  382 operator_function_id: OPERATOR operator .

    $default  reduce using rule 382 (operator_function_id)


State 161

  443 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 240


State 162

  442 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 442 (explicit_instantiation)


State 163

  463 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 463 (COLONCOLON_opt)


State 164

  230 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  231                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 241
    template_id              go to state 93


State 165

  253 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  255                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    unqualified_id           go to state 242
    nested_name_specifier    go to state 243
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 166

  256 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE . COLONCOLON namespace_name ';'
  258                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  259                | USING NAMESPACE . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 244

    namespace_name           go to state 245
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 246
    template_id              go to state 93


State 167

  251 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 247

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 248
    template_id              go to state 93


State 168

  254 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 249
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 169

  283 ptr_operator: COLONCOLON . nested_name_specifier '*'
  284             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 250
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 170

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  281 ptr_operator: nested_name_specifier . '*'
  282             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 179
    '~'         shift, and go to state 43
    '*'         shift, and go to state 180

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 171

  277 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 251


State 172

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


State 173

  279 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 279 (ptr_operator)


State 174

  285 cv_qualifier_seq: cv_qualifier .
  286                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 285 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 252
    cv_qualifier      go to state 174


State 175

   35 nested_name_specifier: namespace_name COLONCOLON .

    $default  reduce using rule 35 (nested_name_specifier)


State 176

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name COLONCOLON .

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    NAMESPACE_NAME  [reduce using rule 34 (nested_name_specifier)]
    CLASS_NAME      [reduce using rule 34 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 34 (nested_name_specifier)]
    $default        reduce using rule 34 (nested_name_specifier)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 253
    template_id              go to state 93


State 177

  436 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 283
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 311
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 312
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 314
    template_argument          go to state 315
    throw_expression           go to state 316


State 178

    0 $accept: translation_unit $end .

    $default  accept


State 179

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 317
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 180

  281 ptr_operator: nested_name_specifier '*' .
  282             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 281 (ptr_operator)

    cv_qualifier_seq  go to state 318
    cv_qualifier      go to state 174


State 181

  222 type_name: class_name .

    $default  reduce using rule 222 (type_name)


State 182

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


State 183

  209 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 209 (simple_type_specifier)


State 184

  173 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 173 (declaration_seq)


State 185

  198 storage_class_specifier: EXTERN .

    $default  reduce using rule 198 (storage_class_specifier)


State 186

  187 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 187 (simple_declaration)


State 187

  194 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 194 (decl_specifier_seq)


State 188

  186 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  264 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 319
    ';'  shift, and go to state 320


State 189

  263 init_declarator_list: init_declarator .

    $default  reduce using rule 263 (init_declarator_list)


State 190

  265 init_declarator: declarator . initializer_opt
  315 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  317                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 191
    '('  shift, and go to state 321
    ':'  shift, and go to state 192
    '='  shift, and go to state 322

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 478 (initializer_opt)

    initializer           go to state 323
    ctor_initializer      go to state 193
    function_try_block    go to state 324
    initializer_opt       go to state 325
    ctor_initializer_opt  go to state 326


State 191

  445 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 192

    $default  reduce using rule 488 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    ctor_initializer_opt  go to state 327


State 192

  373 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 328

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 329
    template_name            go to state 51
    identifier               go to state 330
    nested_name_specifier    go to state 331
    mem_initializer_list     go to state 332
    mem_initializer          go to state 333
    mem_initializer_id       go to state 334
    template_id              go to state 93


State 193

  489 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 489 (ctor_initializer_opt)


State 194

  316 function_definition: declarator function_try_block .

    $default  reduce using rule 316 (function_definition)


State 195

  314 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 335

    compound_statement  go to state 336
    function_body       go to state 337


State 196

  269 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  270                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  271                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  272                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 338
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 197

  276 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 480 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 346
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 347


State 198

  267 declarator: ptr_operator declarator .

    $default  reduce using rule 267 (declarator)


State 199

  326 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 351
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 352

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    $default  reduce using rule 492 (member_specification_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 353
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 354
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 355
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 356
    declarator                 go to state 357
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 358
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 359
    member_declaration         go to state 360
    member_declarator_list     go to state 361
    member_declarator          go to state 362
    access_specifier           go to state 363
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 364
    template_id                go to state 93
    member_specification_opt   go to state 365
    EXPORT_opt                 go to state 97


State 200

  225 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  226                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 366
    nested_name_specifier    go to state 367
    template_id              go to state 93


State 201

  327 class_head: class_key identifier .
  328           | class_key identifier . base_clause

    ':'  shift, and go to state 368

    $default  reduce using rule 327 (class_head)

    base_clause  go to state 369


State 202

  329 class_head: class_key nested_name_specifier . identifier
  330           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 370


State 203

  425 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 371


State 204

    4 class_name: CLASS_NAME .
  275 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 372

    $default  reduce using rule 4 (class_name)


State 205

  290 declarator_id: COLONCOLON . id_expression
  291              | COLONCOLON . nested_name_specifier type_name
  292              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 373
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 206

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    TEMPLATE    shift, and go to state 179
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 207

  274 direct_declarator: CLASS_NAME COLONCOLON declarator_id . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 374


State 208

  305 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 305 (parameter_declaration_clause)


State 209

  194 decl_specifier_seq: decl_specifier_seq . decl_specifier
  310 parameter_declaration: decl_specifier_seq . declarator
  311                      | decl_specifier_seq . declarator '=' assignment_expression
  312                      | decl_specifier_seq . abstract_declarator_opt
  313                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 375
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    decl_specifier                  go to state 187
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    declarator                      go to state 376
    direct_declarator               go to state 82
    ptr_operator                    go to state 377
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    abstract_declarator             go to state 378
    direct_abstract_declarator      go to state 379
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 380
    direct_abstract_declarator_opt  go to state 381


State 210

  273 direct_declarator: CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 382


State 211

  303 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  304                             | parameter_declaration_list .
  307                             | parameter_declaration_list . ',' ELLIPSIS
  309 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 383
    ','       shift, and go to state 384

    $default  reduce using rule 304 (parameter_declaration_clause)


State 212

  308 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 308 (parameter_declaration_list)


State 213

  283 ptr_operator: COLONCOLON nested_name_specifier '*' .
  284             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 13
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 283 (ptr_operator)

    cv_qualifier_seq  go to state 385
    cv_qualifier      go to state 174


State 214

  291 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 291 (declarator_id)


State 215

  210 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 210 (simple_type_specifier)


State 216

  260 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 386


State 217

  228 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 228 (elaborated_type_specifier)


State 218

  227 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 387


State 219

  232 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 476 (enumerator_list_opt)

    identifier             go to state 388
    enumerator_list        go to state 389
    enumerator_definition  go to state 390
    enumerator             go to state 391
    enumerator_list_opt    go to state 392


State 220

  229 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 229 (elaborated_type_specifier)


State 221

  261 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 393
    EXPORT_opt                      go to state 97


State 222

  262 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 262 (linkage_specification)


State 223

  244 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 394


State 224

  245 namespace_body: declaration_seq_opt .

    $default  reduce using rule 245 (namespace_body)


State 225

  243 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 395
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 226

  246 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 396

    namespace_name                 go to state 397
    original_namespace_name        go to state 48
    class_name                     go to state 107
    template_name                  go to state 51
    nested_name_specifier          go to state 398
    qualified_namespace_specifier  go to state 399
    template_id                    go to state 93


State 227

  242 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 400
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 228

  459 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 459 (nested_name_specifier_opt)


State 229

  386 operator: DELETE '[' . ']'

    ']'  shift, and go to state 401


State 230

  385 operator: NEW '[' . ']'

    ']'  shift, and go to state 402


State 231

  423 operator: '(' ')' .

    $default  reduce using rule 423 (operator)


State 232

  424 operator: '[' ']' .

    $default  reduce using rule 424 (operator)


State 233

  485 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 485 (type_specifier_seq_opt)


State 234

  294 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 294 (type_specifier_seq)


State 235

  283 ptr_operator: COLONCOLON . nested_name_specifier '*'
  284             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 403
    template_id              go to state 93


State 236

  281 ptr_operator: nested_name_specifier . '*'
  282             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 180


State 237

  372 conversion_declarator: ptr_operator . conversion_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 496 (conversion_declarator_opt)]
    '&'       [reduce using rule 496 (conversion_declarator_opt)]
    $default  reduce using rule 496 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 404


State 238

  497 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 497 (conversion_declarator_opt)


State 239

  371 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 371 (conversion_type_id)


State 240

  443 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 405
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 241

  230 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  231                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 406


State 242

  255 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 407


State 243

  253 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 408
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 244

  256 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  257                | USING NAMESPACE COLONCOLON . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 409
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 410
    template_id              go to state 93


State 245

   35 nested_name_specifier: namespace_name . COLONCOLON
  259 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 411


State 246

  258 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 412
    original_namespace_name  go to state 48


State 247

  251 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 413
    template_id              go to state 93


State 248

  252 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 414
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 249

  254 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 415


State 250

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  283 ptr_operator: COLONCOLON nested_name_specifier . '*'
  284             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  291 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    '*'            shift, and go to state 213

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 251

  277 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 277 (direct_declarator)


State 252

  286 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 286 (cv_qualifier_seq)


State 253

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier . namespace_name COLONCOLON nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 416
    original_namespace_name  go to state 48


State 254

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


State 255

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


State 256

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


State 257

   76 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   78               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   87 delete_expression: COLONCOLON . DELETE cast_expression
   89                  | COLONCOLON . DELETE '[' ']' cast_expression
  210 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    DELETE          shift, and go to state 417
    NEW             shift, and go to state 418

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]
    $default       reduce using rule 458 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 258

   62 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 419
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 259

   63 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 420
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 260

   42 postfix_expression: BOOL . '(' expression_list_opt ')'
  213 simple_type_specifier: BOOL .

    '('  shift, and go to state 421

    '('       [reduce using rule 213 (simple_type_specifier)]
    $default  reduce using rule 213 (simple_type_specifier)


State 261

   41 postfix_expression: CHAR . '(' expression_list_opt ')'
  211 simple_type_specifier: CHAR .

    '('  shift, and go to state 422

    '('       [reduce using rule 211 (simple_type_specifier)]
    $default  reduce using rule 211 (simple_type_specifier)


State 262

   56 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 423


State 263

   86 delete_expression: DELETE . cast_expression
   88                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '['               shift, and go to state 424
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 425
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 264

   39 postfix_expression: DOUBLE . '(' expression_list_opt ')'
  220 simple_type_specifier: DOUBLE .

    '('  shift, and go to state 426

    '('       [reduce using rule 220 (simple_type_specifier)]
    $default  reduce using rule 220 (simple_type_specifier)


State 265

   53 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 427


State 266

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


State 267

   40 postfix_expression: INT . '(' expression_list_opt ')'
  215 simple_type_specifier: INT .

    '('  shift, and go to state 428

    '('       [reduce using rule 215 (simple_type_specifier)]
    $default  reduce using rule 215 (simple_type_specifier)


State 268

   75 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   77               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 429

    '('       [reduce using rule 464 (new_placement_opt)]
    $default  reduce using rule 464 (new_placement_opt)

    new_placement      go to state 430
    new_placement_opt  go to state 431


State 269

   55 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 432


State 270

   67 unary_expression: SIZEOF . unary_expression
   68                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 433
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 434
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 271

   54 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 435


State 272

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


State 273

  452 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 502 (assignment_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 436
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    assignment_expression_opt  go to state 437


State 274

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


State 275

   57 postfix_expression: TYPEID . '(' expression ')'
   58                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 438


State 276

   23 primary_expression: '(' . expression ')'
   91 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 440
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 441
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 277

   30 unqualified_id: '~' . class_name
   74 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    CLASS_NAME     [reduce using rule 74 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 74 (unary_operator)]
    $default       reduce using rule 74 (unary_operator)

    class_name     go to state 172
    template_name  go to state 51
    template_id    go to state 93


State 278

   64 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 442
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 279

   65 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 443
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 280

   71 unary_operator: '+' .

    $default  reduce using rule 71 (unary_operator)


State 281

   72 unary_operator: '-' .

    $default  reduce using rule 72 (unary_operator)


State 282

   73 unary_operator: '!' .

    $default  reduce using rule 73 (unary_operator)


State 283

  436 template_id: template_name . '<' template_argument_list '>'
  441 template_argument: template_name .

    '<'  shift, and go to state 177

    $default  reduce using rule 441 (template_argument)


State 284

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


State 285

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


State 286

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


State 287

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


State 288

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


State 289

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


State 290

   36 postfix_expression: primary_expression .

    $default  reduce using rule 36 (postfix_expression)


State 291

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


State 292

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  209 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 293

   37 postfix_expression: postfix_expression . '[' expression ']'
   38                   | postfix_expression . '(' expression_list_opt ')'
   43                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression . '.' TEMPLATE id_expression
   45                   | postfix_expression . '.' COLONCOLON id_expression
   46                   | postfix_expression . '.' id_expression
   47                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   48                   | postfix_expression . ARROW TEMPLATE id_expression
   49                   | postfix_expression . ARROW COLONCOLON id_expression
   50                   | postfix_expression . ARROW id_expression
   51                   | postfix_expression . PLUSPLUS
   52                   | postfix_expression . MINUSMINUS
   61 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 444
    MINUSMINUS  shift, and go to state 445
    ARROW       shift, and go to state 446
    '('         shift, and go to state 447
    '['         shift, and go to state 448
    '.'         shift, and go to state 449

    $default  reduce using rule 61 (unary_expression)


State 294

   90 cast_expression: unary_expression .

    $default  reduce using rule 90 (cast_expression)


State 295

   66 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 450
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 296

   69 unary_expression: new_expression .

    $default  reduce using rule 69 (unary_expression)


State 297

   70 unary_expression: delete_expression .

    $default  reduce using rule 70 (unary_expression)


State 298

   92 pm_expression: cast_expression .

    $default  reduce using rule 92 (pm_expression)


State 299

   93 pm_expression: pm_expression . DOTSTAR cast_expression
   94              | pm_expression . ARROWSTAR cast_expression
   95 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 451
    ARROWSTAR  shift, and go to state 452

    $default  reduce using rule 95 (multiplicative_expression)


State 300

   96 multiplicative_expression: multiplicative_expression . '*' pm_expression
   97                          | multiplicative_expression . '/' pm_expression
   98                          | multiplicative_expression . '%' pm_expression
   99 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 453
    '/'  shift, and go to state 454
    '%'  shift, and go to state 455

    $default  reduce using rule 99 (additive_expression)


State 301

  100 additive_expression: additive_expression . '+' multiplicative_expression
  101                    | additive_expression . '-' multiplicative_expression
  102 shift_expression: additive_expression .

    '+'  shift, and go to state 456
    '-'  shift, and go to state 457

    $default  reduce using rule 102 (shift_expression)


State 302

  103 shift_expression: shift_expression . SL additive_expression
  104                 | shift_expression . SR additive_expression
  105 relational_expression: shift_expression .

    SL  shift, and go to state 458
    SR  shift, and go to state 459

    $default  reduce using rule 105 (relational_expression)


State 303

  106 relational_expression: relational_expression . '<' shift_expression
  107                      | relational_expression . '>' shift_expression
  108                      | relational_expression . LTEQ shift_expression
  109                      | relational_expression . GTEQ shift_expression
  110 equality_expression: relational_expression .

    LTEQ  shift, and go to state 460
    GTEQ  shift, and go to state 461
    '<'   shift, and go to state 462
    '>'   shift, and go to state 463

    '>'       [reduce using rule 110 (equality_expression)]
    $default  reduce using rule 110 (equality_expression)


State 304

  111 equality_expression: equality_expression . EQ relational_expression
  112                    | equality_expression . NOTEQ relational_expression
  113 and_expression: equality_expression .

    EQ     shift, and go to state 464
    NOTEQ  shift, and go to state 465

    $default  reduce using rule 113 (and_expression)


State 305

  114 and_expression: and_expression . '&' equality_expression
  115 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 466

    $default  reduce using rule 115 (exclusive_or_expression)


State 306

  116 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  117 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 467

    $default  reduce using rule 117 (inclusive_or_expression)


State 307

  118 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  119 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 468

    $default  reduce using rule 119 (logical_and_expression)


State 308

  120 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  121 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 469

    $default  reduce using rule 121 (logical_or_expression)


State 309

  122 logical_or_expression: logical_or_expression . OROR logical_and_expression
  123 conditional_expression: logical_or_expression .
  124                       | logical_or_expression . '?' expression ':' assignment_expression
  126 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 470
    SUBEQ  shift, and go to state 471
    MULEQ  shift, and go to state 472
    DIVEQ  shift, and go to state 473
    MODEQ  shift, and go to state 474
    XOREQ  shift, and go to state 475
    ANDEQ  shift, and go to state 476
    OREQ   shift, and go to state 477
    SREQ   shift, and go to state 478
    SLEQ   shift, and go to state 479
    OROR   shift, and go to state 480
    '?'    shift, and go to state 481
    '='    shift, and go to state 482

    $default  reduce using rule 123 (conditional_expression)

    assignment_operator  go to state 483


State 310

  125 assignment_expression: conditional_expression .

    $default  reduce using rule 125 (assignment_expression)


State 311

  439 template_argument: assignment_expression .

    $default  reduce using rule 439 (template_argument)


State 312

  440 template_argument: type_id .

    $default  reduce using rule 440 (template_argument)


State 313

  293 type_id: type_specifier_seq . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 484
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 485
    abstract_declarator             go to state 378
    direct_abstract_declarator      go to state 379
    template_id                     go to state 93
    abstract_declarator_opt         go to state 486
    direct_abstract_declarator_opt  go to state 381


State 314

  436 template_id: template_name '<' template_argument_list . '>'
  438 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 487
    ','  shift, and go to state 488


State 315

  437 template_argument_list: template_argument .

    $default  reduce using rule 437 (template_argument_list)


State 316

  127 assignment_expression: throw_expression .

    $default  reduce using rule 127 (assignment_expression)


State 317

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


State 318

  282 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 282 (ptr_operator)


State 319

  264 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    init_declarator          go to state 489
    declarator               go to state 490
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 320

  186 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 186 (simple_declaration)


State 321

  320 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 491
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 322

  319 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 493

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 494
    initializer_clause         go to state 495
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 323

  479 initializer_opt: initializer .

    $default  reduce using rule 479 (initializer_opt)


State 324

  317 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 317 (function_definition)


State 325

  265 init_declarator: declarator initializer_opt .

    $default  reduce using rule 265 (init_declarator)


State 326

  315 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 335

    compound_statement  go to state 336
    function_body       go to state 496


State 327

  445 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 335

    compound_statement  go to state 336
    function_body       go to state 497


State 328

  377 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  378                   | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 498
    template_name            go to state 51
    nested_name_specifier    go to state 499
    template_id              go to state 93


State 329

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  380 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 380 (mem_initializer_id)


State 330

  381 mem_initializer_id: identifier .

    $default  reduce using rule 381 (mem_initializer_id)


State 331

  379 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 500
    template_name  go to state 51
    template_id    go to state 93


State 332

  373 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 373 (ctor_initializer)


State 333

  374 mem_initializer_list: mem_initializer .
  375                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 501

    $default  reduce using rule 374 (mem_initializer_list)


State 334

  376 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 502


State 335

  154 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    '}'       reduce using rule 472 (statement_seq_opt)
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 518
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    statement_seq               go to state 522
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530
    statement_seq_opt           go to state 531


State 336

  318 function_body: compound_statement .

    $default  reduce using rule 318 (function_body)


State 337

  314 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 314 (function_definition)


State 338

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  271                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  272                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 532


State 339

   76 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   78               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   87 delete_expression: COLONCOLON . DELETE cast_expression
   89                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 417
    NEW     shift, and go to state 418


State 340

   42 postfix_expression: BOOL . '(' expression_list_opt ')'

    '('  shift, and go to state 421


State 341

   41 postfix_expression: CHAR . '(' expression_list_opt ')'

    '('  shift, and go to state 422


State 342

   39 postfix_expression: DOUBLE . '(' expression_list_opt ')'

    '('  shift, and go to state 426


State 343

   40 postfix_expression: INT . '(' expression_list_opt ')'

    '('  shift, and go to state 428


State 344

  122 logical_or_expression: logical_or_expression . OROR logical_and_expression
  123 conditional_expression: logical_or_expression .
  124                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 480
    '?'   shift, and go to state 481

    $default  reduce using rule 123 (conditional_expression)


State 345

  141 constant_expression: conditional_expression .

    $default  reduce using rule 141 (constant_expression)


State 346

  481 constant_expression_opt: constant_expression .

    $default  reduce using rule 481 (constant_expression_opt)


State 347

  276 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 533


State 348

  367 access_specifier: PRIVATE .

    $default  reduce using rule 367 (access_specifier)


State 349

  368 access_specifier: PROTECTED .

    $default  reduce using rule 368 (access_specifier)


State 350

  369 access_specifier: PUBLIC .

    $default  reduce using rule 369 (access_specifier)


State 351

  251 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  252                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  253                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  254                  | USING . nested_name_specifier unqualified_id ';'
  255                  | USING . COLONCOLON unqualified_id ';'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 165
    TYPENAME        shift, and go to state 167

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 352

  339 member_declaration: ';' .

    $default  reduce using rule 339 (member_declaration)


State 353

   27 unqualified_id: identifier .
  349 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 534

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


State 354

   26 id_expression: qualified_id .
  341 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 535

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


State 355

  194 decl_specifier_seq: decl_specifier_seq . decl_specifier
  315 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  317                    | decl_specifier_seq . declarator function_try_block
  336 member_declaration: decl_specifier_seq . member_declarator_list ';'
  337                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 536

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 353
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    declarator                 go to state 537
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_declarator_list     go to state 538
    member_declarator          go to state 362
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 356

  342 member_declaration: using_declaration .

    $default  reduce using rule 342 (member_declaration)


State 357

  314 function_definition: declarator . ctor_initializer_opt function_body
  316                    | declarator . function_try_block
  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192
    '='  shift, and go to state 539

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 540
    constant_initializer  go to state 541
    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 358

  340 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 542

    ';'       [reduce using rule 494 (SEMICOLON_opt)]
    $default  reduce using rule 494 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 543


State 359

  493 member_specification_opt: member_specification .

    $default  reduce using rule 493 (member_specification_opt)


State 360

  334 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 351
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 352

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    $default  reduce using rule 492 (member_specification_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 353
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 354
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 355
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 356
    declarator                 go to state 357
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 358
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 359
    member_declaration         go to state 360
    member_declarator_list     go to state 361
    member_declarator          go to state 362
    access_specifier           go to state 363
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 364
    template_id                go to state 93
    member_specification_opt   go to state 544
    EXPORT_opt                 go to state 97


State 361

  338 member_declaration: member_declarator_list . ';'
  345 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 545
    ';'  shift, and go to state 546


State 362

  344 member_declarator_list: member_declarator .

    $default  reduce using rule 344 (member_declarator_list)


State 363

  335 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 547


State 364

  343 member_declaration: template_declaration .

    $default  reduce using rule 343 (member_declaration)


State 365

  326 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 548


State 366

  226 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 226 (elaborated_type_specifier)


State 367

  225 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 549


State 368

  352 base_clause: ':' . base_specifier_list

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 550
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350
    VIRTUAL         shift, and go to state 551

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 552
    template_name            go to state 51
    nested_name_specifier    go to state 553
    base_specifier_list      go to state 554
    base_specifier           go to state 555
    access_specifier         go to state 556
    template_id              go to state 93


State 369

  328 class_head: class_key identifier base_clause .

    $default  reduce using rule 328 (class_head)


State 370

  329 class_head: class_key nested_name_specifier identifier .
  330           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 368

    $default  reduce using rule 329 (class_head)

    base_clause  go to state 557


State 371

  425 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 558
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 559
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 560
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 561
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 562
    template_parameter         go to state 563
    type_parameter             go to state 564
    template_id                go to state 93


State 372

  275 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 565
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 373

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  291 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 5
    TEMPLATE_NAME  shift, and go to state 6
    OPERATOR       shift, and go to state 26
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 374

  274 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 566
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 375

  277 direct_declarator: '(' . declarator ')'
  302 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 375
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    $default  reduce using rule 486 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 171
    direct_declarator               go to state 82
    ptr_operator                    go to state 377
    declarator_id                   go to state 85
    abstract_declarator             go to state 567
    direct_abstract_declarator      go to state 379
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 381


State 376

  310 parameter_declaration: decl_specifier_seq declarator .
  311                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 568

    $default  reduce using rule 310 (parameter_declaration)


State 377

  267 declarator: ptr_operator . declarator
  295 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 375
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 198
    direct_declarator               go to state 82
    ptr_operator                    go to state 377
    declarator_id                   go to state 85
    abstract_declarator             go to state 378
    direct_abstract_declarator      go to state 379
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 569
    direct_abstract_declarator_opt  go to state 381


State 378

  483 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 483 (abstract_declarator_opt)


State 379

  296 abstract_declarator: direct_abstract_declarator .
  487 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 487 (direct_abstract_declarator_opt)
    '['       reduce using rule 487 (direct_abstract_declarator_opt)
    $default  reduce using rule 296 (abstract_declarator)


State 380

  312 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  313                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 570

    $default  reduce using rule 312 (parameter_declaration)


State 381

  297 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  301                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 571
    '['  shift, and go to state 572


State 382

  273 direct_declarator: CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 273 (direct_declarator)


State 383

  303 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 303 (parameter_declaration_clause)


State 384

  307 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  309 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 573
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 574
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 385

  284 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 284 (ptr_operator)


State 386

  260 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 575


State 387

  227 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 227 (elaborated_type_specifier)


State 388

  237 enumerator: identifier .

    $default  reduce using rule 237 (enumerator)


State 389

  234 enumerator_list: enumerator_list . ',' enumerator_definition
  477 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 576

    $default  reduce using rule 477 (enumerator_list_opt)


State 390

  233 enumerator_list: enumerator_definition .

    $default  reduce using rule 233 (enumerator_list)


State 391

  235 enumerator_definition: enumerator .
  236                      | enumerator . '=' constant_expression

    '='  shift, and go to state 577

    $default  reduce using rule 235 (enumerator_definition)


State 392

  232 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 578


State 393

  261 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 579


State 394

  244 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 244 (unnamed_namespace_definition)


State 395

  243 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 580


State 396

  247 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  248                              | COLONCOLON . namespace_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 581
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 582
    template_id              go to state 93


State 397

   35 nested_name_specifier: namespace_name . COLONCOLON
  250 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 250 (qualified_namespace_specifier)


State 398

  249 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 583
    original_namespace_name  go to state 48


State 399

  246 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 584


State 400

  242 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 585


State 401

  386 operator: DELETE '[' ']' .

    $default  reduce using rule 386 (operator)


State 402

  385 operator: NEW '[' ']' .

    $default  reduce using rule 385 (operator)


State 403

  283 ptr_operator: COLONCOLON nested_name_specifier . '*'
  284             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 213


State 404

  372 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 372 (conversion_declarator)


State 405

  443 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 443 (explicit_specialization)


State 406

  230 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  231                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 586

    '<'       [reduce using rule 230 (elaborated_type_specifier)]
    $default  reduce using rule 230 (elaborated_type_specifier)


State 407

  255 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 255 (using_declaration)


State 408

  253 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 587


State 409

   35 nested_name_specifier: namespace_name . COLONCOLON
  257 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 588


State 410

  256 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 589
    original_namespace_name  go to state 48


State 411

  259 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 259 (using_directive)


State 412

  258 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 590


State 413

  251 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 26
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 591
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 414

  252 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 592


State 415

  254 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 254 (using_declaration)


State 416

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name . COLONCOLON nested_name_specifier

    COLONCOLON  shift, and go to state 593


State 417

   87 delete_expression: COLONCOLON DELETE . cast_expression
   89                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '['               shift, and go to state 594
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 595
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 418

   76 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   78               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 429

    '('       [reduce using rule 464 (new_placement_opt)]
    $default  reduce using rule 464 (new_placement_opt)

    new_placement      go to state 430
    new_placement_opt  go to state 596


State 419

   62 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 62 (unary_expression)


State 420

   63 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 63 (unary_expression)


State 421

   42 postfix_expression: BOOL '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 598


State 422

   41 postfix_expression: CHAR '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 599


State 423

   56 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 600
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 424

   88 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 601


State 425

   86 delete_expression: DELETE cast_expression .

    $default  reduce using rule 86 (delete_expression)


State 426

   39 postfix_expression: DOUBLE '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 602


State 427

   53 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 603
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 428

   40 postfix_expression: INT '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 604


State 429

   79 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 605
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 430

  465 new_placement_opt: new_placement .

    $default  reduce using rule 465 (new_placement_opt)


State 431

   75 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   77               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 606

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 607
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 608
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 432

   55 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 609
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 433

   23 primary_expression: '(' . expression ')'
   68 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 440
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 610
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 434

   67 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 67 (unary_expression)


State 435

   54 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 611
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 436

  503 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 503 (assignment_expression_opt)


State 437

  452 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 452 (throw_expression)


State 438

   57 postfix_expression: TYPEID '(' . expression ')'
   58                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 612
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 613
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 439

  139 expression: assignment_expression .

    $default  reduce using rule 139 (expression)


State 440

   23 primary_expression: '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 614
    ','  shift, and go to state 615


State 441

   91 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 616


State 442

   64 unary_expression: '*' cast_expression .

    $default  reduce using rule 64 (unary_expression)


State 443

   65 unary_expression: '&' cast_expression .

    $default  reduce using rule 65 (unary_expression)


State 444

   51 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 51 (postfix_expression)


State 445

   52 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 52 (postfix_expression)


State 446

   47 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   48                   | postfix_expression ARROW . TEMPLATE id_expression
   49                   | postfix_expression ARROW . COLONCOLON id_expression
   50                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 617
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 618
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 619
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 447

   38 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 620


State 448

   37 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 621
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 449

   43 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression '.' . TEMPLATE id_expression
   45                   | postfix_expression '.' . COLONCOLON id_expression
   46                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 622
    OPERATOR        shift, and go to state 26
    TEMPLATE        shift, and go to state 623
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 624
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 450

   66 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 66 (unary_expression)


State 451

   93 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 625
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 452

   94 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 626
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 453

   96 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 298
    pm_expression            go to state 627
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 454

   97 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 298
    pm_expression            go to state 628
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 455

   98 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 298
    pm_expression            go to state 629
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 456

  100 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 630
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 457

  101 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 631
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 458

  103 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 632
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 459

  104 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 633
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 460

  108 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 634
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 461

  109 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 635
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 462

  106 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 636
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 463

  107 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 637
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 464

  111 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 638
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 465

  112 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 639
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 466

  114 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 640
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 467

  116 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 641
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 468

  118 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 642
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 469

  120 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 643
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 470

  132 assignment_operator: ADDEQ .

    $default  reduce using rule 132 (assignment_operator)


State 471

  133 assignment_operator: SUBEQ .

    $default  reduce using rule 133 (assignment_operator)


State 472

  129 assignment_operator: MULEQ .

    $default  reduce using rule 129 (assignment_operator)


State 473

  130 assignment_operator: DIVEQ .

    $default  reduce using rule 130 (assignment_operator)


State 474

  131 assignment_operator: MODEQ .

    $default  reduce using rule 131 (assignment_operator)


State 475

  137 assignment_operator: XOREQ .

    $default  reduce using rule 137 (assignment_operator)


State 476

  136 assignment_operator: ANDEQ .

    $default  reduce using rule 136 (assignment_operator)


State 477

  138 assignment_operator: OREQ .

    $default  reduce using rule 138 (assignment_operator)


State 478

  134 assignment_operator: SREQ .

    $default  reduce using rule 134 (assignment_operator)


State 479

  135 assignment_operator: SLEQ .

    $default  reduce using rule 135 (assignment_operator)


State 480

  122 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 644
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 481

  124 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 645
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 482

  128 assignment_operator: '=' .

    $default  reduce using rule 128 (assignment_operator)


State 483

  126 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 646
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 484

  302 direct_abstract_declarator: '(' . abstract_declarator ')'

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 484
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    $default  reduce using rule 486 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 485
    abstract_declarator             go to state 567
    direct_abstract_declarator      go to state 379
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 381


State 485

  295 abstract_declarator: ptr_operator . abstract_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 484
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 482 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 485
    abstract_declarator             go to state 378
    direct_abstract_declarator      go to state 379
    template_id                     go to state 93
    abstract_declarator_opt         go to state 569
    direct_abstract_declarator_opt  go to state 381


State 486

  293 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 293 (type_id)


State 487

  436 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 436 (template_id)


State 488

  438 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 283
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 311
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 312
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument          go to state 647
    throw_expression           go to state 316


State 489

  264 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 264 (init_declarator_list)


State 490

  265 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 321
    '='  shift, and go to state 322

    $default  reduce using rule 478 (initializer_opt)

    initializer      go to state 323
    initializer_opt  go to state 325


State 491

   60 expression_list: expression_list . ',' assignment_expression
  320 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 648
    ','  shift, and go to state 649


State 492

   59 expression_list: assignment_expression .

    $default  reduce using rule 59 (expression_list)


State 493

  322 initializer_clause: '{' . initializer_list COMMA_opt '}'
  323                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 493
    '}'               shift, and go to state 650

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 494
    initializer_clause         go to state 651
    initializer_list           go to state 652
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 494

  321 initializer_clause: assignment_expression .

    $default  reduce using rule 321 (initializer_clause)


State 495

  319 initializer: '=' initializer_clause .

    $default  reduce using rule 319 (initializer)


State 496

  315 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 315 (function_definition)


State 497

  445 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 653

    handler_seq  go to state 654
    handler      go to state 655


State 498

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  378 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 378 (mem_initializer_id)


State 499

  377 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 656
    template_name  go to state 51
    template_id    go to state 93


State 500

  379 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 379 (mem_initializer_id)


State 501

  375 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 328

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 329
    template_name            go to state 51
    identifier               go to state 330
    nested_name_specifier    go to state 331
    mem_initializer_list     go to state 657
    mem_initializer          go to state 333
    mem_initializer_id       go to state 334
    template_id              go to state 93


State 502

  376 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 658


State 503

  167 jump_statement: BREAK . ';'

    ';'  shift, and go to state 659


State 504

  151 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 660
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 505

  168 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 661


State 506

  152 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 662


State 507

  163 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 663
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 508

  164 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 664


State 509

  170 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 665


State 510

  157 selection_statement: IF . '(' condition ')' statement
  158                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 666


State 511

  246 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 667


State 512

  169 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 470 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 517
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_opt             go to state 668


State 513

  159 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 669


State 514

  444 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 335

    compound_statement  go to state 670


State 515

  162 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 671


State 516

   27 unqualified_id: identifier .
  150 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 672

    $default  reduce using rule 27 (unqualified_id)


State 517

  140 expression: expression . ',' assignment_expression
  471 expression_opt: expression .

    ','  shift, and go to state 615

    $default  reduce using rule 471 (expression_opt)


State 518

  155 statement_seq: statement .

    $default  reduce using rule 155 (statement_seq)


State 519

  142 statement: labeled_statement .

    $default  reduce using rule 142 (statement)


State 520

  143 statement: expression_statement .

    $default  reduce using rule 143 (statement)


State 521

  144 statement: compound_statement .

    $default  reduce using rule 144 (statement)


State 522

  156 statement_seq: statement_seq . statement
  473 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    '}'       reduce using rule 473 (statement_seq_opt)
    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 673
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 523

  145 statement: selection_statement .

    $default  reduce using rule 145 (statement)


State 524

  146 statement: iteration_statement .

    $default  reduce using rule 146 (statement)


State 525

  147 statement: jump_statement .

    $default  reduce using rule 147 (statement)


State 526

  148 statement: declaration_statement .

    $default  reduce using rule 148 (statement)


State 527

  171 declaration_statement: block_declaration .

    $default  reduce using rule 171 (declaration_statement)


State 528

  186 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  187                   | decl_specifier_seq . ';'
  194 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 186

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 490
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 529

  149 statement: try_block .

    $default  reduce using rule 149 (statement)


State 530

  153 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 674


State 531

  154 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 675


State 532

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  271                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  272                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 676
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 272 (direct_declarator)

    cv_qualifier_seq         go to state 677
    cv_qualifier             go to state 174
    exception_specification  go to state 678


State 533

  276 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 276 (direct_declarator)


State 534

  349 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 679
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 535

  341 member_declaration: qualified_id ';' .

    $default  reduce using rule 341 (member_declaration)


State 536

  337 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 337 (member_declaration)


State 537

  315 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  317                    | decl_specifier_seq declarator . function_try_block
  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192
    '='  shift, and go to state 539

    '{'       reduce using rule 488 (ctor_initializer_opt)
    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 540
    constant_initializer  go to state 541
    ctor_initializer      go to state 193
    function_try_block    go to state 324
    ctor_initializer_opt  go to state 326


State 538

  336 member_declaration: decl_specifier_seq member_declarator_list . ';'
  345 member_declarator_list: member_declarator_list . ',' member_declarator

    ','  shift, and go to state 545
    ';'  shift, and go to state 680


State 539

  350 pure_specifier: '=' . '0'
  351 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '0'               shift, and go to state 681

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 682
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 540

  347 member_declarator: declarator pure_specifier .

    $default  reduce using rule 347 (member_declarator)


State 541

  348 member_declarator: declarator constant_initializer .

    $default  reduce using rule 348 (member_declarator)


State 542

  495 SEMICOLON_opt: ';' .

    $default  reduce using rule 495 (SEMICOLON_opt)


State 543

  340 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 340 (member_declaration)


State 544

  334 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 334 (member_specification)


State 545

  345 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 353
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 683
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    member_declarator        go to state 684
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 546

  338 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 338 (member_declaration)


State 547

  335 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    OPERATOR        shift, and go to state 26
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 351
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 352

    TEMPLATE  reduce using rule 498 (EXPORT_opt)
    $default  reduce using rule 492 (member_specification_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 353
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 354
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 355
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 356
    declarator                 go to state 357
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 358
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 359
    member_declaration         go to state 360
    member_declarator_list     go to state 361
    member_declarator          go to state 362
    access_specifier           go to state 363
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_declaration       go to state 364
    template_id                go to state 93
    member_specification_opt   go to state 685
    EXPORT_opt                 go to state 97


State 548

  326 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 326 (class_specifier)


State 549

  225 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


State 550

  355 base_specifier: COLONCOLON . nested_name_specifier class_name
  356               | COLONCOLON . class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 686
    template_name            go to state 51
    nested_name_specifier    go to state 687
    template_id              go to state 93


State 551

  359 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  361               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  362               | VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 688
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    access_specifier           go to state 689
    template_id                go to state 93
    nested_name_specifier_opt  go to state 690


State 552

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  358 base_specifier: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 358 (base_specifier)


State 553

  357 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 691
    template_name  go to state 51
    template_id    go to state 93


State 554

  352 base_clause: ':' base_specifier_list .
  354 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 692

    $default  reduce using rule 352 (base_clause)


State 555

  353 base_specifier_list: base_specifier .

    $default  reduce using rule 353 (base_specifier_list)


State 556

  363 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  365               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  366               | access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 693
    VIRTUAL         shift, and go to state 694

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 695


State 557

  330 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 330 (class_head)


State 558

  331 class_key: CLASS .
  430 type_parameter: CLASS . identifier
  431               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 331 (class_key)]
    $default    reduce using rule 331 (class_key)

    identifier  go to state 696


State 559

  434 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  435               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 697


State 560

  230 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  231                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  432 type_parameter: TYPENAME . identifier
  433               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 462 (COLONCOLON_opt)

    identifier      go to state 698
    COLONCOLON_opt  go to state 164


State 561

  429 template_parameter: parameter_declaration .

    $default  reduce using rule 429 (template_parameter)


State 562

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  427 template_parameter_list: template_parameter_list . ',' template_parameter

    '>'  shift, and go to state 699
    ','  shift, and go to state 700


State 563

  426 template_parameter_list: template_parameter .

    $default  reduce using rule 426 (template_parameter_list)


State 564

  428 template_parameter: type_parameter .

    $default  reduce using rule 428 (template_parameter)


State 565

  275 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 701


State 566

  274 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 702


State 567

  302 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 703


State 568

  311 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 704
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 569

  295 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 295 (abstract_declarator)


State 570

  313 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 705
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 571

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 306 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 706
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 572

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 480 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 346
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 707


State 573

  307 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 307 (parameter_declaration_clause)


State 574

  309 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 309 (parameter_declaration_list)


State 575

  260 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 260 (asm_definition)


State 576

  234 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 388
    enumerator_definition  go to state 708
    enumerator             go to state 391


State 577

  236 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 709
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 578

  232 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 232 (enum_specifier)


State 579

  261 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 261 (linkage_specification)


State 580

  243 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 243 (extension_namespace_definition)


State 581

   35 nested_name_specifier: namespace_name . COLONCOLON
  248 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 248 (qualified_namespace_specifier)


State 582

  247 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 3

    namespace_name           go to state 710
    original_namespace_name  go to state 48


State 583

  249 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 249 (qualified_namespace_specifier)


State 584

  246 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 246 (namespace_alias_definition)


State 585

  242 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 242 (original_namespace_definition)


State 586

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 283
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 311
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 312
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 711
    template_argument          go to state 315
    throw_expression           go to state 316


State 587

  253 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 253 (using_declaration)


State 588

  257 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 257 (using_directive)


State 589

  256 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 712


State 590

  258 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 258 (using_directive)


State 591

  251 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 713


State 592

  252 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


State 593

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON . nested_name_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 714
    template_id              go to state 93


State 594

   89 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 715


State 595

   87 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 87 (delete_expression)


State 596

   76 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   78               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 716

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 717
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 608
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 597

   60 expression_list: expression_list . ',' assignment_expression
  461 expression_list_opt: expression_list .

    ','  shift, and go to state 649

    $default  reduce using rule 461 (expression_list_opt)


State 598

   42 postfix_expression: BOOL '(' expression_list_opt . ')'

    ')'  shift, and go to state 718


State 599

   41 postfix_expression: CHAR '(' expression_list_opt . ')'

    ')'  shift, and go to state 719


State 600

   56 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 720


State 601

   88 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 721
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 602

   39 postfix_expression: DOUBLE '(' expression_list_opt . ')'

    ')'  shift, and go to state 722


State 603

   53 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 723


State 604

   40 postfix_expression: INT '(' expression_list_opt . ')'

    ')'  shift, and go to state 724


State 605

   60 expression_list: expression_list . ',' assignment_expression
   79 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 725
    ','  shift, and go to state 649


State 606

   77 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 726
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 607

   75 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 727

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 728
    new_initializer_opt  go to state 729


State 608

   80 new_type_id: type_specifier_seq . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 730
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 468 (new_declarator_opt)]
    '&'       [reduce using rule 468 (new_declarator_opt)]
    $default  reduce using rule 468 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 731
    direct_new_declarator    go to state 732
    ptr_operator             go to state 733
    template_id              go to state 93
    new_declarator_opt       go to state 734


State 609

   55 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 735


State 610

   68 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 736


State 611

   54 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 737


State 612

   57 postfix_expression: TYPEID '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 738
    ','  shift, and go to state 615


State 613

   58 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 739


State 614

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


State 615

  140 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 740
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 616

   91 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 741
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 617

   49 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 742
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 618

   47 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   48                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 743
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 744
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 619

   50 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 50 (postfix_expression)


State 620

   38 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 745


State 621

   37 postfix_expression: postfix_expression '[' expression . ']'
  140 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 746
    ','  shift, and go to state 615


State 622

   45 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 747
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 623

   43 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   44                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 748
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 749
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 624

   46 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 46 (postfix_expression)


State 625

   93 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 93 (pm_expression)


State 626

   94 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 94 (pm_expression)


State 627

   93 pm_expression: pm_expression . DOTSTAR cast_expression
   94              | pm_expression . ARROWSTAR cast_expression
   96 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 451
    ARROWSTAR  shift, and go to state 452

    $default  reduce using rule 96 (multiplicative_expression)


State 628

   93 pm_expression: pm_expression . DOTSTAR cast_expression
   94              | pm_expression . ARROWSTAR cast_expression
   97 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 451
    ARROWSTAR  shift, and go to state 452

    $default  reduce using rule 97 (multiplicative_expression)


State 629

   93 pm_expression: pm_expression . DOTSTAR cast_expression
   94              | pm_expression . ARROWSTAR cast_expression
   98 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 451
    ARROWSTAR  shift, and go to state 452

    $default  reduce using rule 98 (multiplicative_expression)


State 630

   96 multiplicative_expression: multiplicative_expression . '*' pm_expression
   97                          | multiplicative_expression . '/' pm_expression
   98                          | multiplicative_expression . '%' pm_expression
  100 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 453
    '/'  shift, and go to state 454
    '%'  shift, and go to state 455

    $default  reduce using rule 100 (additive_expression)


State 631

   96 multiplicative_expression: multiplicative_expression . '*' pm_expression
   97                          | multiplicative_expression . '/' pm_expression
   98                          | multiplicative_expression . '%' pm_expression
  101 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 453
    '/'  shift, and go to state 454
    '%'  shift, and go to state 455

    $default  reduce using rule 101 (additive_expression)


State 632

  100 additive_expression: additive_expression . '+' multiplicative_expression
  101                    | additive_expression . '-' multiplicative_expression
  103 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 456
    '-'  shift, and go to state 457

    $default  reduce using rule 103 (shift_expression)


State 633

  100 additive_expression: additive_expression . '+' multiplicative_expression
  101                    | additive_expression . '-' multiplicative_expression
  104 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 456
    '-'  shift, and go to state 457

    $default  reduce using rule 104 (shift_expression)


State 634

  103 shift_expression: shift_expression . SL additive_expression
  104                 | shift_expression . SR additive_expression
  108 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 458
    SR  shift, and go to state 459

    $default  reduce using rule 108 (relational_expression)


State 635

  103 shift_expression: shift_expression . SL additive_expression
  104                 | shift_expression . SR additive_expression
  109 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 458
    SR  shift, and go to state 459

    $default  reduce using rule 109 (relational_expression)


State 636

  103 shift_expression: shift_expression . SL additive_expression
  104                 | shift_expression . SR additive_expression
  106 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 458
    SR  shift, and go to state 459

    $default  reduce using rule 106 (relational_expression)


State 637

  103 shift_expression: shift_expression . SL additive_expression
  104                 | shift_expression . SR additive_expression
  107 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 458
    SR  shift, and go to state 459

    $default  reduce using rule 107 (relational_expression)


State 638

  106 relational_expression: relational_expression . '<' shift_expression
  107                      | relational_expression . '>' shift_expression
  108                      | relational_expression . LTEQ shift_expression
  109                      | relational_expression . GTEQ shift_expression
  111 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 460
    GTEQ  shift, and go to state 461
    '<'   shift, and go to state 462
    '>'   shift, and go to state 463

    '>'       [reduce using rule 111 (equality_expression)]
    $default  reduce using rule 111 (equality_expression)


State 639

  106 relational_expression: relational_expression . '<' shift_expression
  107                      | relational_expression . '>' shift_expression
  108                      | relational_expression . LTEQ shift_expression
  109                      | relational_expression . GTEQ shift_expression
  112 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 460
    GTEQ  shift, and go to state 461
    '<'   shift, and go to state 462
    '>'   shift, and go to state 463

    '>'       [reduce using rule 112 (equality_expression)]
    $default  reduce using rule 112 (equality_expression)


State 640

  111 equality_expression: equality_expression . EQ relational_expression
  112                    | equality_expression . NOTEQ relational_expression
  114 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 464
    NOTEQ  shift, and go to state 465

    $default  reduce using rule 114 (and_expression)


State 641

  114 and_expression: and_expression . '&' equality_expression
  116 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 466

    $default  reduce using rule 116 (exclusive_or_expression)


State 642

  116 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  118 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 467

    $default  reduce using rule 118 (inclusive_or_expression)


State 643

  118 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  120 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 468

    $default  reduce using rule 120 (logical_and_expression)


State 644

  120 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  122 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 469

    $default  reduce using rule 122 (logical_or_expression)


State 645

  124 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  140 expression: expression . ',' assignment_expression

    ','  shift, and go to state 615
    ':'  shift, and go to state 750


State 646

  126 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 126 (assignment_expression)


State 647

  438 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 438 (template_argument_list)


State 648

  320 initializer: '(' expression_list ')' .

    $default  reduce using rule 320 (initializer)


State 649

   60 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 751
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 650

  323 initializer_clause: '{' '}' .

    $default  reduce using rule 323 (initializer_clause)


State 651

  324 initializer_list: initializer_clause .

    $default  reduce using rule 324 (initializer_list)


State 652

  322 initializer_clause: '{' initializer_list . COMMA_opt '}'
  325 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 752

    $default  reduce using rule 490 (COMMA_opt)

    COMMA_opt  go to state 753


State 653

  447 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 754


State 654

  445 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 445 (function_try_block)


State 655

  446 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 653

    $default  reduce using rule 500 (handler_seq_opt)

    handler_seq      go to state 755
    handler          go to state 655
    handler_seq_opt  go to state 756


State 656

  377 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 377 (mem_initializer_id)


State 657

  375 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 375 (mem_initializer_list)


State 658

  376 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 757


State 659

  167 jump_statement: BREAK ';' .

    $default  reduce using rule 167 (jump_statement)


State 660

  151 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 758


State 661

  168 jump_statement: CONTINUE ';' .

    $default  reduce using rule 168 (jump_statement)


State 662

  152 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 759
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 663

  163 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 760


State 664

  164 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FRIEND            shift, and go to state 20
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 470 (expression_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 517
    expression_statement       go to state 761
    for_init_statement         go to state 762
    simple_declaration         go to state 763
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 528
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_opt             go to state 530


State 665

  170 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 764


State 666

  157 selection_statement: IF '(' . condition ')' statement
  158                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 765
    condition                  go to state 766
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 767
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 667

  246 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 226


State 668

  169 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 768


State 669

  159 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 765
    condition                  go to state 769
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 767
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 670

  444 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 653

    handler_seq  go to state 770
    handler      go to state 655


State 671

  162 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 765
    condition                  go to state 771
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 767
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 672

  150 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 772
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 673

  156 statement_seq: statement_seq statement .

    $default  reduce using rule 156 (statement_seq)


State 674

  153 expression_statement: expression_opt ';' .

    $default  reduce using rule 153 (expression_statement)


State 675

  154 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 154 (compound_statement)


State 676

  453 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 773


State 677

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  270                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 676

    $default  reduce using rule 270 (direct_declarator)

    exception_specification  go to state 774


State 678

  271 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 271 (direct_declarator)


State 679

  349 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 349 (member_declarator)


State 680

  336 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 336 (member_declaration)


State 681

  350 pure_specifier: '=' '0' .

    $default  reduce using rule 350 (pure_specifier)


State 682

  351 constant_initializer: '=' constant_expression .

    $default  reduce using rule 351 (constant_initializer)


State 683

  346 member_declarator: declarator .
  347                  | declarator . pure_specifier
  348                  | declarator . constant_initializer

    '='  shift, and go to state 539

    $default  reduce using rule 346 (member_declarator)

    pure_specifier        go to state 540
    constant_initializer  go to state 541


State 684

  345 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 345 (member_declarator_list)


State 685

  335 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 335 (member_specification)


State 686

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier
   34                      | class_name . COLONCOLON
  356 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 356 (base_specifier)


State 687

  355 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 775
    template_name  go to state 51
    template_id    go to state 93


State 688

  361 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 776


State 689

  359 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  360               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 777

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 778


State 690

  362 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 779
    template_name  go to state 51
    template_id    go to state 93


State 691

  357 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 357 (base_specifier)


State 692

  354 base_specifier_list: base_specifier_list ',' . base_specifier

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 550
    PRIVATE         shift, and go to state 348
    PROTECTED       shift, and go to state 349
    PUBLIC          shift, and go to state 350
    VIRTUAL         shift, and go to state 551

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 552
    template_name            go to state 51
    nested_name_specifier    go to state 553
    base_specifier           go to state 780
    access_specifier         go to state 556
    template_id              go to state 93


State 693

  365 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 781


State 694

  363 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  364               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 782

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 783


State 695

  366 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 784
    template_name  go to state 51
    template_id    go to state 93


State 696

  430 type_parameter: CLASS identifier .
  431               | CLASS identifier . '=' type_id

    '='  shift, and go to state 785

    $default  reduce using rule 430 (type_parameter)


State 697

  434 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  435               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 558
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 559
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 560
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 561
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 786
    template_parameter         go to state 563
    type_parameter             go to state 564
    template_id                go to state 93


State 698

  432 type_parameter: TYPENAME identifier .
  433               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 787

    $default  reduce using rule 432 (type_parameter)


State 699

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 7
    ASM             shift, and go to state 8
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXPORT          shift, and go to state 17
    EXTERN          shift, and go to state 18
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    NAMESPACE       shift, and go to state 25
    OPERATOR        shift, and go to state 26
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 32
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    USING           shift, and go to state 37
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    TEMPLATE  [reduce using rule 498 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 788
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 700

  427 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 9
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 558
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    EXPLICIT        shift, and go to state 16
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 19
    FRIEND          shift, and go to state 20
    INLINE          shift, and go to state 21
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    MUTABLE         shift, and go to state 24
    REGISTER        shift, and go to state 27
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STATIC          shift, and go to state 30
    STRUCT          shift, and go to state 31
    TEMPLATE        shift, and go to state 559
    TYPEDEF         shift, and go to state 33
    TYPENAME        shift, and go to state 560
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VIRTUAL         shift, and go to state 38
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 561
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter         go to state 789
    type_parameter             go to state 564
    template_id                go to state 93


State 701

  275 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 275 (direct_declarator)


State 702

  274 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')' .

    $default  reduce using rule 274 (direct_declarator)


State 703

  302 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 302 (direct_abstract_declarator)


State 704

  311 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 311 (parameter_declaration)


State 705

  313 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 313 (parameter_declaration)


State 706

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 790


State 707

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 791


State 708

  234 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 234 (enumerator_list)


State 709

  236 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 236 (enumerator_definition)


State 710

  247 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 247 (qualified_namespace_specifier)


State 711

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  438 template_argument_list: template_argument_list . ',' template_argument

    '>'  shift, and go to state 792
    ','  shift, and go to state 488


State 712

  256 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 256 (using_directive)


State 713

  251 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


State 714

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


State 715

   89 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 284
    integer_literal          go to state 285
    character_literal        go to state 286
    floating_literal         go to state 287
    string_literal           go to state 288
    boolean_literal          go to state 289
    primary_expression       go to state 290
    id_expression            go to state 291
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 293
    unary_expression         go to state 294
    unary_operator           go to state 295
    new_expression           go to state 296
    delete_expression        go to state 297
    cast_expression          go to state 793
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 716

   78 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 794
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 717

   76 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 727

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 728
    new_initializer_opt  go to state 795


State 718

   42 postfix_expression: BOOL '(' expression_list_opt ')' .

    $default  reduce using rule 42 (postfix_expression)


State 719

   41 postfix_expression: CHAR '(' expression_list_opt ')' .

    $default  reduce using rule 41 (postfix_expression)


State 720

   56 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 796


State 721

   88 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 88 (delete_expression)


State 722

   39 postfix_expression: DOUBLE '(' expression_list_opt ')' .

    $default  reduce using rule 39 (postfix_expression)


State 723

   53 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 797


State 724

   40 postfix_expression: INT '(' expression_list_opt ')' .

    $default  reduce using rule 40 (postfix_expression)


State 725

   79 new_placement: '(' expression_list ')' .

    $default  reduce using rule 79 (new_placement)


State 726

   77 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 798


State 727

   85 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 460 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    expression_list            go to state 597
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 492
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_list_opt        go to state 799


State 728

  467 new_initializer_opt: new_initializer .

    $default  reduce using rule 467 (new_initializer_opt)


State 729

   75 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 75 (new_expression)


State 730

   83 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 800
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 731

  469 new_declarator_opt: new_declarator .

    $default  reduce using rule 469 (new_declarator_opt)


State 732

   82 new_declarator: direct_new_declarator .
   84 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 801

    $default  reduce using rule 82 (new_declarator)


State 733

   81 new_declarator: ptr_operator . new_declarator_opt

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 730
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '*'       [reduce using rule 468 (new_declarator_opt)]
    '&'       [reduce using rule 468 (new_declarator_opt)]
    $default  reduce using rule 468 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 731
    direct_new_declarator    go to state 732
    ptr_operator             go to state 733
    template_id              go to state 93
    new_declarator_opt       go to state 802


State 734

   80 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 80 (new_type_id)


State 735

   55 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 803


State 736

   68 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 68 (unary_expression)


State 737

   54 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 804


State 738

   57 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 57 (postfix_expression)


State 739

   58 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 58 (postfix_expression)


State 740

  140 expression: expression ',' assignment_expression .

    $default  reduce using rule 140 (expression)


State 741

   91 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 91 (cast_expression)


State 742

   49 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 49 (postfix_expression)


State 743

   47 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 805
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 744

   48 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 48 (postfix_expression)


State 745

   38 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 38 (postfix_expression)


State 746

   37 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 37 (postfix_expression)


State 747

   45 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 45 (postfix_expression)


State 748

   43 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6
    OPERATOR        shift, and go to state 26
    '~'             shift, and go to state 43

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 806
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 749

   44 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 44 (postfix_expression)


State 750

  124 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 807
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 751

   60 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 60 (expression_list)


State 752

  325 initializer_list: initializer_list ',' . initializer_clause
  491 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 493

    $default  reduce using rule 491 (COMMA_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 494
    initializer_clause         go to state 808
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 753

  322 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 809


State 754

  447 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    ELLIPSIS        shift, and go to state 810
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 811
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    exception_declaration      go to state 812


State 755

  501 handler_seq_opt: handler_seq .

    $default  reduce using rule 501 (handler_seq_opt)


State 756

  446 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 446 (handler_seq)


State 757

  376 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 376 (mem_initializer)


State 758

  151 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 813
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 759

  152 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 152 (labeled_statement)


State 760

  163 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 814


State 761

  165 for_init_statement: expression_statement .

    $default  reduce using rule 165 (for_init_statement)


State 762

  164 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 260
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 474 (condition_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 292
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 765
    condition                  go to state 815
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 767
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    condition_opt              go to state 816


State 763

  166 for_init_statement: simple_declaration .

    $default  reduce using rule 166 (for_init_statement)


State 764

  170 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 170 (jump_statement)


State 765

  140 expression: expression . ',' assignment_expression
  160 condition: expression .

    ','  shift, and go to state 615

    $default  reduce using rule 160 (condition)


State 766

  157 selection_statement: IF '(' condition . ')' statement
  158                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 817


State 767

  161 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 42
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 818
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 768

  169 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 169 (jump_statement)


State 769

  159 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 819


State 770

  444 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 444 (try_block)


State 771

  162 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 820


State 772

  150 labeled_statement: identifier ':' statement .

    $default  reduce using rule 150 (labeled_statement)


State 773

  453 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    $default  reduce using rule 504 (type_id_list_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 821
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_id_list               go to state 822
    type_id_list_opt           go to state 823


State 774

  269 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 269 (direct_declarator)


State 775

  355 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 355 (base_specifier)


State 776

  361 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 824
    template_name  go to state 51
    template_id    go to state 93


State 777

  359 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 825


State 778

  360 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 826
    template_name  go to state 51
    template_id    go to state 93


State 779

  362 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


State 780

  354 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 354 (base_specifier_list)


State 781

  365 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 827
    template_name  go to state 51
    template_id    go to state 93


State 782

  363 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    TEMPLATE_NAME   shift, and go to state 6

    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 828


State 783

  364 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 829
    template_name  go to state 51
    template_id    go to state 93


State 784

  366 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 366 (base_specifier)


State 785

  431 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 830
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 786

  427 template_parameter_list: template_parameter_list . ',' template_parameter
  434 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  435               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    '>'  shift, and go to state 831
    ','  shift, and go to state 700


State 787

  433 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 832
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 788

  425 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 425 (template_declaration)


State 789

  427 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 427 (template_parameter_list)


State 790

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  300                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 13
    THROW     shift, and go to state 676
    VOLATILE  shift, and go to state 40

    $default  reduce using rule 300 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 833
    cv_qualifier             go to state 174
    exception_specification  go to state 834


State 791

  301 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 301 (direct_abstract_declarator)


State 792

  231 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 231 (elaborated_type_specifier)


State 793

   89 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 89 (delete_expression)


State 794

   78 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 835


State 795

   76 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 76 (new_expression)


State 796

   56 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 836
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 797

   53 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 837
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 798

   77 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 727

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 728
    new_initializer_opt  go to state 838


State 799

   85 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 839


State 800

   83 direct_new_declarator: '[' expression . ']'
  140 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 840
    ','  shift, and go to state 615


State 801

   84 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 344
    conditional_expression     go to state 345
    constant_expression        go to state 841
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 802

   81 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 81 (new_declarator)


State 803

   55 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 842
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 804

   54 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 843
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 805

   47 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 47 (postfix_expression)


State 806

   43 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 43 (postfix_expression)


State 807

  124 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 124 (conditional_expression)


State 808

  325 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 325 (initializer_list)


State 809

  322 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 322 (initializer_clause)


State 810

  451 exception_declaration: ELLIPSIS .

    $default  reduce using rule 451 (exception_declaration)


State 811

  448 exception_declaration: type_specifier_seq . declarator
  449                      | type_specifier_seq . abstract_declarator
  450                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 4
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 26
    '('             shift, and go to state 375
    '~'             shift, and go to state 43
    '*'             shift, and go to state 44
    '&'             shift, and go to state 45

    '('       [reduce using rule 486 (direct_abstract_declarator_opt)]
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 450 (exception_declaration)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 844
    direct_declarator               go to state 82
    ptr_operator                    go to state 377
    declarator_id                   go to state 85
    abstract_declarator             go to state 845
    direct_abstract_declarator      go to state 379
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 381


State 812

  447 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 846


State 813

  151 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 151 (labeled_statement)


State 814

  163 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 847
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 815

  475 condition_opt: condition .

    $default  reduce using rule 475 (condition_opt)


State 816

  164 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 848


State 817

  157 selection_statement: IF '(' condition ')' . statement
  158                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 849
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 818

  161 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 850


State 819

  159 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 851
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 820

  162 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 852
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 821

  454 type_id_list: type_id .

    $default  reduce using rule 454 (type_id_list)


State 822

  455 type_id_list: type_id_list . ',' type_id
  505 type_id_list_opt: type_id_list .

    ','  shift, and go to state 853

    $default  reduce using rule 505 (type_id_list_opt)


State 823

  453 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 854


State 824

  361 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


State 825

  359 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 855
    template_name  go to state 51
    template_id    go to state 93


State 826

  360 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


State 827

  365 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 365 (base_specifier)


State 828

  363 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 6

    class_name     go to state 856
    template_name  go to state 51
    template_id    go to state 93


State 829

  364 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 364 (base_specifier)


State 830

  431 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 431 (type_parameter)


State 831

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  435               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 857


State 832

  433 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 433 (type_parameter)


State 833

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 676

    $default  reduce using rule 298 (direct_abstract_declarator)

    exception_specification  go to state 858


State 834

  299 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 299 (direct_abstract_declarator)


State 835

   78 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 727

    $default  reduce using rule 466 (new_initializer_opt)

    new_initializer      go to state 728
    new_initializer_opt  go to state 859


State 836

   56 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 860
    ','  shift, and go to state 615


State 837

   53 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 861
    ','  shift, and go to state 615


State 838

   77 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 77 (new_expression)


State 839

   85 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 85 (new_initializer)


State 840

   83 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 83 (direct_new_declarator)


State 841

   84 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 862


State 842

   55 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 863
    ','  shift, and go to state 615


State 843

   54 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  140 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 864
    ','  shift, and go to state 615


State 844

  448 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 448 (exception_declaration)


State 845

  449 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 449 (exception_declaration)


State 846

  447 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 335

    compound_statement  go to state 865


State 847

  140 expression: expression . ',' assignment_expression
  163 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 866
    ','  shift, and go to state 615


State 848

  164 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    $default  reduce using rule 470 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 439
    expression                 go to state 517
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316
    expression_opt             go to state 867


State 849

  157 selection_statement: IF '(' condition ')' statement .
  158                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 868

    ELSE      [reduce using rule 157 (selection_statement)]
    $default  reduce using rule 157 (selection_statement)


State 850

  161 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 339
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    BOOL              shift, and go to state 340
    CHAR              shift, and go to state 341
    CONST_CAST        shift, and go to state 262
    DELETE            shift, and go to state 263
    DOUBLE            shift, and go to state 342
    DYNAMIC_CAST      shift, and go to state 265
    FALSE             shift, and go to state 266
    INT               shift, and go to state 343
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REINTERPRET_CAST  shift, and go to state 269
    SIZEOF            shift, and go to state 270
    STATIC_CAST       shift, and go to state 271
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TYPEID            shift, and go to state 275
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 284
    integer_literal            go to state 285
    character_literal          go to state 286
    floating_literal           go to state 287
    string_literal             go to state 288
    boolean_literal            go to state 289
    primary_expression         go to state 290
    id_expression              go to state 291
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 293
    unary_expression           go to state 294
    unary_operator             go to state 295
    new_expression             go to state 296
    delete_expression          go to state 297
    cast_expression            go to state 298
    pm_expression              go to state 299
    multiplicative_expression  go to state 300
    additive_expression        go to state 301
    shift_expression           go to state 302
    relational_expression      go to state 303
    equality_expression        go to state 304
    and_expression             go to state 305
    exclusive_or_expression    go to state 306
    inclusive_or_expression    go to state 307
    logical_and_expression     go to state 308
    logical_or_expression      go to state 309
    conditional_expression     go to state 310
    assignment_expression      go to state 869
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 316


State 851

  159 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 159 (selection_statement)


State 852

  162 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 162 (iteration_statement)


State 853

  455 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    NAMESPACE_NAME  shift, and go to state 3
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 5
    TEMPLATE_NAME   shift, and go to state 6
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 10
    CHAR            shift, and go to state 11
    CLASS           shift, and go to state 12
    CONST           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    ENUM            shift, and go to state 15
    FLOAT           shift, and go to state 19
    INT             shift, and go to state 22
    LONG            shift, and go to state 23
    SHORT           shift, and go to state 28
    SIGNED          shift, and go to state 29
    STRUCT          shift, and go to state 31
    TYPENAME        shift, and go to state 34
    UNION           shift, and go to state 35
    UNSIGNED        shift, and go to state 36
    VOID            shift, and go to state 39
    VOLATILE        shift, and go to state 40
    WCHAR_T         shift, and go to state 41

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 870
    type_specifier_seq         go to state 313
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 854

  453 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 453 (exception_specification)


State 855

  359 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


State 856

  363 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 363 (base_specifier)


State 857

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  435               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 871


State 858

  297 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 297 (direct_abstract_declarator)


State 859

   78 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 78 (new_expression)


State 860

   56 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 56 (postfix_expression)


State 861

   53 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


State 862

   84 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 84 (direct_new_declarator)


State 863

   55 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 55 (postfix_expression)


State 864

   54 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 54 (postfix_expression)


State 865

  447 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 447 (handler)


State 866

  163 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 872


State 867

  164 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 873


State 868

  158 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 874
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 869

  161 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 161 (condition)


State 870

  455 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 455 (type_id_list)


State 871

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  435               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 875

    $default  reduce using rule 434 (type_parameter)


State 872

  163 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 163 (iteration_statement)


State 873

  164 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 254
    FLOATING          shift, and go to state 255
    CHARACTER         shift, and go to state 256
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    NAMESPACE_NAME    shift, and go to state 3
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 5
    TEMPLATE_NAME     shift, and go to state 6
    COLONCOLON        shift, and go to state 257
    PLUSPLUS          shift, and go to state 258
    MINUSMINUS        shift, and go to state 259
    ASM               shift, and go to state 8
    AUTO              shift, and go to state 9
    BOOL              shift, and go to state 260
    BREAK             shift, and go to state 503
    CASE              shift, and go to state 504
    CHAR              shift, and go to state 261
    CLASS             shift, and go to state 12
    CONST             shift, and go to state 13
    CONST_CAST        shift, and go to state 262
    CONTINUE          shift, and go to state 505
    DEFAULT           shift, and go to state 506
    DELETE            shift, and go to state 263
    DO                shift, and go to state 507
    DOUBLE            shift, and go to state 264
    DYNAMIC_CAST      shift, and go to state 265
    ENUM              shift, and go to state 15
    EXPLICIT          shift, and go to state 16
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 266
    FLOAT             shift, and go to state 19
    FOR               shift, and go to state 508
    FRIEND            shift, and go to state 20
    GOTO              shift, and go to state 509
    IF                shift, and go to state 510
    INLINE            shift, and go to state 21
    INT               shift, and go to state 267
    LONG              shift, and go to state 23
    MUTABLE           shift, and go to state 24
    NAMESPACE         shift, and go to state 511
    NEW               shift, and go to state 268
    OPERATOR          shift, and go to state 26
    REGISTER          shift, and go to state 27
    REINTERPRET_CAST  shift, and go to state 269
    RETURN            shift, and go to state 512
    SHORT             shift, and go to state 28
    SIGNED            shift, and go to state 29
    SIZEOF            shift, and go to state 270
    STATIC            shift, and go to state 30
    STATIC_CAST       shift, and go to state 271
    STRUCT            shift, and go to state 31
    SWITCH            shift, and go to state 513
    THIS              shift, and go to state 272
    THROW             shift, and go to state 273
    TRUE              shift, and go to state 274
    TRY               shift, and go to state 514
    TYPEDEF           shift, and go to state 33
    TYPEID            shift, and go to state 275
    TYPENAME          shift, and go to state 34
    UNION             shift, and go to state 35
    UNSIGNED          shift, and go to state 36
    USING             shift, and go to state 37
    VIRTUAL           shift, and go to state 38
    VOID              shift, and go to state 39
    VOLATILE          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    WHILE             shift, and go to state 515
    '('               shift, and go to state 276
    '~'               shift, and go to state 277
    '*'               shift, and go to state 278
    '&'               shift, and go to state 279
    '+'               shift, and go to state 280
    '-'               shift, and go to state 281
    '!'               shift, and go to state 282
    '{'               shift, and go to state 335

    $default  reduce using rule 470 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 516
    literal                     go to state 284
    integer_literal             go to state 285
    character_literal           go to state 286
    floating_literal            go to state 287
    string_literal              go to state 288
    boolean_literal             go to state 289
    primary_expression          go to state 290
    id_expression               go to state 291
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 292
    postfix_expression          go to state 293
    unary_expression            go to state 294
    unary_operator              go to state 295
    new_expression              go to state 296
    delete_expression           go to state 297
    cast_expression             go to state 298
    pm_expression               go to state 299
    multiplicative_expression   go to state 300
    additive_expression         go to state 301
    shift_expression            go to state 302
    relational_expression       go to state 303
    equality_expression         go to state 304
    and_expression              go to state 305
    exclusive_or_expression     go to state 306
    inclusive_or_expression     go to state 307
    logical_and_expression      go to state 308
    logical_or_expression       go to state 309
    conditional_expression      go to state 310
    assignment_expression       go to state 439
    expression                  go to state 517
    statement                   go to state 876
    labeled_statement           go to state 519
    expression_statement        go to state 520
    compound_statement          go to state 521
    selection_statement         go to state 523
    iteration_statement         go to state 524
    jump_statement              go to state 525
    declaration_statement       go to state 526
    block_declaration           go to state 527
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 528
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 529
    throw_expression            go to state 316
    expression_opt              go to state 530


State 874

  158 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 158 (selection_statement)


State 875

  435 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 6

    template_name  go to state 877


State 876

  164 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 164 (iteration_statement)


State 877

  435 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 435 (type_parameter)
