Terminals unused in grammar

   LIGNORE


State 66 conflicts: 1 shift/reduce
State 264 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: package imports xdcl_list

    2 package: %empty
    3        | LPACKAGE sym ';'

    4 imports: %empty
    5        | imports import ';'

    6 import: LIMPORT import_stmt
    7       | LIMPORT '(' import_stmt_list osemi ')'
    8       | LIMPORT '(' ')'

    9 import_stmt: import_here import_package import_there

   10 import_stmt_list: import_stmt
   11                 | import_stmt_list ';' import_stmt

   12 import_here: LLITERAL
   13            | sym LLITERAL
   14            | '.' LLITERAL

   15 import_package: LPACKAGE LNAME import_safety ';'

   16 import_safety: %empty
   17              | LNAME

   18 import_there: hidden_import_list '$' '$'

   19 xdcl: %empty
   20     | common_dcl
   21     | xfndcl
   22     | non_dcl_stmt
   23     | error

   24 common_dcl: LVAR vardcl
   25           | LVAR '(' vardcl_list osemi ')'
   26           | LVAR '(' ')'
   27           | lconst constdcl
   28           | lconst '(' constdcl osemi ')'
   29           | lconst '(' constdcl ';' constdcl_list osemi ')'
   30           | lconst '(' ')'
   31           | LTYPE typedcl
   32           | LTYPE '(' typedcl_list osemi ')'
   33           | LTYPE '(' ')'

   34 lconst: LCONST

   35 vardcl: dcl_name_list ntype
   36       | dcl_name_list ntype '=' expr_list
   37       | dcl_name_list '=' expr_list

   38 constdcl: dcl_name_list ntype '=' expr_list
   39         | dcl_name_list '=' expr_list

   40 constdcl1: constdcl
   41          | dcl_name_list ntype
   42          | dcl_name_list

   43 typedclname: sym

   44 typedcl: typedclname ntype

   45 simple_stmt: expr
   46            | expr LASOP expr
   47            | expr_list '=' expr_list
   48            | expr_list LCOLAS expr_list
   49            | expr LINC
   50            | expr LDEC

   51 case: LCASE expr_or_type_list ':'
   52     | LCASE expr_or_type_list '=' expr ':'
   53     | LCASE expr_or_type_list LCOLAS expr ':'
   54     | LDEFAULT ':'

   55 compound_stmt: '{' stmt_list '}'

   56 $@1: %empty

   57 caseblock: case $@1 stmt_list

   58 caseblock_list: %empty
   59               | caseblock_list caseblock

   60 loop_body: '{' stmt_list '}'

   61 range_stmt: expr_list '=' LRANGE expr
   62           | expr_list LCOLAS LRANGE expr

   63 for_header: osimple_stmt ';' osimple_stmt ';' osimple_stmt
   64           | osimple_stmt
   65           | range_stmt

   66 for_body: for_header loop_body

   67 for_stmt: LFOR for_body

   68 if_header: osimple_stmt
   69          | osimple_stmt ';' osimple_stmt

   70 if_stmt: LIF if_header loop_body elseif_list else

   71 elseif: LELSE LIF if_header loop_body

   72 elseif_list: %empty
   73            | elseif_list elseif

   74 else: %empty
   75     | LELSE compound_stmt

   76 switch_stmt: LSWITCH if_header '{' caseblock_list '}'

   77 select_stmt: LSELECT '{' caseblock_list '}'

   78 expr: uexpr
   79     | expr LOROR expr
   80     | expr LANDAND expr
   81     | expr LEQ expr
   82     | expr LNE expr
   83     | expr LLT expr
   84     | expr LLE expr
   85     | expr LGE expr
   86     | expr LGT expr
   87     | expr '+' expr
   88     | expr '-' expr
   89     | expr '|' expr
   90     | expr '^' expr
   91     | expr '*' expr
   92     | expr '/' expr
   93     | expr '%' expr
   94     | expr '&' expr
   95     | expr LANDNOT expr
   96     | expr LLSH expr
   97     | expr LRSH expr
   98     | expr LCOMM expr

   99 uexpr: pexpr
  100      | '*' uexpr
  101      | '&' uexpr
  102      | '+' uexpr
  103      | '-' uexpr
  104      | '!' uexpr
  105      | '~' uexpr
  106      | '^' uexpr
  107      | LCOMM uexpr

  108 pseudocall: pexpr '(' ')'
  109           | pexpr '(' expr_or_type_list ocomma ')'
  110           | pexpr '(' expr_or_type_list LDDD ocomma ')'

  111 pexpr_no_paren: LLITERAL
  112               | name
  113               | pexpr '.' sym
  114               | pexpr '.' '(' expr_or_type ')'
  115               | pexpr '.' '(' LTYPE ')'
  116               | pexpr '[' expr ']'
  117               | pexpr '[' oexpr ':' oexpr ']'
  118               | pexpr '[' oexpr ':' oexpr ':' oexpr ']'
  119               | pseudocall
  120               | convtype '(' expr ocomma ')'
  121               | comptype lbrace start_complit braced_keyval_list '}'
  122               | pexpr_no_paren '{' start_complit braced_keyval_list '}'
  123               | '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'
  124               | fnliteral

  125 start_complit: %empty

  126 keyval: expr ':' complitexpr

  127 bare_complitexpr: expr
  128                 | '{' start_complit braced_keyval_list '}'

  129 complitexpr: expr
  130            | '{' start_complit braced_keyval_list '}'

  131 pexpr: pexpr_no_paren
  132      | '(' expr_or_type ')'

  133 expr_or_type: expr
  134             | non_expr_type

  135 name_or_type: ntype

  136 lbrace: '{'

  137 new_name: sym

  138 dcl_name: sym

  139 onew_name: %empty
  140          | new_name

  141 sym: LNAME
  142    | hidden_importsym
  143    | '?'

  144 hidden_importsym: '@' LLITERAL '.' LNAME
  145                 | '@' LLITERAL '.' '?'

  146 name: sym

  147 labelname: new_name

  148 dotdotdot: LDDD
  149          | LDDD ntype

  150 ntype: recvchantype
  151      | fntype
  152      | othertype
  153      | ptrtype
  154      | dotname
  155      | '(' ntype ')'

  156 non_expr_type: recvchantype
  157              | fntype
  158              | othertype
  159              | '*' non_expr_type

  160 non_recvchantype: fntype
  161                 | othertype
  162                 | ptrtype
  163                 | dotname
  164                 | '(' ntype ')'

  165 convtype: fntype
  166         | othertype

  167 comptype: othertype

  168 fnret_type: recvchantype
  169           | fntype
  170           | othertype
  171           | ptrtype
  172           | dotname

  173 dotname: name
  174        | name '.' sym

  175 othertype: '[' oexpr ']' ntype
  176          | '[' LDDD ']' ntype
  177          | LCHAN non_recvchantype
  178          | LCHAN LCOMM ntype
  179          | LMAP '[' ntype ']' ntype
  180          | structtype
  181          | interfacetype

  182 ptrtype: '*' ntype

  183 recvchantype: LCOMM LCHAN ntype

  184 structtype: LSTRUCT lbrace structdcl_list osemi '}'
  185           | LSTRUCT lbrace '}'

  186 interfacetype: LINTERFACE lbrace interfacedcl_list osemi '}'
  187              | LINTERFACE lbrace '}'

  188 xfndcl: LFUNC fndcl fnbody

  189 fndcl: sym '(' oarg_type_list_ocomma ')' fnres
  190      | '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres

  191 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres
  192             | '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres

  193 fntype: LFUNC '(' oarg_type_list_ocomma ')' fnres

  194 fnbody: %empty
  195       | '{' stmt_list '}'

  196 fnres: %empty
  197      | fnret_type
  198      | '(' oarg_type_list_ocomma ')'

  199 fnlitdcl: fntype

  200 fnliteral: fnlitdcl lbrace stmt_list '}'
  201          | fnlitdcl error

  202 xdcl_list: %empty
  203          | xdcl_list xdcl ';'

  204 vardcl_list: vardcl
  205            | vardcl_list ';' vardcl

  206 constdcl_list: constdcl1
  207              | constdcl_list ';' constdcl1

  208 typedcl_list: typedcl
  209             | typedcl_list ';' typedcl

  210 structdcl_list: structdcl
  211               | structdcl_list ';' structdcl

  212 interfacedcl_list: interfacedcl
  213                  | interfacedcl_list ';' interfacedcl

  214 structdcl: new_name_list ntype oliteral
  215          | embed oliteral
  216          | '(' embed ')' oliteral
  217          | '*' embed oliteral
  218          | '(' '*' embed ')' oliteral
  219          | '*' '(' embed ')' oliteral

  220 packname: LNAME
  221         | LNAME '.' sym

  222 embed: packname

  223 interfacedcl: new_name indcl
  224             | packname
  225             | '(' packname ')'

  226 indcl: '(' oarg_type_list_ocomma ')' fnres

  227 arg_type: name_or_type
  228         | sym name_or_type
  229         | sym dotdotdot
  230         | dotdotdot

  231 arg_type_list: arg_type
  232              | arg_type_list ',' arg_type

  233 oarg_type_list_ocomma: %empty
  234                      | arg_type_list ocomma

  235 stmt: %empty
  236     | compound_stmt
  237     | common_dcl
  238     | non_dcl_stmt
  239     | error

  240 non_dcl_stmt: simple_stmt
  241             | for_stmt
  242             | switch_stmt
  243             | select_stmt
  244             | if_stmt
  245             | labelname ':' stmt
  246             | LFALL
  247             | LBREAK onew_name
  248             | LCONTINUE onew_name
  249             | LGO pseudocall
  250             | LDEFER pseudocall
  251             | LGOTO new_name
  252             | LRETURN oexpr_list

  253 stmt_list: stmt
  254          | stmt_list ';' stmt

  255 new_name_list: new_name
  256              | new_name_list ',' new_name

  257 dcl_name_list: dcl_name
  258              | dcl_name_list ',' dcl_name

  259 expr_list: expr
  260          | expr_list ',' expr

  261 expr_or_type_list: expr_or_type
  262                  | expr_or_type_list ',' expr_or_type

  263 keyval_list: keyval
  264            | bare_complitexpr
  265            | keyval_list ',' keyval
  266            | keyval_list ',' bare_complitexpr

  267 braced_keyval_list: %empty
  268                   | keyval_list ocomma

  269 osemi: %empty
  270      | ';'

  271 ocomma: %empty
  272       | ','

  273 oexpr: %empty
  274      | expr

  275 oexpr_list: %empty
  276           | expr_list

  277 osimple_stmt: %empty
  278             | simple_stmt

  279 ohidden_funarg_list: %empty
  280                    | hidden_funarg_list

  281 ohidden_structdcl_list: %empty
  282                       | hidden_structdcl_list

  283 ohidden_interfacedcl_list: %empty
  284                          | hidden_interfacedcl_list

  285 oliteral: %empty
  286         | LLITERAL

  287 hidden_import: LIMPORT LNAME LLITERAL ';'
  288              | LVAR hidden_pkg_importsym hidden_type ';'
  289              | LCONST hidden_pkg_importsym '=' hidden_constant ';'
  290              | LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'
  291              | LTYPE hidden_pkgtype hidden_type ';'
  292              | LFUNC hidden_fndcl fnbody ';'

  293 hidden_pkg_importsym: hidden_importsym

  294 hidden_pkgtype: hidden_pkg_importsym

  295 hidden_type: hidden_type_misc
  296            | hidden_type_recv_chan
  297            | hidden_type_func

  298 hidden_type_non_recv_chan: hidden_type_misc
  299                          | hidden_type_func

  300 hidden_type_misc: hidden_importsym
  301                 | LNAME
  302                 | '[' ']' hidden_type
  303                 | '[' LLITERAL ']' hidden_type
  304                 | LMAP '[' hidden_type ']' hidden_type
  305                 | LSTRUCT '{' ohidden_structdcl_list '}'
  306                 | LINTERFACE '{' ohidden_interfacedcl_list '}'
  307                 | '*' hidden_type
  308                 | LCHAN hidden_type_non_recv_chan
  309                 | LCHAN '(' hidden_type_recv_chan ')'
  310                 | LCHAN LCOMM hidden_type

  311 hidden_type_recv_chan: LCOMM LCHAN hidden_type

  312 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' ohidden_funres

  313 hidden_funarg: sym hidden_type oliteral
  314              | sym LDDD hidden_type oliteral

  315 hidden_structdcl: sym hidden_type oliteral

  316 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' ohidden_funres
  317                    | hidden_type

  318 ohidden_funres: %empty
  319               | hidden_funres

  320 hidden_funres: '(' ohidden_funarg_list ')'
  321              | hidden_type

  322 hidden_literal: LLITERAL
  323               | '-' LLITERAL
  324               | sym

  325 hidden_constant: hidden_literal
  326                | '(' hidden_literal '+' hidden_literal ')'

  327 hidden_import_list: %empty
  328                   | hidden_import_list hidden_import

  329 hidden_funarg_list: hidden_funarg
  330                   | hidden_funarg_list ',' hidden_funarg

  331 hidden_structdcl_list: hidden_structdcl
  332                      | hidden_structdcl_list ';' hidden_structdcl

  333 hidden_interfacedcl_list: hidden_interfacedcl
  334                         | hidden_interfacedcl_list ';' hidden_interfacedcl


Terminals, with rules where they appear

$end (0) 0
'!' (33) 104
'$' (36) 18
'%' (37) 93
'&' (38) 94 101
'(' (40) 7 8 25 26 28 29 30 32 33 108 109 110 114 115 120 123 132 155
    164 189 190 191 192 193 198 216 218 219 225 226 309 312 316 320
    326
')' (41) 7 8 25 26 28 29 30 32 33 108 109 110 114 115 120 123 132 155
    164 189 190 191 192 193 198 216 218 219 225 226 309 312 316 320
    326
'*' (42) 91 100 159 182 217 218 219 307
'+' (43) 87 102 326
',' (44) 232 256 258 260 262 265 266 272 330
'-' (45) 88 103 323
'.' (46) 14 113 114 115 144 145 174 221
'/' (47) 92
':' (58) 51 52 53 54 117 118 126 245
';' (59) 3 5 11 15 29 63 69 203 205 207 209 211 213 254 270 287 288
    289 290 291 292 332 334
'=' (61) 36 37 38 39 47 52 61 289 290
'?' (63) 143 145
'@' (64) 144 145
'[' (91) 116 117 118 175 176 179 302 303 304
']' (93) 116 117 118 175 176 179 302 303 304
'^' (94) 90 106
'{' (123) 55 60 76 77 122 123 128 130 136 195 305 306
'|' (124) 89
'}' (125) 55 60 76 77 121 122 123 128 130 184 185 186 187 195 200 305
    306
'~' (126) 105
error (256) 23 201 239
LLITERAL (258) 12 13 14 111 144 145 286 287 303 322 323
LASOP (259) 46
LCOLAS (260) 48 53 62
LBREAK (261) 247
LCASE (262) 51 52 53
LCHAN (263) 177 178 183 308 309 310 311
LCONST (264) 34 289 290
LCONTINUE (265) 248
LDDD (266) 110 148 149 176 314
LDEFAULT (267) 54
LDEFER (268) 250
LELSE (269) 71 75
LFALL (270) 246
LFOR (271) 67
LFUNC (272) 188 193 292 312
LGO (273) 249
LGOTO (274) 251
LIF (275) 70 71
LIMPORT (276) 6 7 8 287
LINTERFACE (277) 186 187 306
LMAP (278) 179 304
LNAME (279) 15 17 141 144 220 221 287 301
LPACKAGE (280) 3 15
LRANGE (281) 61 62
LRETURN (282) 252
LSELECT (283) 77
LSTRUCT (284) 184 185 305
LSWITCH (285) 76
LTYPE (286) 31 32 33 115 291
LVAR (287) 24 25 26 288
LANDAND (288) 80
LANDNOT (289) 95
LCOMM (290) 98 107 178 183 310 311
LDEC (291) 50
LEQ (292) 81
LGE (293) 85
LGT (294) 86
LIGNORE (295)
LINC (296) 49
LLE (297) 84
LLSH (298) 96
LLT (299) 83
LNE (300) 82
LOROR (301) 79
LRSH (302) 97
NotPackage (303)
NotParen (304)
PreferToRightParen (305)


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
file (76)
    on left: 1, on right: 0
package (77)
    on left: 2 3, on right: 1
imports (78)
    on left: 4 5, on right: 1 5
import (79)
    on left: 6 7 8, on right: 5
import_stmt (80)
    on left: 9, on right: 6 10 11
import_stmt_list (81)
    on left: 10 11, on right: 7 11
import_here (82)
    on left: 12 13 14, on right: 9
import_package (83)
    on left: 15, on right: 9
import_safety (84)
    on left: 16 17, on right: 15
import_there (85)
    on left: 18, on right: 9
xdcl (86)
    on left: 19 20 21 22 23, on right: 203
common_dcl (87)
    on left: 24 25 26 27 28 29 30 31 32 33, on right: 20 237
lconst (88)
    on left: 34, on right: 27 28 29 30
vardcl (89)
    on left: 35 36 37, on right: 24 204 205
constdcl (90)
    on left: 38 39, on right: 27 28 29 40
constdcl1 (91)
    on left: 40 41 42, on right: 206 207
typedclname (92)
    on left: 43, on right: 44
typedcl (93)
    on left: 44, on right: 31 208 209
simple_stmt (94)
    on left: 45 46 47 48 49 50, on right: 240 278
case (95)
    on left: 51 52 53 54, on right: 57
compound_stmt (96)
    on left: 55, on right: 75 236
caseblock (97)
    on left: 57, on right: 59
$@1 (98)
    on left: 56, on right: 57
caseblock_list (99)
    on left: 58 59, on right: 59 76 77
loop_body (100)
    on left: 60, on right: 66 70 71
range_stmt (101)
    on left: 61 62, on right: 65
for_header (102)
    on left: 63 64 65, on right: 66
for_body (103)
    on left: 66, on right: 67
for_stmt (104)
    on left: 67, on right: 241
if_header (105)
    on left: 68 69, on right: 70 71 76
if_stmt (106)
    on left: 70, on right: 244
elseif (107)
    on left: 71, on right: 73
elseif_list (108)
    on left: 72 73, on right: 70 73
else (109)
    on left: 74 75, on right: 70
switch_stmt (110)
    on left: 76, on right: 242
select_stmt (111)
    on left: 77, on right: 243
expr (112)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98, on right: 45 46 49 50 52 53 61 62 79 80 81 82 83 84 85
    86 87 88 89 90 91 92 93 94 95 96 97 98 116 120 126 127 129 133
    259 260 274
uexpr (113)
    on left: 99 100 101 102 103 104 105 106 107, on right: 78 100 101
    102 103 104 105 106 107
pseudocall (114)
    on left: 108 109 110, on right: 119 249 250
pexpr_no_paren (115)
    on left: 111 112 113 114 115 116 117 118 119 120 121 122 123 124,
    on right: 122 131
start_complit (116)
    on left: 125, on right: 121 122 123 128 130
keyval (117)
    on left: 126, on right: 263 265
bare_complitexpr (118)
    on left: 127 128, on right: 264 266
complitexpr (119)
    on left: 129 130, on right: 126
pexpr (120)
    on left: 131 132, on right: 99 108 109 110 113 114 115 116 117
    118
expr_or_type (121)
    on left: 133 134, on right: 114 123 132 261 262
name_or_type (122)
    on left: 135, on right: 227 228
lbrace (123)
    on left: 136, on right: 121 184 185 186 187 200
new_name (124)
    on left: 137, on right: 140 147 223 251 255 256
dcl_name (125)
    on left: 138, on right: 257 258
onew_name (126)
    on left: 139 140, on right: 247 248
sym (127)
    on left: 141 142 143, on right: 3 13 43 113 137 138 146 174 189
    190 192 221 228 229 313 314 315 316 324
hidden_importsym (128)
    on left: 144 145, on right: 142 293 300
name (129)
    on left: 146, on right: 112 173 174
labelname (130)
    on left: 147, on right: 245
dotdotdot (131)
    on left: 148 149, on right: 229 230
ntype (132)
    on left: 150 151 152 153 154 155, on right: 35 36 38 41 44 135
    149 155 164 175 176 178 179 182 183 214
non_expr_type (133)
    on left: 156 157 158 159, on right: 134 159
non_recvchantype (134)
    on left: 160 161 162 163 164, on right: 177
convtype (135)
    on left: 165 166, on right: 120
comptype (136)
    on left: 167, on right: 121
fnret_type (137)
    on left: 168 169 170 171 172, on right: 197
dotname (138)
    on left: 173 174, on right: 154 163 172
othertype (139)
    on left: 175 176 177 178 179 180 181, on right: 152 158 161 166
    167 170
ptrtype (140)
    on left: 182, on right: 153 162 171
recvchantype (141)
    on left: 183, on right: 150 156 168
structtype (142)
    on left: 184 185, on right: 180
interfacetype (143)
    on left: 186 187, on right: 181
xfndcl (144)
    on left: 188, on right: 21
fndcl (145)
    on left: 189 190, on right: 188
hidden_fndcl (146)
    on left: 191 192, on right: 292
fntype (147)
    on left: 193, on right: 151 157 160 165 169 199
fnbody (148)
    on left: 194 195, on right: 188 292
fnres (149)
    on left: 196 197 198, on right: 189 190 193 226
fnlitdcl (150)
    on left: 199, on right: 200 201
fnliteral (151)
    on left: 200 201, on right: 124
xdcl_list (152)
    on left: 202 203, on right: 1 203
vardcl_list (153)
    on left: 204 205, on right: 25 205
constdcl_list (154)
    on left: 206 207, on right: 29 207
typedcl_list (155)
    on left: 208 209, on right: 32 209
structdcl_list (156)
    on left: 210 211, on right: 184 211
interfacedcl_list (157)
    on left: 212 213, on right: 186 213
structdcl (158)
    on left: 214 215 216 217 218 219, on right: 210 211
packname (159)
    on left: 220 221, on right: 222 224 225
embed (160)
    on left: 222, on right: 215 216 217 218 219
interfacedcl (161)
    on left: 223 224 225, on right: 212 213
indcl (162)
    on left: 226, on right: 223
arg_type (163)
    on left: 227 228 229 230, on right: 231 232
arg_type_list (164)
    on left: 231 232, on right: 232 234
oarg_type_list_ocomma (165)
    on left: 233 234, on right: 189 190 193 198 226
stmt (166)
    on left: 235 236 237 238 239, on right: 245 253 254
non_dcl_stmt (167)
    on left: 240 241 242 243 244 245 246 247 248 249 250 251 252, on right:
    22 238
stmt_list (168)
    on left: 253 254, on right: 55 57 60 195 200 254
new_name_list (169)
    on left: 255 256, on right: 214 256
dcl_name_list (170)
    on left: 257 258, on right: 35 36 37 38 39 41 42 258
expr_list (171)
    on left: 259 260, on right: 36 37 38 39 47 48 61 62 260 276
expr_or_type_list (172)
    on left: 261 262, on right: 51 52 53 109 110 262
keyval_list (173)
    on left: 263 264 265 266, on right: 265 266 268
braced_keyval_list (174)
    on left: 267 268, on right: 121 122 123 128 130
osemi (175)
    on left: 269 270, on right: 7 25 28 29 32 184 186
ocomma (176)
    on left: 271 272, on right: 109 110 120 234 268
oexpr (177)
    on left: 273 274, on right: 117 118 175
oexpr_list (178)
    on left: 275 276, on right: 252
osimple_stmt (179)
    on left: 277 278, on right: 63 64 68 69
ohidden_funarg_list (180)
    on left: 279 280, on right: 191 192 312 316 320
ohidden_structdcl_list (181)
    on left: 281 282, on right: 305
ohidden_interfacedcl_list (182)
    on left: 283 284, on right: 306
oliteral (183)
    on left: 285 286, on right: 214 215 216 217 218 219 313 314 315
hidden_import (184)
    on left: 287 288 289 290 291 292, on right: 328
hidden_pkg_importsym (185)
    on left: 293, on right: 191 288 289 290 294
hidden_pkgtype (186)
    on left: 294, on right: 291
hidden_type (187)
    on left: 295 296 297, on right: 288 290 291 302 303 304 307 310
    311 313 314 315 317 321
hidden_type_non_recv_chan (188)
    on left: 298 299, on right: 308
hidden_type_misc (189)
    on left: 300 301 302 303 304 305 306 307 308 309 310, on right:
    295 298
hidden_type_recv_chan (190)
    on left: 311, on right: 296 309
hidden_type_func (191)
    on left: 312, on right: 297 299
hidden_funarg (192)
    on left: 313 314, on right: 329 330
hidden_structdcl (193)
    on left: 315, on right: 331 332
hidden_interfacedcl (194)
    on left: 316 317, on right: 333 334
ohidden_funres (195)
    on left: 318 319, on right: 191 192 312 316
hidden_funres (196)
    on left: 320 321, on right: 319
hidden_literal (197)
    on left: 322 323 324, on right: 325 326
hidden_constant (198)
    on left: 325 326, on right: 289 290
hidden_import_list (199)
    on left: 327 328, on right: 18 328
hidden_funarg_list (200)
    on left: 329 330, on right: 192 280 330
hidden_structdcl_list (201)
    on left: 331 332, on right: 282 332
hidden_interfacedcl_list (202)
    on left: 333 334, on right: 284 334


State 0

    0 $accept: . file $end

    LPACKAGE  shift, and go to state 1

    $default  reduce using rule 2 (package)

    file     go to state 2
    package  go to state 3


State 1

    3 package: LPACKAGE . sym ';'

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 7
    hidden_importsym  go to state 8


State 2

    0 $accept: file . $end

    $end  shift, and go to state 9


State 3

    1 file: package . imports xdcl_list

    $default  reduce using rule 4 (imports)

    imports  go to state 10


State 4

  141 sym: LNAME .

    $default  reduce using rule 141 (sym)


State 5

  143 sym: '?' .

    $default  reduce using rule 143 (sym)


State 6

  144 hidden_importsym: '@' . LLITERAL '.' LNAME
  145                 | '@' . LLITERAL '.' '?'

    LLITERAL  shift, and go to state 11


State 7

    3 package: LPACKAGE sym . ';'

    ';'  shift, and go to state 12


State 8

  142 sym: hidden_importsym .

    $default  reduce using rule 142 (sym)


State 9

    0 $accept: file $end .

    $default  accept


State 10

    1 file: package imports . xdcl_list
    5 imports: imports . import ';'

    LIMPORT  shift, and go to state 13

    $default  reduce using rule 202 (xdcl_list)

    import     go to state 14
    xdcl_list  go to state 15


State 11

  144 hidden_importsym: '@' LLITERAL . '.' LNAME
  145                 | '@' LLITERAL . '.' '?'

    '.'  shift, and go to state 16


State 12

    3 package: LPACKAGE sym ';' .

    $default  reduce using rule 3 (package)


State 13

    6 import: LIMPORT . import_stmt
    7       | LIMPORT . '(' import_stmt_list osemi ')'
    8       | LIMPORT . '(' ')'

    LLITERAL  shift, and go to state 17
    LNAME     shift, and go to state 4
    '('       shift, and go to state 18
    '.'       shift, and go to state 19
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    import_stmt       go to state 20
    import_here       go to state 21
    sym               go to state 22
    hidden_importsym  go to state 8


State 14

    5 imports: imports import . ';'

    ';'  shift, and go to state 23


State 15

    1 file: package imports xdcl_list .
  203 xdcl_list: xdcl_list . xdcl ';'

    error       shift, and go to state 24
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 33
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $end  reduce using rule 1 (file)
    ';'   reduce using rule 19 (xdcl)

    xdcl              go to state 55
    common_dcl        go to state 56
    lconst            go to state 57
    simple_stmt       go to state 58
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    xfndcl            go to state 77
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    non_dcl_stmt      go to state 81
    expr_list         go to state 82


State 16

  144 hidden_importsym: '@' LLITERAL '.' . LNAME
  145                 | '@' LLITERAL '.' . '?'

    LNAME  shift, and go to state 83
    '?'    shift, and go to state 84


State 17

   12 import_here: LLITERAL .

    $default  reduce using rule 12 (import_here)


State 18

    7 import: LIMPORT '(' . import_stmt_list osemi ')'
    8       | LIMPORT '(' . ')'

    LLITERAL  shift, and go to state 17
    LNAME     shift, and go to state 4
    ')'       shift, and go to state 85
    '.'       shift, and go to state 19
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    import_stmt       go to state 86
    import_stmt_list  go to state 87
    import_here       go to state 21
    sym               go to state 22
    hidden_importsym  go to state 8


State 19

   14 import_here: '.' . LLITERAL

    LLITERAL  shift, and go to state 88


State 20

    6 import: LIMPORT import_stmt .

    $default  reduce using rule 6 (import)


State 21

    9 import_stmt: import_here . import_package import_there

    LPACKAGE  shift, and go to state 89

    import_package  go to state 90


State 22

   13 import_here: sym . LLITERAL

    LLITERAL  shift, and go to state 91


State 23

    5 imports: imports import ';' .

    $default  reduce using rule 5 (imports)


State 24

   23 xdcl: error .

    $default  reduce using rule 23 (xdcl)


State 25

  111 pexpr_no_paren: LLITERAL .

    $default  reduce using rule 111 (pexpr_no_paren)


State 26

  247 non_dcl_stmt: LBREAK . onew_name

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 139 (onew_name)

    new_name          go to state 92
    onew_name         go to state 93
    sym               go to state 94
    hidden_importsym  go to state 8


State 27

  177 othertype: LCHAN . non_recvchantype
  178          | LCHAN . LCOMM ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 96
    '*'         shift, and go to state 97
    '('         shift, and go to state 98
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    non_recvchantype  go to state 101
    dotname           go to state 102
    othertype         go to state 103
    ptrtype           go to state 104
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 105


State 28

   34 lconst: LCONST .

    $default  reduce using rule 34 (lconst)


State 29

  248 non_dcl_stmt: LCONTINUE . onew_name

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 139 (onew_name)

    new_name          go to state 92
    onew_name         go to state 106
    sym               go to state 94
    hidden_importsym  go to state 8


State 30

  250 non_dcl_stmt: LDEFER . pseudocall

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    '('         shift, and go to state 51
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    pseudocall        go to state 107
    pexpr_no_paren    go to state 66
    pexpr             go to state 108
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 31

  246 non_dcl_stmt: LFALL .

    $default  reduce using rule 246 (non_dcl_stmt)


State 32

   67 for_stmt: LFOR . for_body

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    range_stmt        go to state 110
    for_header        go to state 111
    for_body          go to state 112
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 113
    osimple_stmt      go to state 114


State 33

  188 xfndcl: LFUNC . fndcl fnbody
  193 fntype: LFUNC . '(' oarg_type_list_ocomma ')' fnres

    LNAME  shift, and go to state 4
    '('    shift, and go to state 115
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 116
    hidden_importsym  go to state 8
    fndcl             go to state 117


State 34

  249 non_dcl_stmt: LGO . pseudocall

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    '('         shift, and go to state 51
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    pseudocall        go to state 118
    pexpr_no_paren    go to state 66
    pexpr             go to state 108
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 35

  251 non_dcl_stmt: LGOTO . new_name

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    new_name          go to state 119
    sym               go to state 94
    hidden_importsym  go to state 8


State 36

   70 if_stmt: LIF . if_header loop_body elseif_list else

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    if_header         go to state 120
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 121


State 37

  186 interfacetype: LINTERFACE . lbrace interfacedcl_list osemi '}'
  187              | LINTERFACE . lbrace '}'

    '{'  shift, and go to state 122

    lbrace  go to state 123


State 38

  179 othertype: LMAP . '[' ntype ']' ntype

    '['  shift, and go to state 124


State 39

  252 non_dcl_stmt: LRETURN . oexpr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 275 (oexpr_list)

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 126
    oexpr_list        go to state 127


State 40

   77 select_stmt: LSELECT . '{' caseblock_list '}'

    '{'  shift, and go to state 128


State 41

  184 structtype: LSTRUCT . lbrace structdcl_list osemi '}'
  185           | LSTRUCT . lbrace '}'

    '{'  shift, and go to state 122

    lbrace  go to state 129


State 42

   76 switch_stmt: LSWITCH . if_header '{' caseblock_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    if_header         go to state 130
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 121


State 43

   31 common_dcl: LTYPE . typedcl
   32           | LTYPE . '(' typedcl_list osemi ')'
   33           | LTYPE . '(' ')'

    LNAME  shift, and go to state 4
    '('    shift, and go to state 131
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    typedclname       go to state 132
    typedcl           go to state 133
    sym               go to state 134
    hidden_importsym  go to state 8


State 44

   24 common_dcl: LVAR . vardcl
   25           | LVAR . '(' vardcl_list osemi ')'
   26           | LVAR . '(' ')'

    LNAME  shift, and go to state 4
    '('    shift, and go to state 135
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    vardcl            go to state 136
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    dcl_name_list     go to state 139


State 45

  107 uexpr: LCOMM . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 140
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 46

  102 uexpr: '+' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 141
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 47

  103 uexpr: '-' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 142
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 48

  106 uexpr: '^' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 143
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 49

  100 uexpr: '*' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 144
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 50

  101 uexpr: '&' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 145
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 51

  123 pexpr_no_paren: '(' . expr_or_type ')' '{' start_complit braced_keyval_list '}'
  132 pexpr: '(' . expr_or_type ')'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 148
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    expr_or_type      go to state 149
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    non_expr_type     go to state 150
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 151
    recvchantype      go to state 152
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 153
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 52

  104 uexpr: '!' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 154
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 53

  105 uexpr: '~' . uexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 155
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 54

  175 othertype: '[' . oexpr ']' ntype
  176          | '[' . LDDD ']' ntype

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 156
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 273 (oexpr)

    expr              go to state 157
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    oexpr             go to state 158


State 55

  203 xdcl_list: xdcl_list xdcl . ';'

    ';'  shift, and go to state 159


State 56

   20 xdcl: common_dcl .

    $default  reduce using rule 20 (xdcl)


State 57

   27 common_dcl: lconst . constdcl
   28           | lconst . '(' constdcl osemi ')'
   29           | lconst . '(' constdcl ';' constdcl_list osemi ')'
   30           | lconst . '(' ')'

    LNAME  shift, and go to state 4
    '('    shift, and go to state 160
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    constdcl          go to state 161
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    dcl_name_list     go to state 162


State 58

  240 non_dcl_stmt: simple_stmt .

    $default  reduce using rule 240 (non_dcl_stmt)


State 59

  241 non_dcl_stmt: for_stmt .

    $default  reduce using rule 241 (non_dcl_stmt)


State 60

  244 non_dcl_stmt: if_stmt .

    $default  reduce using rule 244 (non_dcl_stmt)


State 61

  242 non_dcl_stmt: switch_stmt .

    $default  reduce using rule 242 (non_dcl_stmt)


State 62

  243 non_dcl_stmt: select_stmt .

    $default  reduce using rule 243 (non_dcl_stmt)


State 63

   45 simple_stmt: expr .
   46            | expr . LASOP expr
   49            | expr . LINC
   50            | expr . LDEC
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  259 expr_list: expr .

    LASOP    shift, and go to state 163
    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LDEC     shift, and go to state 167
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LINC     shift, and go to state 171
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    LCOLAS    reduce using rule 259 (expr_list)
    '='       reduce using rule 259 (expr_list)
    ','       reduce using rule 259 (expr_list)
    $default  reduce using rule 45 (simple_stmt)


State 64

   78 expr: uexpr .

    $default  reduce using rule 78 (expr)


State 65

  119 pexpr_no_paren: pseudocall .

    $default  reduce using rule 119 (pexpr_no_paren)


State 66

  122 pexpr_no_paren: pexpr_no_paren . '{' start_complit braced_keyval_list '}'
  131 pexpr: pexpr_no_paren .

    '{'  shift, and go to state 186

    '{'       [reduce using rule 131 (pexpr)]
    $default  reduce using rule 131 (pexpr)


State 67

   99 uexpr: pexpr .
  108 pseudocall: pexpr . '(' ')'
  109           | pexpr . '(' expr_or_type_list ocomma ')'
  110           | pexpr . '(' expr_or_type_list LDDD ocomma ')'
  113 pexpr_no_paren: pexpr . '.' sym
  114               | pexpr . '.' '(' expr_or_type ')'
  115               | pexpr . '.' '(' LTYPE ')'
  116               | pexpr . '[' expr ']'
  117               | pexpr . '[' oexpr ':' oexpr ']'
  118               | pexpr . '[' oexpr ':' oexpr ':' oexpr ']'

    '('  shift, and go to state 187
    '.'  shift, and go to state 188
    '['  shift, and go to state 189

    $default  reduce using rule 99 (uexpr)


State 68

  147 labelname: new_name .

    $default  reduce using rule 147 (labelname)


State 69

  137 new_name: sym .
  146 name: sym .

    ':'       reduce using rule 137 (new_name)
    $default  reduce using rule 146 (name)


State 70

  112 pexpr_no_paren: name .

    $default  reduce using rule 112 (pexpr_no_paren)


State 71

  245 non_dcl_stmt: labelname . ':' stmt

    ':'  shift, and go to state 190


State 72

  120 pexpr_no_paren: convtype . '(' expr ocomma ')'

    '('  shift, and go to state 191


State 73

  121 pexpr_no_paren: comptype . lbrace start_complit braced_keyval_list '}'

    '{'  shift, and go to state 122

    lbrace  go to state 192


State 74

  166 convtype: othertype .
  167 comptype: othertype .

    '{'       reduce using rule 167 (comptype)
    $default  reduce using rule 166 (convtype)


State 75

  180 othertype: structtype .

    $default  reduce using rule 180 (othertype)


State 76

  181 othertype: interfacetype .

    $default  reduce using rule 181 (othertype)


State 77

   21 xdcl: xfndcl .

    $default  reduce using rule 21 (xdcl)


State 78

  165 convtype: fntype .
  199 fnlitdcl: fntype .

    '('       reduce using rule 165 (convtype)
    $default  reduce using rule 199 (fnlitdcl)


State 79

  200 fnliteral: fnlitdcl . lbrace stmt_list '}'
  201          | fnlitdcl . error

    error  shift, and go to state 193
    '{'    shift, and go to state 122

    lbrace  go to state 194


State 80

  124 pexpr_no_paren: fnliteral .

    $default  reduce using rule 124 (pexpr_no_paren)


State 81

   22 xdcl: non_dcl_stmt .

    $default  reduce using rule 22 (xdcl)


State 82

   47 simple_stmt: expr_list . '=' expr_list
   48            | expr_list . LCOLAS expr_list
  260 expr_list: expr_list . ',' expr

    LCOLAS  shift, and go to state 195
    '='     shift, and go to state 196
    ','     shift, and go to state 197


State 83

  144 hidden_importsym: '@' LLITERAL '.' LNAME .

    $default  reduce using rule 144 (hidden_importsym)


State 84

  145 hidden_importsym: '@' LLITERAL '.' '?' .

    $default  reduce using rule 145 (hidden_importsym)


State 85

    8 import: LIMPORT '(' ')' .

    $default  reduce using rule 8 (import)


State 86

   10 import_stmt_list: import_stmt .

    $default  reduce using rule 10 (import_stmt_list)


State 87

    7 import: LIMPORT '(' import_stmt_list . osemi ')'
   11 import_stmt_list: import_stmt_list . ';' import_stmt

    ';'  shift, and go to state 198

    $default  reduce using rule 269 (osemi)

    osemi  go to state 199


State 88

   14 import_here: '.' LLITERAL .

    $default  reduce using rule 14 (import_here)


State 89

   15 import_package: LPACKAGE . LNAME import_safety ';'

    LNAME  shift, and go to state 200


State 90

    9 import_stmt: import_here import_package . import_there

    $default  reduce using rule 327 (hidden_import_list)

    import_there        go to state 201
    hidden_import_list  go to state 202


State 91

   13 import_here: sym LLITERAL .

    $default  reduce using rule 13 (import_here)


State 92

  140 onew_name: new_name .

    $default  reduce using rule 140 (onew_name)


State 93

  247 non_dcl_stmt: LBREAK onew_name .

    $default  reduce using rule 247 (non_dcl_stmt)


State 94

  137 new_name: sym .

    $default  reduce using rule 137 (new_name)


State 95

  193 fntype: LFUNC . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 203


State 96

  178 othertype: LCHAN LCOMM . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 206
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 97

  182 ptrtype: '*' . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 212
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 98

  164 non_recvchantype: '(' . ntype ')'

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 213
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 99

  146 name: sym .

    $default  reduce using rule 146 (name)


State 100

  173 dotname: name .
  174        | name . '.' sym

    '.'  shift, and go to state 214

    $default  reduce using rule 173 (dotname)


State 101

  177 othertype: LCHAN non_recvchantype .

    $default  reduce using rule 177 (othertype)


State 102

  163 non_recvchantype: dotname .

    $default  reduce using rule 163 (non_recvchantype)


State 103

  161 non_recvchantype: othertype .

    $default  reduce using rule 161 (non_recvchantype)


State 104

  162 non_recvchantype: ptrtype .

    $default  reduce using rule 162 (non_recvchantype)


State 105

  160 non_recvchantype: fntype .

    $default  reduce using rule 160 (non_recvchantype)


State 106

  248 non_dcl_stmt: LCONTINUE onew_name .

    $default  reduce using rule 248 (non_dcl_stmt)


State 107

  119 pexpr_no_paren: pseudocall .
  250 non_dcl_stmt: LDEFER pseudocall .

    LCASE     reduce using rule 250 (non_dcl_stmt)
    LDEFAULT  reduce using rule 250 (non_dcl_stmt)
    ';'       reduce using rule 250 (non_dcl_stmt)
    '}'       reduce using rule 250 (non_dcl_stmt)
    $default  reduce using rule 119 (pexpr_no_paren)


State 108

  108 pseudocall: pexpr . '(' ')'
  109           | pexpr . '(' expr_or_type_list ocomma ')'
  110           | pexpr . '(' expr_or_type_list LDDD ocomma ')'
  113 pexpr_no_paren: pexpr . '.' sym
  114               | pexpr . '.' '(' expr_or_type ')'
  115               | pexpr . '.' '(' LTYPE ')'
  116               | pexpr . '[' expr ']'
  117               | pexpr . '[' oexpr ':' oexpr ']'
  118               | pexpr . '[' oexpr ':' oexpr ':' oexpr ']'

    '('  shift, and go to state 187
    '.'  shift, and go to state 188
    '['  shift, and go to state 189


State 109

  278 osimple_stmt: simple_stmt .

    $default  reduce using rule 278 (osimple_stmt)


State 110

   65 for_header: range_stmt .

    $default  reduce using rule 65 (for_header)


State 111

   66 for_body: for_header . loop_body

    '{'  shift, and go to state 215

    loop_body  go to state 216


State 112

   67 for_stmt: LFOR for_body .

    $default  reduce using rule 67 (for_stmt)


State 113

   47 simple_stmt: expr_list . '=' expr_list
   48            | expr_list . LCOLAS expr_list
   61 range_stmt: expr_list . '=' LRANGE expr
   62           | expr_list . LCOLAS LRANGE expr
  260 expr_list: expr_list . ',' expr

    LCOLAS  shift, and go to state 217
    '='     shift, and go to state 218
    ','     shift, and go to state 197


State 114

   63 for_header: osimple_stmt . ';' osimple_stmt ';' osimple_stmt
   64           | osimple_stmt .

    ';'  shift, and go to state 219

    $default  reduce using rule 64 (for_header)


State 115

  190 fndcl: '(' . oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres
  193 fntype: LFUNC '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 227


State 116

  189 fndcl: sym . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 228


State 117

  188 xfndcl: LFUNC fndcl . fnbody

    '{'  shift, and go to state 229

    $default  reduce using rule 194 (fnbody)

    fnbody  go to state 230


State 118

  119 pexpr_no_paren: pseudocall .
  249 non_dcl_stmt: LGO pseudocall .

    LCASE     reduce using rule 249 (non_dcl_stmt)
    LDEFAULT  reduce using rule 249 (non_dcl_stmt)
    ';'       reduce using rule 249 (non_dcl_stmt)
    '}'       reduce using rule 249 (non_dcl_stmt)
    $default  reduce using rule 119 (pexpr_no_paren)


State 119

  251 non_dcl_stmt: LGOTO new_name .

    $default  reduce using rule 251 (non_dcl_stmt)


State 120

   70 if_stmt: LIF if_header . loop_body elseif_list else

    '{'  shift, and go to state 215

    loop_body  go to state 231


State 121

   68 if_header: osimple_stmt .
   69          | osimple_stmt . ';' osimple_stmt

    ';'  shift, and go to state 232

    $default  reduce using rule 68 (if_header)


State 122

  136 lbrace: '{' .

    $default  reduce using rule 136 (lbrace)


State 123

  186 interfacetype: LINTERFACE lbrace . interfacedcl_list osemi '}'
  187              | LINTERFACE lbrace . '}'

    LNAME  shift, and go to state 233
    '('    shift, and go to state 234
    '}'    shift, and go to state 235
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    new_name           go to state 236
    sym                go to state 94
    hidden_importsym   go to state 8
    interfacedcl_list  go to state 237
    packname           go to state 238
    interfacedcl       go to state 239


State 124

  179 othertype: LMAP '[' . ntype ']' ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 240
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 125

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  259 expr_list: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 259 (expr_list)


State 126

  260 expr_list: expr_list . ',' expr
  276 oexpr_list: expr_list .

    ','  shift, and go to state 197

    $default  reduce using rule 276 (oexpr_list)


State 127

  252 non_dcl_stmt: LRETURN oexpr_list .

    $default  reduce using rule 252 (non_dcl_stmt)


State 128

   77 select_stmt: LSELECT '{' . caseblock_list '}'

    $default  reduce using rule 58 (caseblock_list)

    caseblock_list  go to state 241


State 129

  184 structtype: LSTRUCT lbrace . structdcl_list osemi '}'
  185           | LSTRUCT lbrace . '}'

    LNAME  shift, and go to state 233
    '*'    shift, and go to state 242
    '('    shift, and go to state 243
    '}'    shift, and go to state 244
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    new_name          go to state 245
    sym               go to state 94
    hidden_importsym  go to state 8
    structdcl_list    go to state 246
    structdcl         go to state 247
    packname          go to state 248
    embed             go to state 249
    new_name_list     go to state 250


State 130

   76 switch_stmt: LSWITCH if_header . '{' caseblock_list '}'

    '{'  shift, and go to state 251


State 131

   32 common_dcl: LTYPE '(' . typedcl_list osemi ')'
   33           | LTYPE '(' . ')'

    LNAME  shift, and go to state 4
    ')'    shift, and go to state 252
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    typedclname       go to state 132
    typedcl           go to state 253
    sym               go to state 134
    hidden_importsym  go to state 8
    typedcl_list      go to state 254


State 132

   44 typedcl: typedclname . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 255
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 133

   31 common_dcl: LTYPE typedcl .

    $default  reduce using rule 31 (common_dcl)


State 134

   43 typedclname: sym .

    $default  reduce using rule 43 (typedclname)


State 135

   25 common_dcl: LVAR '(' . vardcl_list osemi ')'
   26           | LVAR '(' . ')'

    LNAME  shift, and go to state 4
    ')'    shift, and go to state 256
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    vardcl            go to state 257
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    vardcl_list       go to state 258
    dcl_name_list     go to state 139


State 136

   24 common_dcl: LVAR vardcl .

    $default  reduce using rule 24 (common_dcl)


State 137

  257 dcl_name_list: dcl_name .

    $default  reduce using rule 257 (dcl_name_list)


State 138

  138 dcl_name: sym .

    $default  reduce using rule 138 (dcl_name)


State 139

   35 vardcl: dcl_name_list . ntype
   36       | dcl_name_list . ntype '=' expr_list
   37       | dcl_name_list . '=' expr_list
  258 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '='         shift, and go to state 259
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6
    ','         shift, and go to state 260

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 261
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 140

  107 uexpr: LCOMM uexpr .

    $default  reduce using rule 107 (uexpr)


State 141

  102 uexpr: '+' uexpr .

    $default  reduce using rule 102 (uexpr)


State 142

  103 uexpr: '-' uexpr .

    $default  reduce using rule 103 (uexpr)


State 143

  106 uexpr: '^' uexpr .

    $default  reduce using rule 106 (uexpr)


State 144

  100 uexpr: '*' uexpr .

    $default  reduce using rule 100 (uexpr)


State 145

  101 uexpr: '&' uexpr .

    $default  reduce using rule 101 (uexpr)


State 146

  107 uexpr: LCOMM . uexpr
  183 recvchantype: LCOMM . LCHAN ntype

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 262
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 140
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 147

  100 uexpr: '*' . uexpr
  159 non_expr_type: '*' . non_expr_type

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    uexpr             go to state 144
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    non_expr_type     go to state 263
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 151
    recvchantype      go to state 152
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 153
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 148

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  133 expr_or_type: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 133 (expr_or_type)


State 149

  123 pexpr_no_paren: '(' expr_or_type . ')' '{' start_complit braced_keyval_list '}'
  132 pexpr: '(' expr_or_type . ')'

    ')'  shift, and go to state 264


State 150

  134 expr_or_type: non_expr_type .

    $default  reduce using rule 134 (expr_or_type)


State 151

  158 non_expr_type: othertype .
  166 convtype: othertype .
  167 comptype: othertype .

    '('       reduce using rule 166 (convtype)
    '{'       reduce using rule 167 (comptype)
    $default  reduce using rule 158 (non_expr_type)


State 152

  156 non_expr_type: recvchantype .

    $default  reduce using rule 156 (non_expr_type)


State 153

  157 non_expr_type: fntype .
  165 convtype: fntype .
  199 fnlitdcl: fntype .

    error     reduce using rule 199 (fnlitdcl)
    '('       reduce using rule 165 (convtype)
    '{'       reduce using rule 199 (fnlitdcl)
    $default  reduce using rule 157 (non_expr_type)


State 154

  104 uexpr: '!' uexpr .

    $default  reduce using rule 104 (uexpr)


State 155

  105 uexpr: '~' uexpr .

    $default  reduce using rule 105 (uexpr)


State 156

  176 othertype: '[' LDDD . ']' ntype

    ']'  shift, and go to state 265


State 157

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  274 oexpr: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 274 (oexpr)


State 158

  175 othertype: '[' oexpr . ']' ntype

    ']'  shift, and go to state 266


State 159

  203 xdcl_list: xdcl_list xdcl ';' .

    $default  reduce using rule 203 (xdcl_list)


State 160

   28 common_dcl: lconst '(' . constdcl osemi ')'
   29           | lconst '(' . constdcl ';' constdcl_list osemi ')'
   30           | lconst '(' . ')'

    LNAME  shift, and go to state 4
    ')'    shift, and go to state 267
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    constdcl          go to state 268
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    dcl_name_list     go to state 162


State 161

   27 common_dcl: lconst constdcl .

    $default  reduce using rule 27 (common_dcl)


State 162

   38 constdcl: dcl_name_list . ntype '=' expr_list
   39         | dcl_name_list . '=' expr_list
  258 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '='         shift, and go to state 269
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6
    ','         shift, and go to state 260

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 270
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 163

   46 simple_stmt: expr LASOP . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 271
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 164

   80 expr: expr LANDAND . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 272
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 165

   95 expr: expr LANDNOT . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 273
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 166

   98 expr: expr LCOMM . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 274
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 167

   50 simple_stmt: expr LDEC .

    $default  reduce using rule 50 (simple_stmt)


State 168

   81 expr: expr LEQ . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 275
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 169

   85 expr: expr LGE . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 276
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 170

   86 expr: expr LGT . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 277
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 171

   49 simple_stmt: expr LINC .

    $default  reduce using rule 49 (simple_stmt)


State 172

   84 expr: expr LLE . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 278
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 173

   96 expr: expr LLSH . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 279
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 174

   83 expr: expr LLT . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 280
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 175

   82 expr: expr LNE . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 281
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 176

   79 expr: expr LOROR . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 282
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 177

   97 expr: expr LRSH . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 283
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 178

   87 expr: expr '+' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 284
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 179

   88 expr: expr '-' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 285
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 180

   89 expr: expr '|' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 286
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 181

   90 expr: expr '^' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 287
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 182

   91 expr: expr '*' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 288
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 183

   92 expr: expr '/' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 289
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 184

   93 expr: expr '%' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 290
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 185

   94 expr: expr '&' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 291
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 186

  122 pexpr_no_paren: pexpr_no_paren '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 125 (start_complit)

    start_complit  go to state 292


State 187

  108 pseudocall: pexpr '(' . ')'
  109           | pexpr '(' . expr_or_type_list ocomma ')'
  110           | pexpr '(' . expr_or_type_list LDDD ocomma ')'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    ')'         shift, and go to state 293
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr               go to state 148
    uexpr              go to state 64
    pseudocall         go to state 65
    pexpr_no_paren     go to state 66
    pexpr              go to state 67
    expr_or_type       go to state 294
    sym                go to state 99
    hidden_importsym   go to state 8
    name               go to state 70
    non_expr_type      go to state 150
    convtype           go to state 72
    comptype           go to state 73
    othertype          go to state 151
    recvchantype       go to state 152
    structtype         go to state 75
    interfacetype      go to state 76
    fntype             go to state 153
    fnlitdcl           go to state 79
    fnliteral          go to state 80
    expr_or_type_list  go to state 295


State 188

  113 pexpr_no_paren: pexpr '.' . sym
  114               | pexpr '.' . '(' expr_or_type ')'
  115               | pexpr '.' . '(' LTYPE ')'

    LNAME  shift, and go to state 4
    '('    shift, and go to state 296
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 297
    hidden_importsym  go to state 8


State 189

  116 pexpr_no_paren: pexpr '[' . expr ']'
  117               | pexpr '[' . oexpr ':' oexpr ']'
  118               | pexpr '[' . oexpr ':' oexpr ':' oexpr ']'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 273 (oexpr)

    expr              go to state 298
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    oexpr             go to state 299


State 190

  245 non_dcl_stmt: labelname ':' . stmt

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    LCASE     reduce using rule 235 (stmt)
    LDEFAULT  reduce using rule 235 (stmt)
    ';'       reduce using rule 235 (stmt)
    '}'       reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 304
    non_dcl_stmt      go to state 305
    expr_list         go to state 82


State 191

  120 pexpr_no_paren: convtype '(' . expr ocomma ')'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 306
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 192

  121 pexpr_no_paren: comptype lbrace . start_complit braced_keyval_list '}'

    $default  reduce using rule 125 (start_complit)

    start_complit  go to state 307


State 193

  201 fnliteral: fnlitdcl error .

    $default  reduce using rule 201 (fnliteral)


State 194

  200 fnliteral: fnlitdcl lbrace . stmt_list '}'

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    ';'  reduce using rule 235 (stmt)
    '}'  reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 308
    non_dcl_stmt      go to state 305
    stmt_list         go to state 309
    expr_list         go to state 82


State 195

   48 simple_stmt: expr_list LCOLAS . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 310


State 196

   47 simple_stmt: expr_list '=' . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 311


State 197

  260 expr_list: expr_list ',' . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 312
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 198

   11 import_stmt_list: import_stmt_list ';' . import_stmt
  270 osemi: ';' .

    LLITERAL  shift, and go to state 17
    LNAME     shift, and go to state 4
    '.'       shift, and go to state 19
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    import_stmt       go to state 313
    import_here       go to state 21
    sym               go to state 22
    hidden_importsym  go to state 8


State 199

    7 import: LIMPORT '(' import_stmt_list osemi . ')'

    ')'  shift, and go to state 314


State 200

   15 import_package: LPACKAGE LNAME . import_safety ';'

    LNAME  shift, and go to state 315

    $default  reduce using rule 16 (import_safety)

    import_safety  go to state 316


State 201

    9 import_stmt: import_here import_package import_there .

    $default  reduce using rule 9 (import_stmt)


State 202

   18 import_there: hidden_import_list . '$' '$'
  328 hidden_import_list: hidden_import_list . hidden_import

    LCONST   shift, and go to state 317
    LFUNC    shift, and go to state 318
    LIMPORT  shift, and go to state 319
    LTYPE    shift, and go to state 320
    LVAR     shift, and go to state 321
    '$'      shift, and go to state 322

    hidden_import  go to state 323


State 203

  193 fntype: LFUNC '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 324


State 204

  183 recvchantype: LCOMM . LCHAN ntype

    LCHAN  shift, and go to state 325


State 205

  155 ntype: '(' . ntype ')'

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 326
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 206

  178 othertype: LCHAN LCOMM ntype .

    $default  reduce using rule 178 (othertype)


State 207

  154 ntype: dotname .

    $default  reduce using rule 154 (ntype)


State 208

  152 ntype: othertype .

    $default  reduce using rule 152 (ntype)


State 209

  153 ntype: ptrtype .

    $default  reduce using rule 153 (ntype)


State 210

  150 ntype: recvchantype .

    $default  reduce using rule 150 (ntype)


State 211

  151 ntype: fntype .

    $default  reduce using rule 151 (ntype)


State 212

  182 ptrtype: '*' ntype .

    $default  reduce using rule 182 (ptrtype)


State 213

  164 non_recvchantype: '(' ntype . ')'

    ')'  shift, and go to state 327


State 214

  174 dotname: name '.' . sym

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 328
    hidden_importsym  go to state 8


State 215

   60 loop_body: '{' . stmt_list '}'

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    ';'  reduce using rule 235 (stmt)
    '}'  reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 308
    non_dcl_stmt      go to state 305
    stmt_list         go to state 329
    expr_list         go to state 82


State 216

   66 for_body: for_header loop_body .

    $default  reduce using rule 66 (for_body)


State 217

   48 simple_stmt: expr_list LCOLAS . expr_list
   62 range_stmt: expr_list LCOLAS . LRANGE expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRANGE      shift, and go to state 330
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 310


State 218

   47 simple_stmt: expr_list '=' . expr_list
   61 range_stmt: expr_list '=' . LRANGE expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRANGE      shift, and go to state 331
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 311


State 219

   63 for_header: osimple_stmt ';' . osimple_stmt ';' osimple_stmt

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 332


State 220

  148 dotdotdot: LDDD .
  149          | LDDD . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 148 (dotdotdot)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 333
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 221

  227 arg_type: name_or_type .

    $default  reduce using rule 227 (arg_type)


State 222

  146 name: sym .
  228 arg_type: sym . name_or_type
  229         | sym . dotdotdot

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 146 (name)

    name_or_type      go to state 334
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    dotdotdot         go to state 335
    ntype             go to state 224
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 223

  230 arg_type: dotdotdot .

    $default  reduce using rule 230 (arg_type)


State 224

  135 name_or_type: ntype .

    $default  reduce using rule 135 (name_or_type)


State 225

  231 arg_type_list: arg_type .

    $default  reduce using rule 231 (arg_type_list)


State 226

  232 arg_type_list: arg_type_list . ',' arg_type
  234 oarg_type_list_ocomma: arg_type_list . ocomma

    ','  shift, and go to state 336

    $default  reduce using rule 271 (ocomma)

    ocomma  go to state 337


State 227

  190 fndcl: '(' oarg_type_list_ocomma . ')' sym '(' oarg_type_list_ocomma ')' fnres
  193 fntype: LFUNC '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 338


State 228

  189 fndcl: sym '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 339


State 229

  195 fnbody: '{' . stmt_list '}'

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    ';'  reduce using rule 235 (stmt)
    '}'  reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 308
    non_dcl_stmt      go to state 305
    stmt_list         go to state 340
    expr_list         go to state 82


State 230

  188 xfndcl: LFUNC fndcl fnbody .

    $default  reduce using rule 188 (xfndcl)


State 231

   70 if_stmt: LIF if_header loop_body . elseif_list else

    $default  reduce using rule 72 (elseif_list)

    elseif_list  go to state 341


State 232

   69 if_header: osimple_stmt ';' . osimple_stmt

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 342


State 233

  141 sym: LNAME .
  220 packname: LNAME .
  221         | LNAME . '.' sym

    '.'  shift, and go to state 343

    LLITERAL  reduce using rule 220 (packname)
    ';'       reduce using rule 220 (packname)
    '}'       reduce using rule 220 (packname)
    $default  reduce using rule 141 (sym)


State 234

  225 interfacedcl: '(' . packname ')'

    LNAME  shift, and go to state 344

    packname  go to state 345


State 235

  187 interfacetype: LINTERFACE lbrace '}' .

    $default  reduce using rule 187 (interfacetype)


State 236

  223 interfacedcl: new_name . indcl

    '('  shift, and go to state 346

    indcl  go to state 347


State 237

  186 interfacetype: LINTERFACE lbrace interfacedcl_list . osemi '}'
  213 interfacedcl_list: interfacedcl_list . ';' interfacedcl

    ';'  shift, and go to state 348

    $default  reduce using rule 269 (osemi)

    osemi  go to state 349


State 238

  224 interfacedcl: packname .

    $default  reduce using rule 224 (interfacedcl)


State 239

  212 interfacedcl_list: interfacedcl .

    $default  reduce using rule 212 (interfacedcl_list)


State 240

  179 othertype: LMAP '[' ntype . ']' ntype

    ']'  shift, and go to state 350


State 241

   59 caseblock_list: caseblock_list . caseblock
   77 select_stmt: LSELECT '{' caseblock_list . '}'

    LCASE     shift, and go to state 351
    LDEFAULT  shift, and go to state 352
    '}'       shift, and go to state 353

    case       go to state 354
    caseblock  go to state 355


State 242

  217 structdcl: '*' . embed oliteral
  219          | '*' . '(' embed ')' oliteral

    LNAME  shift, and go to state 344
    '('    shift, and go to state 356

    packname  go to state 248
    embed     go to state 357


State 243

  216 structdcl: '(' . embed ')' oliteral
  218          | '(' . '*' embed ')' oliteral

    LNAME  shift, and go to state 344
    '*'    shift, and go to state 358

    packname  go to state 248
    embed     go to state 359


State 244

  185 structtype: LSTRUCT lbrace '}' .

    $default  reduce using rule 185 (structtype)


State 245

  255 new_name_list: new_name .

    $default  reduce using rule 255 (new_name_list)


State 246

  184 structtype: LSTRUCT lbrace structdcl_list . osemi '}'
  211 structdcl_list: structdcl_list . ';' structdcl

    ';'  shift, and go to state 360

    $default  reduce using rule 269 (osemi)

    osemi  go to state 361


State 247

  210 structdcl_list: structdcl .

    $default  reduce using rule 210 (structdcl_list)


State 248

  222 embed: packname .

    $default  reduce using rule 222 (embed)


State 249

  215 structdcl: embed . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 363


State 250

  214 structdcl: new_name_list . ntype oliteral
  256 new_name_list: new_name_list . ',' new_name

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6
    ','         shift, and go to state 364

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 365
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 251

   76 switch_stmt: LSWITCH if_header '{' . caseblock_list '}'

    $default  reduce using rule 58 (caseblock_list)

    caseblock_list  go to state 366


State 252

   33 common_dcl: LTYPE '(' ')' .

    $default  reduce using rule 33 (common_dcl)


State 253

  208 typedcl_list: typedcl .

    $default  reduce using rule 208 (typedcl_list)


State 254

   32 common_dcl: LTYPE '(' typedcl_list . osemi ')'
  209 typedcl_list: typedcl_list . ';' typedcl

    ';'  shift, and go to state 367

    $default  reduce using rule 269 (osemi)

    osemi  go to state 368


State 255

   44 typedcl: typedclname ntype .

    $default  reduce using rule 44 (typedcl)


State 256

   26 common_dcl: LVAR '(' ')' .

    $default  reduce using rule 26 (common_dcl)


State 257

  204 vardcl_list: vardcl .

    $default  reduce using rule 204 (vardcl_list)


State 258

   25 common_dcl: LVAR '(' vardcl_list . osemi ')'
  205 vardcl_list: vardcl_list . ';' vardcl

    ';'  shift, and go to state 369

    $default  reduce using rule 269 (osemi)

    osemi  go to state 370


State 259

   37 vardcl: dcl_name_list '=' . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 371


State 260

  258 dcl_name_list: dcl_name_list ',' . dcl_name

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    dcl_name          go to state 372
    sym               go to state 138
    hidden_importsym  go to state 8


State 261

   35 vardcl: dcl_name_list ntype .
   36       | dcl_name_list ntype . '=' expr_list

    '='  shift, and go to state 373

    $default  reduce using rule 35 (vardcl)


State 262

  177 othertype: LCHAN . non_recvchantype
  178          | LCHAN . LCOMM ntype
  183 recvchantype: LCOMM LCHAN . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 374
    '*'         shift, and go to state 97
    '('         shift, and go to state 375
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 376
    non_recvchantype  go to state 101
    dotname           go to state 377
    othertype         go to state 378
    ptrtype           go to state 379
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 380


State 263

  159 non_expr_type: '*' non_expr_type .

    $default  reduce using rule 159 (non_expr_type)


State 264

  123 pexpr_no_paren: '(' expr_or_type ')' . '{' start_complit braced_keyval_list '}'
  132 pexpr: '(' expr_or_type ')' .

    '{'  shift, and go to state 381

    '{'       [reduce using rule 132 (pexpr)]
    $default  reduce using rule 132 (pexpr)


State 265

  176 othertype: '[' LDDD ']' . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 382
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 266

  175 othertype: '[' oexpr ']' . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 383
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 267

   30 common_dcl: lconst '(' ')' .

    $default  reduce using rule 30 (common_dcl)


State 268

   28 common_dcl: lconst '(' constdcl . osemi ')'
   29           | lconst '(' constdcl . ';' constdcl_list osemi ')'

    ';'  shift, and go to state 384

    $default  reduce using rule 269 (osemi)

    osemi  go to state 385


State 269

   39 constdcl: dcl_name_list '=' . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 386


State 270

   38 constdcl: dcl_name_list ntype . '=' expr_list

    '='  shift, and go to state 387


State 271

   46 simple_stmt: expr LASOP expr .
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 46 (simple_stmt)


State 272

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   80     | expr LANDAND expr .
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 80 (expr)


State 273

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   95     | expr LANDNOT expr .
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 95 (expr)


State 274

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
   98     | expr LCOMM expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 98 (expr)


State 275

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   81     | expr LEQ expr .
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 81 (expr)


State 276

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   85     | expr LGE expr .
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 85 (expr)


State 277

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   86     | expr LGT expr .
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 86 (expr)


State 278

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   84     | expr LLE expr .
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 84 (expr)


State 279

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   96     | expr LLSH expr .
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 96 (expr)


State 280

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   83     | expr LLT expr .
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 83 (expr)


State 281

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   82     | expr LNE expr .
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 82 (expr)


State 282

   79 expr: expr . LOROR expr
   79     | expr LOROR expr .
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 79 (expr)


State 283

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   97     | expr LRSH expr .
   98     | expr . LCOMM expr

    $default  reduce using rule 97 (expr)


State 284

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   87     | expr '+' expr .
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 87 (expr)


State 285

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   88     | expr '-' expr .
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 88 (expr)


State 286

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   89     | expr '|' expr .
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 89 (expr)


State 287

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   90     | expr '^' expr .
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDNOT  shift, and go to state 165
    LLSH     shift, and go to state 173
    LRSH     shift, and go to state 177
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 90 (expr)


State 288

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   91     | expr '*' expr .
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 91 (expr)


State 289

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   92     | expr '/' expr .
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 92 (expr)


State 290

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   93     | expr '%' expr .
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 93 (expr)


State 291

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   94     | expr '&' expr .
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    $default  reduce using rule 94 (expr)


State 292

  122 pexpr_no_paren: pexpr_no_paren '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 267 (braced_keyval_list)

    expr                go to state 389
    uexpr               go to state 64
    pseudocall          go to state 65
    pexpr_no_paren      go to state 66
    keyval              go to state 390
    bare_complitexpr    go to state 391
    pexpr               go to state 67
    sym                 go to state 99
    hidden_importsym    go to state 8
    name                go to state 70
    convtype            go to state 72
    comptype            go to state 73
    othertype           go to state 74
    structtype          go to state 75
    interfacetype       go to state 76
    fntype              go to state 78
    fnlitdcl            go to state 79
    fnliteral           go to state 80
    keyval_list         go to state 392
    braced_keyval_list  go to state 393


State 293

  108 pseudocall: pexpr '(' ')' .

    $default  reduce using rule 108 (pseudocall)


State 294

  261 expr_or_type_list: expr_or_type .

    $default  reduce using rule 261 (expr_or_type_list)


State 295

  109 pseudocall: pexpr '(' expr_or_type_list . ocomma ')'
  110           | pexpr '(' expr_or_type_list . LDDD ocomma ')'
  262 expr_or_type_list: expr_or_type_list . ',' expr_or_type

    LDDD  shift, and go to state 394
    ','   shift, and go to state 395

    $default  reduce using rule 271 (ocomma)

    ocomma  go to state 396


State 296

  114 pexpr_no_paren: pexpr '.' '(' . expr_or_type ')'
  115               | pexpr '.' '(' . LTYPE ')'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LTYPE       shift, and go to state 397
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 148
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    expr_or_type      go to state 398
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    non_expr_type     go to state 150
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 151
    recvchantype      go to state 152
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 153
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 297

  113 pexpr_no_paren: pexpr '.' sym .

    $default  reduce using rule 113 (pexpr_no_paren)


State 298

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  116 pexpr_no_paren: pexpr '[' expr . ']'
  274 oexpr: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185
    ']'      shift, and go to state 399

    $default  reduce using rule 274 (oexpr)


State 299

  117 pexpr_no_paren: pexpr '[' oexpr . ':' oexpr ']'
  118               | pexpr '[' oexpr . ':' oexpr ':' oexpr ']'

    ':'  shift, and go to state 400


State 300

  239 stmt: error .

    $default  reduce using rule 239 (stmt)


State 301

   55 compound_stmt: '{' . stmt_list '}'

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    ';'  reduce using rule 235 (stmt)
    '}'  reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 308
    non_dcl_stmt      go to state 305
    stmt_list         go to state 401
    expr_list         go to state 82


State 302

  237 stmt: common_dcl .

    $default  reduce using rule 237 (stmt)


State 303

  236 stmt: compound_stmt .

    $default  reduce using rule 236 (stmt)


State 304

  245 non_dcl_stmt: labelname ':' stmt .

    $default  reduce using rule 245 (non_dcl_stmt)


State 305

  238 stmt: non_dcl_stmt .

    $default  reduce using rule 238 (stmt)


State 306

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  120 pexpr_no_paren: convtype '(' expr . ocomma ')'

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185
    ','      shift, and go to state 402

    $default  reduce using rule 271 (ocomma)

    ocomma  go to state 403


State 307

  121 pexpr_no_paren: comptype lbrace start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 267 (braced_keyval_list)

    expr                go to state 389
    uexpr               go to state 64
    pseudocall          go to state 65
    pexpr_no_paren      go to state 66
    keyval              go to state 390
    bare_complitexpr    go to state 391
    pexpr               go to state 67
    sym                 go to state 99
    hidden_importsym    go to state 8
    name                go to state 70
    convtype            go to state 72
    comptype            go to state 73
    othertype           go to state 74
    structtype          go to state 75
    interfacetype       go to state 76
    fntype              go to state 78
    fnlitdcl            go to state 79
    fnliteral           go to state 80
    keyval_list         go to state 392
    braced_keyval_list  go to state 404


State 308

  253 stmt_list: stmt .

    $default  reduce using rule 253 (stmt_list)


State 309

  200 fnliteral: fnlitdcl lbrace stmt_list . '}'
  254 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 405
    '}'  shift, and go to state 406


State 310

   48 simple_stmt: expr_list LCOLAS expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 48 (simple_stmt)


State 311

   47 simple_stmt: expr_list '=' expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 47 (simple_stmt)


State 312

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  260 expr_list: expr_list ',' expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 260 (expr_list)


State 313

   11 import_stmt_list: import_stmt_list ';' import_stmt .

    $default  reduce using rule 11 (import_stmt_list)


State 314

    7 import: LIMPORT '(' import_stmt_list osemi ')' .

    $default  reduce using rule 7 (import)


State 315

   17 import_safety: LNAME .

    $default  reduce using rule 17 (import_safety)


State 316

   15 import_package: LPACKAGE LNAME import_safety . ';'

    ';'  shift, and go to state 407


State 317

  289 hidden_import: LCONST . hidden_pkg_importsym '=' hidden_constant ';'
  290              | LCONST . hidden_pkg_importsym hidden_type '=' hidden_constant ';'

    '@'  shift, and go to state 6

    hidden_importsym      go to state 408
    hidden_pkg_importsym  go to state 409


State 318

  292 hidden_import: LFUNC . hidden_fndcl fnbody ';'

    '('  shift, and go to state 410
    '@'  shift, and go to state 6

    hidden_importsym      go to state 408
    hidden_fndcl          go to state 411
    hidden_pkg_importsym  go to state 412


State 319

  287 hidden_import: LIMPORT . LNAME LLITERAL ';'

    LNAME  shift, and go to state 413


State 320

  291 hidden_import: LTYPE . hidden_pkgtype hidden_type ';'

    '@'  shift, and go to state 6

    hidden_importsym      go to state 408
    hidden_pkg_importsym  go to state 414
    hidden_pkgtype        go to state 415


State 321

  288 hidden_import: LVAR . hidden_pkg_importsym hidden_type ';'

    '@'  shift, and go to state 6

    hidden_importsym      go to state 408
    hidden_pkg_importsym  go to state 416


State 322

   18 import_there: hidden_import_list '$' . '$'

    '$'  shift, and go to state 417


State 323

  328 hidden_import_list: hidden_import_list hidden_import .

    $default  reduce using rule 328 (hidden_import_list)


State 324

  193 fntype: LFUNC '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 418


State 325

  183 recvchantype: LCOMM LCHAN . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 376
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 326

  155 ntype: '(' ntype . ')'

    ')'  shift, and go to state 419


State 327

  164 non_recvchantype: '(' ntype ')' .

    $default  reduce using rule 164 (non_recvchantype)


State 328

  174 dotname: name '.' sym .

    $default  reduce using rule 174 (dotname)


State 329

   60 loop_body: '{' stmt_list . '}'
  254 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 405
    '}'  shift, and go to state 420


State 330

   62 range_stmt: expr_list LCOLAS LRANGE . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 421
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 331

   61 range_stmt: expr_list '=' LRANGE . expr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 422
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 332

   63 for_header: osimple_stmt ';' osimple_stmt . ';' osimple_stmt

    ';'  shift, and go to state 423


State 333

  149 dotdotdot: LDDD ntype .

    $default  reduce using rule 149 (dotdotdot)


State 334

  228 arg_type: sym name_or_type .

    $default  reduce using rule 228 (arg_type)


State 335

  229 arg_type: sym dotdotdot .

    $default  reduce using rule 229 (arg_type)


State 336

  232 arg_type_list: arg_type_list ',' . arg_type
  272 ocomma: ',' .

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 272 (ocomma)

    name_or_type      go to state 221
    sym               go to state 222
    hidden_importsym  go to state 8
    name              go to state 100
    dotdotdot         go to state 223
    ntype             go to state 224
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211
    arg_type          go to state 424


State 337

  234 oarg_type_list_ocomma: arg_type_list ocomma .

    $default  reduce using rule 234 (oarg_type_list_ocomma)


State 338

  190 fndcl: '(' oarg_type_list_ocomma ')' . sym '(' oarg_type_list_ocomma ')' fnres
  193 fntype: LFUNC '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 425
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 196 (fnres)

    sym               go to state 426
    hidden_importsym  go to state 8
    name              go to state 100
    fnret_type        go to state 427
    dotname           go to state 428
    othertype         go to state 429
    ptrtype           go to state 430
    recvchantype      go to state 431
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 432
    fnres             go to state 433


State 339

  189 fndcl: sym '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 434


State 340

  195 fnbody: '{' stmt_list . '}'
  254 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 405
    '}'  shift, and go to state 435


State 341

   70 if_stmt: LIF if_header loop_body elseif_list . else
   73 elseif_list: elseif_list . elseif

    LELSE  shift, and go to state 436

    $default  reduce using rule 74 (else)

    elseif  go to state 437
    else    go to state 438


State 342

   69 if_header: osimple_stmt ';' osimple_stmt .

    $default  reduce using rule 69 (if_header)


State 343

  221 packname: LNAME '.' . sym

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 439
    hidden_importsym  go to state 8


State 344

  220 packname: LNAME .
  221         | LNAME . '.' sym

    '.'  shift, and go to state 343

    $default  reduce using rule 220 (packname)


State 345

  225 interfacedcl: '(' packname . ')'

    ')'  shift, and go to state 440


State 346

  226 indcl: '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 441


State 347

  223 interfacedcl: new_name indcl .

    $default  reduce using rule 223 (interfacedcl)


State 348

  213 interfacedcl_list: interfacedcl_list ';' . interfacedcl
  270 osemi: ';' .

    LNAME  shift, and go to state 233
    '('    shift, and go to state 234
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    new_name          go to state 236
    sym               go to state 94
    hidden_importsym  go to state 8
    packname          go to state 238
    interfacedcl      go to state 442


State 349

  186 interfacetype: LINTERFACE lbrace interfacedcl_list osemi . '}'

    '}'  shift, and go to state 443


State 350

  179 othertype: LMAP '[' ntype ']' . ntype

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 444
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 351

   51 case: LCASE . expr_or_type_list ':'
   52     | LCASE . expr_or_type_list '=' expr ':'
   53     | LCASE . expr_or_type_list LCOLAS expr ':'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr               go to state 148
    uexpr              go to state 64
    pseudocall         go to state 65
    pexpr_no_paren     go to state 66
    pexpr              go to state 67
    expr_or_type       go to state 294
    sym                go to state 99
    hidden_importsym   go to state 8
    name               go to state 70
    non_expr_type      go to state 150
    convtype           go to state 72
    comptype           go to state 73
    othertype          go to state 151
    recvchantype       go to state 152
    structtype         go to state 75
    interfacetype      go to state 76
    fntype             go to state 153
    fnlitdcl           go to state 79
    fnliteral          go to state 80
    expr_or_type_list  go to state 445


State 352

   54 case: LDEFAULT . ':'

    ':'  shift, and go to state 446


State 353

   77 select_stmt: LSELECT '{' caseblock_list '}' .

    $default  reduce using rule 77 (select_stmt)


State 354

   57 caseblock: case . $@1 stmt_list

    $default  reduce using rule 56 ($@1)

    $@1  go to state 447


State 355

   59 caseblock_list: caseblock_list caseblock .

    $default  reduce using rule 59 (caseblock_list)


State 356

  219 structdcl: '*' '(' . embed ')' oliteral

    LNAME  shift, and go to state 344

    packname  go to state 248
    embed     go to state 448


State 357

  217 structdcl: '*' embed . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 449


State 358

  218 structdcl: '(' '*' . embed ')' oliteral

    LNAME  shift, and go to state 344

    packname  go to state 248
    embed     go to state 450


State 359

  216 structdcl: '(' embed . ')' oliteral

    ')'  shift, and go to state 451


State 360

  211 structdcl_list: structdcl_list ';' . structdcl
  270 osemi: ';' .

    LNAME  shift, and go to state 233
    '*'    shift, and go to state 242
    '('    shift, and go to state 243
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    new_name          go to state 245
    sym               go to state 94
    hidden_importsym  go to state 8
    structdcl         go to state 452
    packname          go to state 248
    embed             go to state 249
    new_name_list     go to state 250


State 361

  184 structtype: LSTRUCT lbrace structdcl_list osemi . '}'

    '}'  shift, and go to state 453


State 362

  286 oliteral: LLITERAL .

    $default  reduce using rule 286 (oliteral)


State 363

  215 structdcl: embed oliteral .

    $default  reduce using rule 215 (structdcl)


State 364

  256 new_name_list: new_name_list ',' . new_name

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    new_name          go to state 454
    sym               go to state 94
    hidden_importsym  go to state 8


State 365

  214 structdcl: new_name_list ntype . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 455


State 366

   59 caseblock_list: caseblock_list . caseblock
   76 switch_stmt: LSWITCH if_header '{' caseblock_list . '}'

    LCASE     shift, and go to state 351
    LDEFAULT  shift, and go to state 352
    '}'       shift, and go to state 456

    case       go to state 354
    caseblock  go to state 355


State 367

  209 typedcl_list: typedcl_list ';' . typedcl
  270 osemi: ';' .

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    typedclname       go to state 132
    typedcl           go to state 457
    sym               go to state 134
    hidden_importsym  go to state 8


State 368

   32 common_dcl: LTYPE '(' typedcl_list osemi . ')'

    ')'  shift, and go to state 458


State 369

  205 vardcl_list: vardcl_list ';' . vardcl
  270 osemi: ';' .

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    vardcl            go to state 459
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    dcl_name_list     go to state 139


State 370

   25 common_dcl: LVAR '(' vardcl_list osemi . ')'

    ')'  shift, and go to state 460


State 371

   37 vardcl: dcl_name_list '=' expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 37 (vardcl)


State 372

  258 dcl_name_list: dcl_name_list ',' dcl_name .

    $default  reduce using rule 258 (dcl_name_list)


State 373

   36 vardcl: dcl_name_list ntype '=' . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 461


State 374

  178 othertype: LCHAN LCOMM . ntype
  183 recvchantype: LCOMM . LCHAN ntype

    LCHAN       shift, and go to state 262
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 206
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 375

  155 ntype: '(' . ntype ')'
  164 non_recvchantype: '(' . ntype ')'

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 462
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 376

  183 recvchantype: LCOMM LCHAN ntype .

    $default  reduce using rule 183 (recvchantype)


State 377

  154 ntype: dotname .
  163 non_recvchantype: dotname .

    '('       reduce using rule 163 (non_recvchantype)
    '{'       reduce using rule 163 (non_recvchantype)
    $default  reduce using rule 154 (ntype)


State 378

  152 ntype: othertype .
  161 non_recvchantype: othertype .

    '('       reduce using rule 161 (non_recvchantype)
    '{'       reduce using rule 161 (non_recvchantype)
    $default  reduce using rule 152 (ntype)


State 379

  153 ntype: ptrtype .
  162 non_recvchantype: ptrtype .

    '('       reduce using rule 162 (non_recvchantype)
    '{'       reduce using rule 162 (non_recvchantype)
    $default  reduce using rule 153 (ntype)


State 380

  151 ntype: fntype .
  160 non_recvchantype: fntype .

    '('       reduce using rule 160 (non_recvchantype)
    '{'       reduce using rule 160 (non_recvchantype)
    $default  reduce using rule 151 (ntype)


State 381

  123 pexpr_no_paren: '(' expr_or_type ')' '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 125 (start_complit)

    start_complit  go to state 463


State 382

  176 othertype: '[' LDDD ']' ntype .

    $default  reduce using rule 176 (othertype)


State 383

  175 othertype: '[' oexpr ']' ntype .

    $default  reduce using rule 175 (othertype)


State 384

   29 common_dcl: lconst '(' constdcl ';' . constdcl_list osemi ')'
  270 osemi: ';' .

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    constdcl          go to state 464
    constdcl1         go to state 465
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    constdcl_list     go to state 466
    dcl_name_list     go to state 467


State 385

   28 common_dcl: lconst '(' constdcl osemi . ')'

    ')'  shift, and go to state 468


State 386

   39 constdcl: dcl_name_list '=' expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 39 (constdcl)


State 387

   38 constdcl: dcl_name_list ntype '=' . expr_list

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 125
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 469


State 388

  128 bare_complitexpr: '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 125 (start_complit)

    start_complit  go to state 470


State 389

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  126 keyval: expr . ':' complitexpr
  127 bare_complitexpr: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185
    ':'      shift, and go to state 471

    $default  reduce using rule 127 (bare_complitexpr)


State 390

  263 keyval_list: keyval .

    $default  reduce using rule 263 (keyval_list)


State 391

  264 keyval_list: bare_complitexpr .

    $default  reduce using rule 264 (keyval_list)


State 392

  265 keyval_list: keyval_list . ',' keyval
  266            | keyval_list . ',' bare_complitexpr
  268 braced_keyval_list: keyval_list . ocomma

    ','  shift, and go to state 472

    $default  reduce using rule 271 (ocomma)

    ocomma  go to state 473


State 393

  122 pexpr_no_paren: pexpr_no_paren '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 474


State 394

  110 pseudocall: pexpr '(' expr_or_type_list LDDD . ocomma ')'

    ','  shift, and go to state 402

    $default  reduce using rule 271 (ocomma)

    ocomma  go to state 475


State 395

  262 expr_or_type_list: expr_or_type_list ',' . expr_or_type
  272 ocomma: ',' .

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 272 (ocomma)

    expr              go to state 148
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    expr_or_type      go to state 476
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    non_expr_type     go to state 150
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 151
    recvchantype      go to state 152
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 153
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 396

  109 pseudocall: pexpr '(' expr_or_type_list ocomma . ')'

    ')'  shift, and go to state 477


State 397

  115 pexpr_no_paren: pexpr '.' '(' LTYPE . ')'

    ')'  shift, and go to state 478


State 398

  114 pexpr_no_paren: pexpr '.' '(' expr_or_type . ')'

    ')'  shift, and go to state 479


State 399

  116 pexpr_no_paren: pexpr '[' expr ']' .

    $default  reduce using rule 116 (pexpr_no_paren)


State 400

  117 pexpr_no_paren: pexpr '[' oexpr ':' . oexpr ']'
  118               | pexpr '[' oexpr ':' . oexpr ':' oexpr ']'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 273 (oexpr)

    expr              go to state 157
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    oexpr             go to state 480


State 401

   55 compound_stmt: '{' stmt_list . '}'
  254 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 405
    '}'  shift, and go to state 481


State 402

  272 ocomma: ',' .

    $default  reduce using rule 272 (ocomma)


State 403

  120 pexpr_no_paren: convtype '(' expr ocomma . ')'

    ')'  shift, and go to state 482


State 404

  121 pexpr_no_paren: comptype lbrace start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 483


State 405

  254 stmt_list: stmt_list ';' . stmt

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    LCASE     reduce using rule 235 (stmt)
    LDEFAULT  reduce using rule 235 (stmt)
    ';'       reduce using rule 235 (stmt)
    '}'       reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 484
    non_dcl_stmt      go to state 305
    expr_list         go to state 82


State 406

  200 fnliteral: fnlitdcl lbrace stmt_list '}' .

    $default  reduce using rule 200 (fnliteral)


State 407

   15 import_package: LPACKAGE LNAME import_safety ';' .

    $default  reduce using rule 15 (import_package)


State 408

  293 hidden_pkg_importsym: hidden_importsym .

    $default  reduce using rule 293 (hidden_pkg_importsym)


State 409

  289 hidden_import: LCONST hidden_pkg_importsym . '=' hidden_constant ';'
  290              | LCONST hidden_pkg_importsym . hidden_type '=' hidden_constant ';'

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '='         shift, and go to state 493
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 496
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 410

  192 hidden_fndcl: '(' . hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym                 go to state 500
    hidden_importsym    go to state 8
    hidden_funarg       go to state 501
    hidden_funarg_list  go to state 502


State 411

  292 hidden_import: LFUNC hidden_fndcl . fnbody ';'

    '{'  shift, and go to state 229

    $default  reduce using rule 194 (fnbody)

    fnbody  go to state 503


State 412

  191 hidden_fndcl: hidden_pkg_importsym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 504


State 413

  287 hidden_import: LIMPORT LNAME . LLITERAL ';'

    LLITERAL  shift, and go to state 505


State 414

  294 hidden_pkgtype: hidden_pkg_importsym .

    $default  reduce using rule 294 (hidden_pkgtype)


State 415

  291 hidden_import: LTYPE hidden_pkgtype . hidden_type ';'

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 506
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 416

  288 hidden_import: LVAR hidden_pkg_importsym . hidden_type ';'

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 507
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 417

   18 import_there: hidden_import_list '$' '$' .

    $default  reduce using rule 18 (import_there)


State 418

  193 fntype: LFUNC '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 425
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 196 (fnres)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    fnret_type        go to state 427
    dotname           go to state 428
    othertype         go to state 429
    ptrtype           go to state 430
    recvchantype      go to state 431
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 432
    fnres             go to state 433


State 419

  155 ntype: '(' ntype ')' .

    $default  reduce using rule 155 (ntype)


State 420

   60 loop_body: '{' stmt_list '}' .

    $default  reduce using rule 60 (loop_body)


State 421

   62 range_stmt: expr_list LCOLAS LRANGE expr .
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 62 (range_stmt)


State 422

   61 range_stmt: expr_list '=' LRANGE expr .
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 61 (range_stmt)


State 423

   63 for_header: osimple_stmt ';' osimple_stmt ';' . osimple_stmt

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 508


State 424

  232 arg_type_list: arg_type_list ',' arg_type .

    $default  reduce using rule 232 (arg_type_list)


State 425

  198 fnres: '(' . oarg_type_list_ocomma ')'

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 509


State 426

  146 name: sym .
  190 fndcl: '(' oarg_type_list_ocomma ')' sym . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 510

    $default  reduce using rule 146 (name)


State 427

  197 fnres: fnret_type .

    $default  reduce using rule 197 (fnres)


State 428

  172 fnret_type: dotname .

    $default  reduce using rule 172 (fnret_type)


State 429

  170 fnret_type: othertype .

    $default  reduce using rule 170 (fnret_type)


State 430

  171 fnret_type: ptrtype .

    $default  reduce using rule 171 (fnret_type)


State 431

  168 fnret_type: recvchantype .

    $default  reduce using rule 168 (fnret_type)


State 432

  169 fnret_type: fntype .

    $default  reduce using rule 169 (fnret_type)


State 433

  193 fntype: LFUNC '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 193 (fntype)


State 434

  189 fndcl: sym '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 425
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 196 (fnres)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    fnret_type        go to state 427
    dotname           go to state 428
    othertype         go to state 429
    ptrtype           go to state 430
    recvchantype      go to state 431
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 432
    fnres             go to state 511


State 435

  195 fnbody: '{' stmt_list '}' .

    $default  reduce using rule 195 (fnbody)


State 436

   71 elseif: LELSE . LIF if_header loop_body
   75 else: LELSE . compound_stmt

    LIF  shift, and go to state 512
    '{'  shift, and go to state 301

    compound_stmt  go to state 513


State 437

   73 elseif_list: elseif_list elseif .

    $default  reduce using rule 73 (elseif_list)


State 438

   70 if_stmt: LIF if_header loop_body elseif_list else .

    $default  reduce using rule 70 (if_stmt)


State 439

  221 packname: LNAME '.' sym .

    $default  reduce using rule 221 (packname)


State 440

  225 interfacedcl: '(' packname ')' .

    $default  reduce using rule 225 (interfacedcl)


State 441

  226 indcl: '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 514


State 442

  213 interfacedcl_list: interfacedcl_list ';' interfacedcl .

    $default  reduce using rule 213 (interfacedcl_list)


State 443

  186 interfacetype: LINTERFACE lbrace interfacedcl_list osemi '}' .

    $default  reduce using rule 186 (interfacetype)


State 444

  179 othertype: LMAP '[' ntype ']' ntype .

    $default  reduce using rule 179 (othertype)


State 445

   51 case: LCASE expr_or_type_list . ':'
   52     | LCASE expr_or_type_list . '=' expr ':'
   53     | LCASE expr_or_type_list . LCOLAS expr ':'
  262 expr_or_type_list: expr_or_type_list . ',' expr_or_type

    LCOLAS  shift, and go to state 515
    '='     shift, and go to state 516
    ':'     shift, and go to state 517
    ','     shift, and go to state 518


State 446

   54 case: LDEFAULT ':' .

    $default  reduce using rule 54 (case)


State 447

   57 caseblock: case $@1 . stmt_list

    error       shift, and go to state 300
    LLITERAL    shift, and go to state 25
    LBREAK      shift, and go to state 26
    LCHAN       shift, and go to state 27
    LCONST      shift, and go to state 28
    LCONTINUE   shift, and go to state 29
    LDEFER      shift, and go to state 30
    LFALL       shift, and go to state 31
    LFOR        shift, and go to state 32
    LFUNC       shift, and go to state 95
    LGO         shift, and go to state 34
    LGOTO       shift, and go to state 35
    LIF         shift, and go to state 36
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LRETURN     shift, and go to state 39
    LSELECT     shift, and go to state 40
    LSTRUCT     shift, and go to state 41
    LSWITCH     shift, and go to state 42
    LTYPE       shift, and go to state 43
    LVAR        shift, and go to state 44
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 301
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    LCASE     reduce using rule 235 (stmt)
    LDEFAULT  reduce using rule 235 (stmt)
    ';'       reduce using rule 235 (stmt)
    '}'       reduce using rule 235 (stmt)

    common_dcl        go to state 302
    lconst            go to state 57
    simple_stmt       go to state 58
    compound_stmt     go to state 303
    for_stmt          go to state 59
    if_stmt           go to state 60
    switch_stmt       go to state 61
    select_stmt       go to state 62
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    new_name          go to state 68
    sym               go to state 69
    hidden_importsym  go to state 8
    name              go to state 70
    labelname         go to state 71
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    stmt              go to state 308
    non_dcl_stmt      go to state 305
    stmt_list         go to state 519
    expr_list         go to state 82


State 448

  219 structdcl: '*' '(' embed . ')' oliteral

    ')'  shift, and go to state 520


State 449

  217 structdcl: '*' embed oliteral .

    $default  reduce using rule 217 (structdcl)


State 450

  218 structdcl: '(' '*' embed . ')' oliteral

    ')'  shift, and go to state 521


State 451

  216 structdcl: '(' embed ')' . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 522


State 452

  211 structdcl_list: structdcl_list ';' structdcl .

    $default  reduce using rule 211 (structdcl_list)


State 453

  184 structtype: LSTRUCT lbrace structdcl_list osemi '}' .

    $default  reduce using rule 184 (structtype)


State 454

  256 new_name_list: new_name_list ',' new_name .

    $default  reduce using rule 256 (new_name_list)


State 455

  214 structdcl: new_name_list ntype oliteral .

    $default  reduce using rule 214 (structdcl)


State 456

   76 switch_stmt: LSWITCH if_header '{' caseblock_list '}' .

    $default  reduce using rule 76 (switch_stmt)


State 457

  209 typedcl_list: typedcl_list ';' typedcl .

    $default  reduce using rule 209 (typedcl_list)


State 458

   32 common_dcl: LTYPE '(' typedcl_list osemi ')' .

    $default  reduce using rule 32 (common_dcl)


State 459

  205 vardcl_list: vardcl_list ';' vardcl .

    $default  reduce using rule 205 (vardcl_list)


State 460

   25 common_dcl: LVAR '(' vardcl_list osemi ')' .

    $default  reduce using rule 25 (common_dcl)


State 461

   36 vardcl: dcl_name_list ntype '=' expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 36 (vardcl)


State 462

  155 ntype: '(' ntype . ')'
  164 non_recvchantype: '(' ntype . ')'

    ')'  shift, and go to state 523


State 463

  123 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 267 (braced_keyval_list)

    expr                go to state 389
    uexpr               go to state 64
    pseudocall          go to state 65
    pexpr_no_paren      go to state 66
    keyval              go to state 390
    bare_complitexpr    go to state 391
    pexpr               go to state 67
    sym                 go to state 99
    hidden_importsym    go to state 8
    name                go to state 70
    convtype            go to state 72
    comptype            go to state 73
    othertype           go to state 74
    structtype          go to state 75
    interfacetype       go to state 76
    fntype              go to state 78
    fnlitdcl            go to state 79
    fnliteral           go to state 80
    keyval_list         go to state 392
    braced_keyval_list  go to state 524


State 464

   40 constdcl1: constdcl .

    $default  reduce using rule 40 (constdcl1)


State 465

  206 constdcl_list: constdcl1 .

    $default  reduce using rule 206 (constdcl_list)


State 466

   29 common_dcl: lconst '(' constdcl ';' constdcl_list . osemi ')'
  207 constdcl_list: constdcl_list . ';' constdcl1

    ';'  shift, and go to state 525

    $default  reduce using rule 269 (osemi)

    osemi  go to state 526


State 467

   38 constdcl: dcl_name_list . ntype '=' expr_list
   39         | dcl_name_list . '=' expr_list
   41 constdcl1: dcl_name_list . ntype
   42          | dcl_name_list .
  258 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '='         shift, and go to state 269
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6
    ','         shift, and go to state 260

    $default  reduce using rule 42 (constdcl1)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    ntype             go to state 527
    dotname           go to state 207
    othertype         go to state 208
    ptrtype           go to state 209
    recvchantype      go to state 210
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 211


State 468

   28 common_dcl: lconst '(' constdcl osemi ')' .

    $default  reduce using rule 28 (common_dcl)


State 469

   38 constdcl: dcl_name_list ntype '=' expr_list .
  260 expr_list: expr_list . ',' expr

    ','  shift, and go to state 197

    $default  reduce using rule 38 (constdcl)


State 470

  128 bare_complitexpr: '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 267 (braced_keyval_list)

    expr                go to state 389
    uexpr               go to state 64
    pseudocall          go to state 65
    pexpr_no_paren      go to state 66
    keyval              go to state 390
    bare_complitexpr    go to state 391
    pexpr               go to state 67
    sym                 go to state 99
    hidden_importsym    go to state 8
    name                go to state 70
    convtype            go to state 72
    comptype            go to state 73
    othertype           go to state 74
    structtype          go to state 75
    interfacetype       go to state 76
    fntype              go to state 78
    fnlitdcl            go to state 79
    fnliteral           go to state 80
    keyval_list         go to state 392
    braced_keyval_list  go to state 528


State 471

  126 keyval: expr ':' . complitexpr

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 529
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 530
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    complitexpr       go to state 531
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 472

  265 keyval_list: keyval_list ',' . keyval
  266            | keyval_list ',' . bare_complitexpr
  272 ocomma: ',' .

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 272 (ocomma)

    expr              go to state 389
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    keyval            go to state 532
    bare_complitexpr  go to state 533
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 473

  268 braced_keyval_list: keyval_list ocomma .

    $default  reduce using rule 268 (braced_keyval_list)


State 474

  122 pexpr_no_paren: pexpr_no_paren '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 122 (pexpr_no_paren)


State 475

  110 pseudocall: pexpr '(' expr_or_type_list LDDD ocomma . ')'

    ')'  shift, and go to state 534


State 476

  262 expr_or_type_list: expr_or_type_list ',' expr_or_type .

    $default  reduce using rule 262 (expr_or_type_list)


State 477

  109 pseudocall: pexpr '(' expr_or_type_list ocomma ')' .

    $default  reduce using rule 109 (pseudocall)


State 478

  115 pexpr_no_paren: pexpr '.' '(' LTYPE ')' .

    $default  reduce using rule 115 (pexpr_no_paren)


State 479

  114 pexpr_no_paren: pexpr '.' '(' expr_or_type ')' .

    $default  reduce using rule 114 (pexpr_no_paren)


State 480

  117 pexpr_no_paren: pexpr '[' oexpr ':' oexpr . ']'
  118               | pexpr '[' oexpr ':' oexpr . ':' oexpr ']'

    ':'  shift, and go to state 535
    ']'  shift, and go to state 536


State 481

   55 compound_stmt: '{' stmt_list '}' .

    $default  reduce using rule 55 (compound_stmt)


State 482

  120 pexpr_no_paren: convtype '(' expr ocomma ')' .

    $default  reduce using rule 120 (pexpr_no_paren)


State 483

  121 pexpr_no_paren: comptype lbrace start_complit braced_keyval_list '}' .

    $default  reduce using rule 121 (pexpr_no_paren)


State 484

  254 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 254 (stmt_list)


State 485

  308 hidden_type_misc: LCHAN . hidden_type_non_recv_chan
  309                 | LCHAN . '(' hidden_type_recv_chan ')'
  310                 | LCHAN . LCOMM hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 537
    '*'         shift, and go to state 492
    '('         shift, and go to state 538
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym           go to state 495
    hidden_type_non_recv_chan  go to state 539
    hidden_type_misc           go to state 540
    hidden_type_func           go to state 541


State 486

  312 hidden_type_func: LFUNC . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 542


State 487

  306 hidden_type_misc: LINTERFACE . '{' ohidden_interfacedcl_list '}'

    '{'  shift, and go to state 543


State 488

  304 hidden_type_misc: LMAP . '[' hidden_type ']' hidden_type

    '['  shift, and go to state 544


State 489

  301 hidden_type_misc: LNAME .

    $default  reduce using rule 301 (hidden_type_misc)


State 490

  305 hidden_type_misc: LSTRUCT . '{' ohidden_structdcl_list '}'

    '{'  shift, and go to state 545


State 491

  311 hidden_type_recv_chan: LCOMM . LCHAN hidden_type

    LCHAN  shift, and go to state 546


State 492

  307 hidden_type_misc: '*' . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 547
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 493

  289 hidden_import: LCONST hidden_pkg_importsym '=' . hidden_constant ';'

    LLITERAL  shift, and go to state 548
    LNAME     shift, and go to state 4
    '-'       shift, and go to state 549
    '('       shift, and go to state 550
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    sym               go to state 551
    hidden_importsym  go to state 8
    hidden_literal    go to state 552
    hidden_constant   go to state 553


State 494

  302 hidden_type_misc: '[' . ']' hidden_type
  303                 | '[' . LLITERAL ']' hidden_type

    LLITERAL  shift, and go to state 554
    ']'       shift, and go to state 555


State 495

  300 hidden_type_misc: hidden_importsym .

    $default  reduce using rule 300 (hidden_type_misc)


State 496

  290 hidden_import: LCONST hidden_pkg_importsym hidden_type . '=' hidden_constant ';'

    '='  shift, and go to state 556


State 497

  295 hidden_type: hidden_type_misc .

    $default  reduce using rule 295 (hidden_type)


State 498

  296 hidden_type: hidden_type_recv_chan .

    $default  reduce using rule 296 (hidden_type)


State 499

  297 hidden_type: hidden_type_func .

    $default  reduce using rule 297 (hidden_type)


State 500

  313 hidden_funarg: sym . hidden_type oliteral
  314              | sym . LDDD hidden_type oliteral

    LCHAN       shift, and go to state 485
    LDDD        shift, and go to state 557
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 558
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 501

  329 hidden_funarg_list: hidden_funarg .

    $default  reduce using rule 329 (hidden_funarg_list)


State 502

  192 hidden_fndcl: '(' hidden_funarg_list . ')' sym '(' ohidden_funarg_list ')' ohidden_funres
  330 hidden_funarg_list: hidden_funarg_list . ',' hidden_funarg

    ')'  shift, and go to state 559
    ','  shift, and go to state 560


State 503

  292 hidden_import: LFUNC hidden_fndcl fnbody . ';'

    ';'  shift, and go to state 561


State 504

  191 hidden_fndcl: hidden_pkg_importsym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 279 (ohidden_funarg_list)

    sym                  go to state 500
    hidden_importsym     go to state 8
    ohidden_funarg_list  go to state 562
    hidden_funarg        go to state 501
    hidden_funarg_list   go to state 563


State 505

  287 hidden_import: LIMPORT LNAME LLITERAL . ';'

    ';'  shift, and go to state 564


State 506

  291 hidden_import: LTYPE hidden_pkgtype hidden_type . ';'

    ';'  shift, and go to state 565


State 507

  288 hidden_import: LVAR hidden_pkg_importsym hidden_type . ';'

    ';'  shift, and go to state 566


State 508

   63 for_header: osimple_stmt ';' osimple_stmt ';' osimple_stmt .

    $default  reduce using rule 63 (for_header)


State 509

  198 fnres: '(' oarg_type_list_ocomma . ')'

    ')'  shift, and go to state 567


State 510

  190 fndcl: '(' oarg_type_list_ocomma ')' sym '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 27
    LDDD        shift, and go to state 220
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 205
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 233 (oarg_type_list_ocomma)

    name_or_type           go to state 221
    sym                    go to state 222
    hidden_importsym       go to state 8
    name                   go to state 100
    dotdotdot              go to state 223
    ntype                  go to state 224
    dotname                go to state 207
    othertype              go to state 208
    ptrtype                go to state 209
    recvchantype           go to state 210
    structtype             go to state 75
    interfacetype          go to state 76
    fntype                 go to state 211
    arg_type               go to state 225
    arg_type_list          go to state 226
    oarg_type_list_ocomma  go to state 568


State 511

  189 fndcl: sym '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 189 (fndcl)


State 512

   71 elseif: LELSE LIF . if_header loop_body

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 277 (osimple_stmt)

    simple_stmt       go to state 109
    if_header         go to state 569
    expr              go to state 63
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    expr_list         go to state 82
    osimple_stmt      go to state 121


State 513

   75 else: LELSE compound_stmt .

    $default  reduce using rule 75 (else)


State 514

  226 indcl: '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 425
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 196 (fnres)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    fnret_type        go to state 427
    dotname           go to state 428
    othertype         go to state 429
    ptrtype           go to state 430
    recvchantype      go to state 431
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 432
    fnres             go to state 570


State 515

   53 case: LCASE expr_or_type_list LCOLAS . expr ':'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 571
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 516

   52 case: LCASE expr_or_type_list '=' . expr ':'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 572
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 517

   51 case: LCASE expr_or_type_list ':' .

    $default  reduce using rule 51 (case)


State 518

  262 expr_or_type_list: expr_or_type_list ',' . expr_or_type

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 146
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 147
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    expr              go to state 148
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    expr_or_type      go to state 476
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    non_expr_type     go to state 150
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 151
    recvchantype      go to state 152
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 153
    fnlitdcl          go to state 79
    fnliteral         go to state 80


State 519

   57 caseblock: case $@1 stmt_list .
  254 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 405

    $default  reduce using rule 57 (caseblock)


State 520

  219 structdcl: '*' '(' embed ')' . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 573


State 521

  218 structdcl: '(' '*' embed ')' . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 574


State 522

  216 structdcl: '(' embed ')' oliteral .

    $default  reduce using rule 216 (structdcl)


State 523

  155 ntype: '(' ntype ')' .
  164 non_recvchantype: '(' ntype ')' .

    '('       reduce using rule 164 (non_recvchantype)
    '{'       reduce using rule 164 (non_recvchantype)
    $default  reduce using rule 155 (ntype)


State 524

  123 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 575


State 525

  207 constdcl_list: constdcl_list ';' . constdcl1
  270 osemi: ';' .

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 270 (osemi)

    constdcl          go to state 464
    constdcl1         go to state 576
    dcl_name          go to state 137
    sym               go to state 138
    hidden_importsym  go to state 8
    dcl_name_list     go to state 467


State 526

   29 common_dcl: lconst '(' constdcl ';' constdcl_list osemi . ')'

    ')'  shift, and go to state 577


State 527

   38 constdcl: dcl_name_list ntype . '=' expr_list
   41 constdcl1: dcl_name_list ntype .

    '='  shift, and go to state 387

    $default  reduce using rule 41 (constdcl1)


State 528

  128 bare_complitexpr: '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 578


State 529

  130 complitexpr: '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 125 (start_complit)

    start_complit  go to state 579


State 530

   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr
  129 complitexpr: expr .

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185

    $default  reduce using rule 129 (complitexpr)


State 531

  126 keyval: expr ':' complitexpr .

    $default  reduce using rule 126 (keyval)


State 532

  265 keyval_list: keyval_list ',' keyval .

    $default  reduce using rule 265 (keyval_list)


State 533

  266 keyval_list: keyval_list ',' bare_complitexpr .

    $default  reduce using rule 266 (keyval_list)


State 534

  110 pseudocall: pexpr '(' expr_or_type_list LDDD ocomma ')' .

    $default  reduce using rule 110 (pseudocall)


State 535

  118 pexpr_no_paren: pexpr '[' oexpr ':' oexpr ':' . oexpr ']'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 273 (oexpr)

    expr              go to state 157
    uexpr             go to state 64
    pseudocall        go to state 65
    pexpr_no_paren    go to state 66
    pexpr             go to state 67
    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 70
    convtype          go to state 72
    comptype          go to state 73
    othertype         go to state 74
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 78
    fnlitdcl          go to state 79
    fnliteral         go to state 80
    oexpr             go to state 580


State 536

  117 pexpr_no_paren: pexpr '[' oexpr ':' oexpr ']' .

    $default  reduce using rule 117 (pexpr_no_paren)


State 537

  310 hidden_type_misc: LCHAN LCOMM . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 581
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 538

  309 hidden_type_misc: LCHAN '(' . hidden_type_recv_chan ')'

    LCOMM  shift, and go to state 491

    hidden_type_recv_chan  go to state 582


State 539

  308 hidden_type_misc: LCHAN hidden_type_non_recv_chan .

    $default  reduce using rule 308 (hidden_type_misc)


State 540

  298 hidden_type_non_recv_chan: hidden_type_misc .

    $default  reduce using rule 298 (hidden_type_non_recv_chan)


State 541

  299 hidden_type_non_recv_chan: hidden_type_func .

    $default  reduce using rule 299 (hidden_type_non_recv_chan)


State 542

  312 hidden_type_func: LFUNC '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 279 (ohidden_funarg_list)

    sym                  go to state 500
    hidden_importsym     go to state 8
    ohidden_funarg_list  go to state 583
    hidden_funarg        go to state 501
    hidden_funarg_list   go to state 563


State 543

  306 hidden_type_misc: LINTERFACE '{' . ohidden_interfacedcl_list '}'

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 584
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 283 (ohidden_interfacedcl_list)

    sym                        go to state 585
    hidden_importsym           go to state 586
    ohidden_interfacedcl_list  go to state 587
    hidden_type                go to state 588
    hidden_type_misc           go to state 497
    hidden_type_recv_chan      go to state 498
    hidden_type_func           go to state 499
    hidden_interfacedcl        go to state 589
    hidden_interfacedcl_list   go to state 590


State 544

  304 hidden_type_misc: LMAP '[' . hidden_type ']' hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 591
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 545

  305 hidden_type_misc: LSTRUCT '{' . ohidden_structdcl_list '}'

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 281 (ohidden_structdcl_list)

    sym                     go to state 592
    hidden_importsym        go to state 8
    ohidden_structdcl_list  go to state 593
    hidden_structdcl        go to state 594
    hidden_structdcl_list   go to state 595


State 546

  311 hidden_type_recv_chan: LCOMM LCHAN . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 596
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 547

  307 hidden_type_misc: '*' hidden_type .

    $default  reduce using rule 307 (hidden_type_misc)


State 548

  322 hidden_literal: LLITERAL .

    $default  reduce using rule 322 (hidden_literal)


State 549

  323 hidden_literal: '-' . LLITERAL

    LLITERAL  shift, and go to state 597


State 550

  326 hidden_constant: '(' . hidden_literal '+' hidden_literal ')'

    LLITERAL  shift, and go to state 548
    LNAME     shift, and go to state 4
    '-'       shift, and go to state 549
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    sym               go to state 551
    hidden_importsym  go to state 8
    hidden_literal    go to state 598


State 551

  324 hidden_literal: sym .

    $default  reduce using rule 324 (hidden_literal)


State 552

  325 hidden_constant: hidden_literal .

    $default  reduce using rule 325 (hidden_constant)


State 553

  289 hidden_import: LCONST hidden_pkg_importsym '=' hidden_constant . ';'

    ';'  shift, and go to state 599


State 554

  303 hidden_type_misc: '[' LLITERAL . ']' hidden_type

    ']'  shift, and go to state 600


State 555

  302 hidden_type_misc: '[' ']' . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 601
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 556

  290 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' . hidden_constant ';'

    LLITERAL  shift, and go to state 548
    LNAME     shift, and go to state 4
    '-'       shift, and go to state 549
    '('       shift, and go to state 550
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    sym               go to state 551
    hidden_importsym  go to state 8
    hidden_literal    go to state 552
    hidden_constant   go to state 602


State 557

  314 hidden_funarg: sym LDDD . hidden_type oliteral

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 603
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 558

  313 hidden_funarg: sym hidden_type . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 604


State 559

  192 hidden_fndcl: '(' hidden_funarg_list ')' . sym '(' ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 605
    hidden_importsym  go to state 8


State 560

  330 hidden_funarg_list: hidden_funarg_list ',' . hidden_funarg

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 500
    hidden_importsym  go to state 8
    hidden_funarg     go to state 606


State 561

  292 hidden_import: LFUNC hidden_fndcl fnbody ';' .

    $default  reduce using rule 292 (hidden_import)


State 562

  191 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 607


State 563

  280 ohidden_funarg_list: hidden_funarg_list .
  330 hidden_funarg_list: hidden_funarg_list . ',' hidden_funarg

    ','  shift, and go to state 560

    $default  reduce using rule 280 (ohidden_funarg_list)


State 564

  287 hidden_import: LIMPORT LNAME LLITERAL ';' .

    $default  reduce using rule 287 (hidden_import)


State 565

  291 hidden_import: LTYPE hidden_pkgtype hidden_type ';' .

    $default  reduce using rule 291 (hidden_import)


State 566

  288 hidden_import: LVAR hidden_pkg_importsym hidden_type ';' .

    $default  reduce using rule 288 (hidden_import)


State 567

  198 fnres: '(' oarg_type_list_ocomma ')' .

    $default  reduce using rule 198 (fnres)


State 568

  190 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 608


State 569

   71 elseif: LELSE LIF if_header . loop_body

    '{'  shift, and go to state 215

    loop_body  go to state 609


State 570

  226 indcl: '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 226 (indcl)


State 571

   53 case: LCASE expr_or_type_list LCOLAS expr . ':'
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185
    ':'      shift, and go to state 610


State 572

   52 case: LCASE expr_or_type_list '=' expr . ':'
   79 expr: expr . LOROR expr
   80     | expr . LANDAND expr
   81     | expr . LEQ expr
   82     | expr . LNE expr
   83     | expr . LLT expr
   84     | expr . LLE expr
   85     | expr . LGE expr
   86     | expr . LGT expr
   87     | expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '|' expr
   90     | expr . '^' expr
   91     | expr . '*' expr
   92     | expr . '/' expr
   93     | expr . '%' expr
   94     | expr . '&' expr
   95     | expr . LANDNOT expr
   96     | expr . LLSH expr
   97     | expr . LRSH expr
   98     | expr . LCOMM expr

    LANDAND  shift, and go to state 164
    LANDNOT  shift, and go to state 165
    LCOMM    shift, and go to state 166
    LEQ      shift, and go to state 168
    LGE      shift, and go to state 169
    LGT      shift, and go to state 170
    LLE      shift, and go to state 172
    LLSH     shift, and go to state 173
    LLT      shift, and go to state 174
    LNE      shift, and go to state 175
    LOROR    shift, and go to state 176
    LRSH     shift, and go to state 177
    '+'      shift, and go to state 178
    '-'      shift, and go to state 179
    '|'      shift, and go to state 180
    '^'      shift, and go to state 181
    '*'      shift, and go to state 182
    '/'      shift, and go to state 183
    '%'      shift, and go to state 184
    '&'      shift, and go to state 185
    ':'      shift, and go to state 611


State 573

  219 structdcl: '*' '(' embed ')' oliteral .

    $default  reduce using rule 219 (structdcl)


State 574

  218 structdcl: '(' '*' embed ')' oliteral .

    $default  reduce using rule 218 (structdcl)


State 575

  123 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 123 (pexpr_no_paren)


State 576

  207 constdcl_list: constdcl_list ';' constdcl1 .

    $default  reduce using rule 207 (constdcl_list)


State 577

   29 common_dcl: lconst '(' constdcl ';' constdcl_list osemi ')' .

    $default  reduce using rule 29 (common_dcl)


State 578

  128 bare_complitexpr: '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 128 (bare_complitexpr)


State 579

  130 complitexpr: '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 25
    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47
    '^'         shift, and go to state 48
    '*'         shift, and go to state 49
    '&'         shift, and go to state 50
    '('         shift, and go to state 51
    '{'         shift, and go to state 388
    '!'         shift, and go to state 52
    '~'         shift, and go to state 53
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 267 (braced_keyval_list)

    expr                go to state 389
    uexpr               go to state 64
    pseudocall          go to state 65
    pexpr_no_paren      go to state 66
    keyval              go to state 390
    bare_complitexpr    go to state 391
    pexpr               go to state 67
    sym                 go to state 99
    hidden_importsym    go to state 8
    name                go to state 70
    convtype            go to state 72
    comptype            go to state 73
    othertype           go to state 74
    structtype          go to state 75
    interfacetype       go to state 76
    fntype              go to state 78
    fnlitdcl            go to state 79
    fnliteral           go to state 80
    keyval_list         go to state 392
    braced_keyval_list  go to state 612


State 580

  118 pexpr_no_paren: pexpr '[' oexpr ':' oexpr ':' oexpr . ']'

    ']'  shift, and go to state 613


State 581

  310 hidden_type_misc: LCHAN LCOMM hidden_type .

    $default  reduce using rule 310 (hidden_type_misc)


State 582

  309 hidden_type_misc: LCHAN '(' hidden_type_recv_chan . ')'

    ')'  shift, and go to state 614


State 583

  312 hidden_type_func: LFUNC '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 615


State 584

  141 sym: LNAME .
  301 hidden_type_misc: LNAME .

    '('       reduce using rule 141 (sym)
    $default  reduce using rule 301 (hidden_type_misc)


State 585

  316 hidden_interfacedcl: sym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 616


State 586

  142 sym: hidden_importsym .
  300 hidden_type_misc: hidden_importsym .

    '('       reduce using rule 142 (sym)
    $default  reduce using rule 300 (hidden_type_misc)


State 587

  306 hidden_type_misc: LINTERFACE '{' ohidden_interfacedcl_list . '}'

    '}'  shift, and go to state 617


State 588

  317 hidden_interfacedcl: hidden_type .

    $default  reduce using rule 317 (hidden_interfacedcl)


State 589

  333 hidden_interfacedcl_list: hidden_interfacedcl .

    $default  reduce using rule 333 (hidden_interfacedcl_list)


State 590

  284 ohidden_interfacedcl_list: hidden_interfacedcl_list .
  334 hidden_interfacedcl_list: hidden_interfacedcl_list . ';' hidden_interfacedcl

    ';'  shift, and go to state 618

    $default  reduce using rule 284 (ohidden_interfacedcl_list)


State 591

  304 hidden_type_misc: LMAP '[' hidden_type . ']' hidden_type

    ']'  shift, and go to state 619


State 592

  315 hidden_structdcl: sym . hidden_type oliteral

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 620
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 593

  305 hidden_type_misc: LSTRUCT '{' ohidden_structdcl_list . '}'

    '}'  shift, and go to state 621


State 594

  331 hidden_structdcl_list: hidden_structdcl .

    $default  reduce using rule 331 (hidden_structdcl_list)


State 595

  282 ohidden_structdcl_list: hidden_structdcl_list .
  332 hidden_structdcl_list: hidden_structdcl_list . ';' hidden_structdcl

    ';'  shift, and go to state 622

    $default  reduce using rule 282 (ohidden_structdcl_list)


State 596

  311 hidden_type_recv_chan: LCOMM LCHAN hidden_type .

    $default  reduce using rule 311 (hidden_type_recv_chan)


State 597

  323 hidden_literal: '-' LLITERAL .

    $default  reduce using rule 323 (hidden_literal)


State 598

  326 hidden_constant: '(' hidden_literal . '+' hidden_literal ')'

    '+'  shift, and go to state 623


State 599

  289 hidden_import: LCONST hidden_pkg_importsym '=' hidden_constant ';' .

    $default  reduce using rule 289 (hidden_import)


State 600

  303 hidden_type_misc: '[' LLITERAL ']' . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 624
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 601

  302 hidden_type_misc: '[' ']' hidden_type .

    $default  reduce using rule 302 (hidden_type_misc)


State 602

  290 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' hidden_constant . ';'

    ';'  shift, and go to state 625


State 603

  314 hidden_funarg: sym LDDD hidden_type . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 626


State 604

  313 hidden_funarg: sym hidden_type oliteral .

    $default  reduce using rule 313 (hidden_funarg)


State 605

  192 hidden_fndcl: '(' hidden_funarg_list ')' sym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 627


State 606

  330 hidden_funarg_list: hidden_funarg_list ',' hidden_funarg .

    $default  reduce using rule 330 (hidden_funarg_list)


State 607

  191 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '('         shift, and go to state 628
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    $default  reduce using rule 318 (ohidden_funres)

    hidden_importsym       go to state 495
    hidden_type            go to state 629
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499
    ohidden_funres         go to state 630
    hidden_funres          go to state 631


State 608

  190 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 27
    LFUNC       shift, and go to state 95
    LINTERFACE  shift, and go to state 37
    LMAP        shift, and go to state 38
    LNAME       shift, and go to state 4
    LSTRUCT     shift, and go to state 41
    LCOMM       shift, and go to state 204
    '*'         shift, and go to state 97
    '('         shift, and go to state 425
    '['         shift, and go to state 54
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    $default  reduce using rule 196 (fnres)

    sym               go to state 99
    hidden_importsym  go to state 8
    name              go to state 100
    fnret_type        go to state 427
    dotname           go to state 428
    othertype         go to state 429
    ptrtype           go to state 430
    recvchantype      go to state 431
    structtype        go to state 75
    interfacetype     go to state 76
    fntype            go to state 432
    fnres             go to state 632


State 609

   71 elseif: LELSE LIF if_header loop_body .

    $default  reduce using rule 71 (elseif)


State 610

   53 case: LCASE expr_or_type_list LCOLAS expr ':' .

    $default  reduce using rule 53 (case)


State 611

   52 case: LCASE expr_or_type_list '=' expr ':' .

    $default  reduce using rule 52 (case)


State 612

  130 complitexpr: '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 633


State 613

  118 pexpr_no_paren: pexpr '[' oexpr ':' oexpr ':' oexpr ']' .

    $default  reduce using rule 118 (pexpr_no_paren)


State 614

  309 hidden_type_misc: LCHAN '(' hidden_type_recv_chan ')' .

    $default  reduce using rule 309 (hidden_type_misc)


State 615

  312 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '('         shift, and go to state 628
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    $default  reduce using rule 318 (ohidden_funres)

    hidden_importsym       go to state 495
    hidden_type            go to state 629
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499
    ohidden_funres         go to state 634
    hidden_funres          go to state 631


State 616

  316 hidden_interfacedcl: sym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 279 (ohidden_funarg_list)

    sym                  go to state 500
    hidden_importsym     go to state 8
    ohidden_funarg_list  go to state 635
    hidden_funarg        go to state 501
    hidden_funarg_list   go to state 563


State 617

  306 hidden_type_misc: LINTERFACE '{' ohidden_interfacedcl_list '}' .

    $default  reduce using rule 306 (hidden_type_misc)


State 618

  334 hidden_interfacedcl_list: hidden_interfacedcl_list ';' . hidden_interfacedcl

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 584
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '?'         shift, and go to state 5
    '@'         shift, and go to state 6

    sym                    go to state 585
    hidden_importsym       go to state 586
    hidden_type            go to state 588
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499
    hidden_interfacedcl    go to state 636


State 619

  304 hidden_type_misc: LMAP '[' hidden_type ']' . hidden_type

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    hidden_importsym       go to state 495
    hidden_type            go to state 637
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499


State 620

  315 hidden_structdcl: sym hidden_type . oliteral

    LLITERAL  shift, and go to state 362

    $default  reduce using rule 285 (oliteral)

    oliteral  go to state 638


State 621

  305 hidden_type_misc: LSTRUCT '{' ohidden_structdcl_list '}' .

    $default  reduce using rule 305 (hidden_type_misc)


State 622

  332 hidden_structdcl_list: hidden_structdcl_list ';' . hidden_structdcl

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    sym               go to state 592
    hidden_importsym  go to state 8
    hidden_structdcl  go to state 639


State 623

  326 hidden_constant: '(' hidden_literal '+' . hidden_literal ')'

    LLITERAL  shift, and go to state 548
    LNAME     shift, and go to state 4
    '-'       shift, and go to state 549
    '?'       shift, and go to state 5
    '@'       shift, and go to state 6

    sym               go to state 551
    hidden_importsym  go to state 8
    hidden_literal    go to state 640


State 624

  303 hidden_type_misc: '[' LLITERAL ']' hidden_type .

    $default  reduce using rule 303 (hidden_type_misc)


State 625

  290 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';' .

    $default  reduce using rule 290 (hidden_import)


State 626

  314 hidden_funarg: sym LDDD hidden_type oliteral .

    $default  reduce using rule 314 (hidden_funarg)


State 627

  192 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 279 (ohidden_funarg_list)

    sym                  go to state 500
    hidden_importsym     go to state 8
    ohidden_funarg_list  go to state 641
    hidden_funarg        go to state 501
    hidden_funarg_list   go to state 563


State 628

  320 hidden_funres: '(' . ohidden_funarg_list ')'

    LNAME  shift, and go to state 4
    '?'    shift, and go to state 5
    '@'    shift, and go to state 6

    $default  reduce using rule 279 (ohidden_funarg_list)

    sym                  go to state 500
    hidden_importsym     go to state 8
    ohidden_funarg_list  go to state 642
    hidden_funarg        go to state 501
    hidden_funarg_list   go to state 563


State 629

  321 hidden_funres: hidden_type .

    $default  reduce using rule 321 (hidden_funres)


State 630

  191 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 191 (hidden_fndcl)


State 631

  319 ohidden_funres: hidden_funres .

    $default  reduce using rule 319 (ohidden_funres)


State 632

  190 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 190 (fndcl)


State 633

  130 complitexpr: '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 130 (complitexpr)


State 634

  312 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 312 (hidden_type_func)


State 635

  316 hidden_interfacedcl: sym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 643


State 636

  334 hidden_interfacedcl_list: hidden_interfacedcl_list ';' hidden_interfacedcl .

    $default  reduce using rule 334 (hidden_interfacedcl_list)


State 637

  304 hidden_type_misc: LMAP '[' hidden_type ']' hidden_type .

    $default  reduce using rule 304 (hidden_type_misc)


State 638

  315 hidden_structdcl: sym hidden_type oliteral .

    $default  reduce using rule 315 (hidden_structdcl)


State 639

  332 hidden_structdcl_list: hidden_structdcl_list ';' hidden_structdcl .

    $default  reduce using rule 332 (hidden_structdcl_list)


State 640

  326 hidden_constant: '(' hidden_literal '+' hidden_literal . ')'

    ')'  shift, and go to state 644


State 641

  192 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 645


State 642

  320 hidden_funres: '(' ohidden_funarg_list . ')'

    ')'  shift, and go to state 646


State 643

  316 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '('         shift, and go to state 628
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    $default  reduce using rule 318 (ohidden_funres)

    hidden_importsym       go to state 495
    hidden_type            go to state 629
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499
    ohidden_funres         go to state 647
    hidden_funres          go to state 631


State 644

  326 hidden_constant: '(' hidden_literal '+' hidden_literal ')' .

    $default  reduce using rule 326 (hidden_constant)


State 645

  192 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 485
    LFUNC       shift, and go to state 486
    LINTERFACE  shift, and go to state 487
    LMAP        shift, and go to state 488
    LNAME       shift, and go to state 489
    LSTRUCT     shift, and go to state 490
    LCOMM       shift, and go to state 491
    '*'         shift, and go to state 492
    '('         shift, and go to state 628
    '['         shift, and go to state 494
    '@'         shift, and go to state 6

    $default  reduce using rule 318 (ohidden_funres)

    hidden_importsym       go to state 495
    hidden_type            go to state 629
    hidden_type_misc       go to state 497
    hidden_type_recv_chan  go to state 498
    hidden_type_func       go to state 499
    ohidden_funres         go to state 648
    hidden_funres          go to state 631


State 646

  320 hidden_funres: '(' ohidden_funarg_list ')' .

    $default  reduce using rule 320 (hidden_funres)


State 647

  316 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 316 (hidden_interfacedcl)


State 648

  192 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 192 (hidden_fndcl)
